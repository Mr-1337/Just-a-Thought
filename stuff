warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_clipboard.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_error.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_filesystem.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_gesture.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_keyboard.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_loadso.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_messagebox.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_mutex.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_opengles.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_opengles2.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_pixels.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_power.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_quit.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_rect.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_revision.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test_common.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test_compare.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test_crc32.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test_log.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test_md5.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test_random.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_timer.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_touch.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_types.h.
The file will have its original line endings in your working directory.
[1mdiff --git a/Just a Thought.sln b/Just a Thought.sln[m
[1mindex 5fe0aac..fdb8961 100644[m
[1m--- a/Just a Thought.sln[m	
[1m+++ b/Just a Thought.sln[m	
[36m@@ -1,7 +1,7 @@[m
 ï»¿[m
 Microsoft Visual Studio Solution File, Format Version 12.00[m
[31m-# Visual Studio 14[m
[31m-VisualStudioVersion = 14.0.25420.1[m
[32m+[m[32m# Visual Studio 15[m
[32m+[m[32mVisualStudioVersion = 15.0.27004.2009[m
 MinimumVisualStudioVersion = 10.0.40219.1[m
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "Just a Thought", "Just a Thought\Just a Thought.vcxproj", "{741BA3FD-6379-4D6D-A3AC-06087AEB5EC4}"[m
 EndProject[m
[36m@@ -19,10 +19,13 @@[m [mGlobal[m
 		{741BA3FD-6379-4D6D-A3AC-06087AEB5EC4}.Debug|x86.Build.0 = Debug|Win32[m
 		{741BA3FD-6379-4D6D-A3AC-06087AEB5EC4}.Release|x64.ActiveCfg = Release|x64[m
 		{741BA3FD-6379-4D6D-A3AC-06087AEB5EC4}.Release|x64.Build.0 = Release|x64[m
[31m-		{741BA3FD-6379-4D6D-A3AC-06087AEB5EC4}.Release|x86.ActiveCfg = Release|Win32[m
[31m-		{741BA3FD-6379-4D6D-A3AC-06087AEB5EC4}.Release|x86.Build.0 = Release|Win32[m
[32m+[m		[32m{741BA3FD-6379-4D6D-A3AC-06087AEB5EC4}.Release|x86.ActiveCfg = Debug|Win32[m
[32m+[m		[32m{741BA3FD-6379-4D6D-A3AC-06087AEB5EC4}.Release|x86.Build.0 = Debug|Win32[m
 	EndGlobalSection[m
 	GlobalSection(SolutionProperties) = preSolution[m
 		HideSolutionNode = FALSE[m
 	EndGlobalSection[m
[32m+[m	[32mGlobalSection(ExtensibilityGlobals) = postSolution[m
[32m+[m		[32mSolutionGuid = {EBAA2103-1076-4CF0-B7B5-A573FC387A83}[m
[32m+[m	[32mEndGlobalSection[m
 EndGlobal[m
[1mdiff --git a/Just a Thought/Assets/Sound/music.wav b/Just a Thought/Assets/Sound/music.wav[m
[1mindex 4f97643..6a2dba3 100644[m
Binary files a/Just a Thought/Assets/Sound/music.wav and b/Just a Thought/Assets/Sound/music.wav differ
[1mdiff --git a/Just a Thought/Assets/music.wav b/Just a Thought/Assets/music.wav[m
[1mdeleted file mode 100644[m
[1mindex 4f97643..0000000[m
Binary files a/Just a Thought/Assets/music.wav and /dev/null differ
[1mdiff --git a/Just a Thought/GameEngine.cpp b/Just a Thought/GameEngine.cpp[m
[1mindex d64a4e5..8c992fe 100644[m
[1m--- a/Just a Thought/GameEngine.cpp[m	
[1m+++ b/Just a Thought/GameEngine.cpp[m	
[36m@@ -26,7 +26,7 @@[m [mGameEngine::GameEngine():m_quit(false)[m
 			SDL_SetRenderDrawBlendMode(m_renderer, SDL_BLENDMODE_BLEND);[m
 			std::cout << "Engine construction successful!" << std::endl;[m
 			stateMachine.setRenderer(m_renderer);[m
[31m-			stateMachine.setState(GameState::STATE_EDITOR);[m
[32m+[m			[32mstateMachine.setState(GameState::STATE_TITLE);[m
 		}[m
 	}[m
 }[m
[36m@@ -41,6 +41,11 @@[m [mvoid GameEngine::appLoop()[m
 {[m
 	while (!m_quit)[m
 	{[m
[32m+[m		[32mif (stateMachine.getNextState() == GameState::STATE_QUIT)[m
[32m+[m		[32m{[m
[32m+[m			[32mm_quit = true;[m
[32m+[m			[32mcontinue;[m
[32m+[m		[32m}[m
 		stateMachine.setState(stateMachine.getNextState());[m
 		eventHandler();[m
 		stateMachine.update();[m
[1mdiff --git a/Just a Thought/Intro.cpp b/Just a Thought/Intro.cpp[m
[1mindex df80415..0897e3c 100644[m
[1m--- a/Just a Thought/Intro.cpp[m	
[1m+++ b/Just a Thought/Intro.cpp[m	
[36m@@ -34,15 +34,15 @@[m [mvoid Intro::loadMedia()[m
 	{[m
 	case 0:[m
 		splash->loadImg("Assets/Graphics/the chef.png");[m
[31m-		splash->setPosition(-300, 0);[m
[32m+[m		[32msplash->setX(-300);[m
 		break;[m
 	case 1:[m
 		splash->loadImg("Assets/Graphics/Shrek.png");[m
[31m-		splash->setPosition(-400, 0);[m
[32m+[m		[32msplash->setX(-400);[m
 		break;[m
 	case 2:[m
 		splash->loadImg("Assets/Graphics/Elmo.png");[m
[31m-		splash->setPosition(0, 0);[m
[32m+[m		[32msplash->setX(0);[m
 		break;[m
 	}[m
 [m
[36m@@ -70,11 +70,11 @@[m [mvoid Intro::update()[m
 		alpha = 0;[m
 	SDL_SetRenderDrawColor(m_renderer, 255, 255, 255, (255.0 - alpha)/100);[m
 [m
[31m-	splash->draw(NULL,(255-alpha)/5);[m
[32m+[m	[32msplash->draw((255-alpha)/5);[m
 	SDL_RenderFillRect(m_renderer, &overlay);[m
 [m
 	timer++;[m
[31m-	if (timer > 660)[m
[32m+[m	[32mif (timer > 600)[m
 	{[m
 		nextState = GameState::STATE_TITLE;[m
 	}[m
[1mdiff --git a/Just a Thought/Just a Thought.vcxproj b/Just a Thought/Just a Thought.vcxproj[m
[1mindex 80bcfb3..caf9eba 100644[m
[1m--- a/Just a Thought/Just a Thought.vcxproj[m	
[1m+++ b/Just a Thought/Just a Thought.vcxproj[m	
[36m@@ -19,7 +19,42 @@[m
     </ProjectConfiguration>[m
   </ItemGroup>[m
   <ItemGroup>[m
[32m+[m[32m    <ClCompile Include="ButtonBase.cpp" />[m
[32m+[m[32m    <ClCompile Include="Editor.cpp" />[m
[32m+[m[32m    <ClCompile Include="GameEngine.cpp" />[m
[32m+[m[32m    <ClCompile Include="GameSettings.cpp" />[m
[32m+[m[32m    <ClCompile Include="GameState.cpp" />[m
[32m+[m[32m    <ClCompile Include="Intro.cpp" />[m
[32m+[m[32m    <ClCompile Include="Level1.cpp" />[m
[32m+[m[32m    <ClCompile Include="LevelConverter.cpp" />[m
     <ClCompile Include="main.cpp" />[m
[32m+[m[32m    <ClCompile Include="MenuButton.cpp" />[m
[32m+[m[32m    <ClCompile Include="Player.cpp" />[m
[32m+[m[32m    <ClCompile Include="Sprite.cpp" />[m
[32m+[m[32m    <ClCompile Include="StateMachine.cpp" />[m
[32m+[m[32m    <ClCompile Include="Title.cpp" />[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <ClInclude Include="ButtonBase.h" />[m
[32m+[m[32m    <ClInclude Include="Editor.h" />[m
[32m+[m[32m    <ClInclude Include="GameEngine.h" />[m
[32m+[m[32m    <ClInclude Include="GameSettings.h" />[m
[32m+[m[32m    <ClInclude Include="GameState.h" />[m
[32m+[m[32m    <ClInclude Include="Intro.h" />[m
[32m+[m[32m    <ClInclude Include="Level1.h" />[m
[32m+[m[32m    <ClInclude Include="LevelConverter.h" />[m
[32m+[m[32m    <ClInclude Include="MenuButton.h" />[m
[32m+[m[32m    <ClInclude Include="Player.h" />[m
[32m+[m[32m    <ClInclude Include="resource.h" />[m
[32m+[m[32m    <ClInclude Include="Sprite.h" />[m
[32m+[m[32m    <ClInclude Include="StateMachine.h" />[m
[32m+[m[32m    <ClInclude Include="Title.h" />[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <ResourceCompile Include="Just a Thought.rc" />[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <Image Include="jat.ico" />[m
   </ItemGroup>[m
   <PropertyGroup Label="Globals">[m
     <ProjectGuid>{741BA3FD-6379-4D6D-A3AC-06087AEB5EC4}</ProjectGuid>[m
[36m@@ -82,6 +117,8 @@[m
   </PropertyGroup>[m
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">[m
     <LinkIncremental>false</LinkIncremental>[m
[32m+[m[32m    <IncludePath>$(ProjectDir)Libraries\include;$(IncludePath)</IncludePath>[m
[32m+[m[32m    <LibraryPath>$(ProjectDir)Libraries\lib;$(LibraryPath)</LibraryPath>[m
   </PropertyGroup>[m
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">[m
     <LinkIncremental>false</LinkIncremental>[m
[36m@@ -98,7 +135,7 @@[m
     <Link>[m
       <SubSystem>Console</SubSystem>[m
       <GenerateDebugInformation>true</GenerateDebugInformation>[m
[31m-      <AdditionalDependencies>SDL2.lib;SDL2main.lib;SDL2_image.lib;SDL2_ttf.lib;SDL2_mixer.lib;SDL2test.lib;%(AdditionalDependencies)</AdditionalDependencies>[m
[32m+[m[32m      <AdditionalDependencies>SDL2.lib;SDL2main.lib;SDL2_image.lib;SDL2_ttf.lib;SDL2_mixer.lib;SDL2test.lib;SDL2_net.lib;%(AdditionalDependencies)</AdditionalDependencies>[m
     </Link>[m
   </ItemDefinitionGroup>[m
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">[m
[36m@@ -131,6 +168,7 @@[m
       <EnableCOMDATFolding>true</EnableCOMDATFolding>[m
       <OptimizeReferences>true</OptimizeReferences>[m
       <GenerateDebugInformation>true</GenerateDebugInformation>[m
[32m+[m[32m      <AdditionalDependencies>SDL2.lib;SDL2main.lib;SDL2_image.lib;SDL2_ttf.lib;SDL2_mixer.lib;SDL2test.lib;SDL2_net.lib;%(AdditionalDependencies)</AdditionalDependencies>[m
     </Link>[m
   </ItemDefinitionGroup>[m
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">[m
[1mdiff --git a/Just a Thought/Just a Thought.vcxproj.filters b/Just a Thought/Just a Thought.vcxproj.filters[m
[1mindex 27758ee..000a819 100644[m
[1m--- a/Just a Thought/Just a Thought.vcxproj.filters[m	
[1m+++ b/Just a Thought/Just a Thought.vcxproj.filters[m	
[36m@@ -13,13 +13,103 @@[m
       <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>[m
       <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>[m
     </Filter>[m
[31m-    <Filter Include="Assets">[m
[31m-      <UniqueIdentifier>{f11a6989-1850-4f82-a7cf-962590ab954e}</UniqueIdentifier>[m
[31m-    </Filter>[m
   </ItemGroup>[m
   <ItemGroup>[m
     <ClCompile Include="main.cpp">[m
       <Filter>Source Files</Filter>[m
     </ClCompile>[m
[32m+[m[32m    <ClCompile Include="GameEngine.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="Sprite.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="Player.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="StateMachine.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="GameState.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="Intro.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="Title.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="Level1.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="GameSettings.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="LevelConverter.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="Editor.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="ButtonBase.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="MenuButton.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <ClInclude Include="GameEngine.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="Sprite.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="Player.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="StateMachine.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="GameState.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="Intro.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="Title.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="Level1.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="resource.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <Clwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_version.h.
The file will have its original line endings in your working directory.
Include Include="GameSettings.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="LevelConverter.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="Editor.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="ButtonBase.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="MenuButton.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <ResourceCompile Include="Just a Thought.rc">[m
[32m+[m[32m      <Filter>Resource Files</Filter>[m
[32m+[m[32m    </ResourceCompile>[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <Image Include="jat.ico">[m
[32m+[m[32m      <Filter>Resource Files</Filter>[m
[32m+[m[32m    </Image>[m
   </ItemGroup>[m
 </Project>[m
\ No newline at end of file[m
[1mdiff --git a/Just a Thought/Level1.cpp b/Just a Thought/Level1.cpp[m
[1mindex e2d3678..f93cc99 100644[m
[1m--- a/Just a Thought/Level1.cpp[m	
[1m+++ b/Just a Thought/Level1.cpp[m	
[36m@@ -2,24 +2,23 @@[m
 [m
 Level1::Level1()[m
 {[m
[32m+[m
 }[m
 [m
 [m
 Level1::~Level1()[m
 {[m
[31m-}[m
 [m
[32m+[m[32m}[m
 [m
 void Level1::update()[m
[31m-{[m
[32m+[m[32m{[m[41m	[m
 	m_player->update();[m
 }[m
 [m
[31m-[m
 void Level1::draw()[m
 {[m
[31m-	SDL_RenderClear(m_renderer);	[m
[31m-	m_ground->draw();[m
[32m+[m	[32mSDL_RenderClear(m_renderer);[m
 	m_player->draw();[m
 	SDL_RenderPresent(m_renderer);[m
 }[m
[36m@@ -28,19 +27,4 @@[m [mvoid Level1::draw()[m
 void Level1::init()[m
 {[m
 	m_player = new Player(m_renderer);[m
[31m-	m_ground = new Sprite(m_renderer);[m
[31m-	m_ground->loadImg("Assets/Graphics/ground.png");[m
[31m-	m_ground->draw();[m
[31m-	SDL_Surface* cursor = IMG_Load("Assets/Graphics/cursor.png");[m
[31m-	SDL_SetCursor(SDL_CreateColorCursor(cursor, 0, 0));[m
[31m-	//outputPixels();[m
[31m-}[m
[31m-[m
[31m-void Level1::outputPixels()[m
[31m-{[m
[31m-	LevelConverter lc(1024,768);[m
[31m-	lc.openFile("Assets/Graphics/ground.data");[m
[31m-	lc.formatBytes();[m
[31m-	lc.outputBytes();[m
[31m-	//lc.printBytes();[m
 }[m
[1mdiff --git a/Just a Thought/Level1.h b/Just a Thought/Level1.h[m
[1mindex 8992bc6..5c26501 100644[m
[1m--- a/Just a Thought/Level1.h[m	
[1m+++ b/Just a Thought/Level1.h[m	
[36m@@ -12,11 +12,8 @@[m [mpublic:[m
 	void update();[m
 	void draw();[m
 	void init();[m
[31m-	void outputPixels();[m
 [m
 private:[m
 	Player* m_player;[m
[31m-	Sprite* m_ground;[m
[31m-[m
 };[m
 [m
[1mdiff --git a/Just a Thought/Libraries/include/SDL.h b/Just a Thought/Libraries/include/SDL.h[m
[1mindex 1a3fa28..366d50f 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -26,8 +26,8 @@[m
  */[m
 [m
 [m
[31m-#ifndef _SDL_H[m
[31m-#define _SDL_H[m
[32m+[m[32m#ifndef SDL_h_[m
[32m+[m[32m#define SDL_h_[m
 [m
 #include "SDL_main.h"[m
 #include "SDL_stdinc.h"[m
[36m@@ -40,10 +40,10 @@[m
 #include "SDL_error.h"[m
 #include "SDL_events.h"[m
 #include "SDL_filesystem.h"[m
[31m-#include "SDL_joystick.h"[m
 #include "SDL_gamecontroller.h"[m
 #include "SDL_haptic.h"[m
 #include "SDL_hints.h"[m
[32m+[m[32m#include "SDL_joystick.h"[m
 #include "SDL_loadso.h"[m
 #include "SDL_log.h"[m
 #include "SDL_messagewarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL.h.
The file will have its original line endings in your working directory.
box.h"[m
[36m@@ -51,6 +51,7 @@[m
 #include "SDL_power.h"[m
 #include "SDL_render.h"[m
 #include "SDL_rwops.h"[m
[32m+[m[32m#include "SDL_shape.h"[m
 #include "SDL_system.h"[m
 #include "SDL_thread.h"[m
 #include "SDL_timer.h"[m
[36m@@ -127,6 +128,6 @@[m [mextern DECLSPEC void SDLCALL SDL_Quit(void);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_H */[m
[32m+[m[32m#endif /* SDL_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_assert.h b/Just a Thought/Libraries/include/SDL_assert.h[m
[1mindex 402981f..90abbe3 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_assert.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_assert.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -19,8 +19,8 @@[m
   3. This notice may not be removed or altered from any source distribution.[m
 */[m
 [m
[31m-#ifndef _SDL_assert_h[m
[31m-#define _SDL_assert_h[m
[32m+[m[32m#ifndef SDL_assert_h_[m
[32m+[m[32m#define SDL_assert_h_[m
 [m
 #include "SDL_config.h"[m
 [m
[36m@@ -51,9 +51,11 @@[m [massert can have unique static variables associated with it.[m
 /* Don't include intrin.h here because it contains C++ code */[m
     extern void __cdecl __debugbreak(void);[m
     #define SDL_TriggerBreakpoint() __debugbreak()[m
[31m-#elif (!defined(__NACL__) && defined(__GNUC__) && (defined(__i386__) || defined(__x86_64__)))[m
[32m+[m[32m#elif ( (!defined(__NACL__)) && ((defined(__GNUC__) || defined(__clang__)) && (defined(__i386__) || defined(__x86_64__))) )[m
     #define SDL_TriggerBreakpoint() __asm__ __volatile__ ( "int $3\n\t" )[m
[31m-#elif defined(HAVE_SIGNAL_H)[m
[32m+[m[32m#elif defined(__386__) && defined(__WATCOMC__)[m
[32m+[m[32m    #define SDL_TriggerBreakpoint() { _asm { int 0x03 } }[m
[32m+[m[32m#elif defined(HAVE_SIGNAL_H) && !defined(__WATCOMC__)[m
     #include <signal.h>[m
     #define SDL_TriggerBreakpoint() raise(SIGTRAP)[m
 #else[m
[36m@@ -63,7 +65,7 @@[m [massert can have unique static variables associated with it.[m
 [m
 #if defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901L) /* C99 supports __func__ as a standard. */[m
 #   define SDL_FUNCTION __func__[m
[31m-#elif ((__GNUC__ >= 2) || defined(_MSC_VER))[m
[32m+[m[32m#elif ((__GNUC__ >= 2) || defined(_MSC_VER) || defined (__WATCOMC__))[m
 #   define SDL_FUNCTION __FUNCTION__[m
 #else[m
 #   define SDL_FUNCTION "???"[m
[36m@@ -201,7 +203,7 @@[m [mtypedef SDL_AssertState (SDLCALL *SDL_AssertionHandler)([m
  *[m
  *  This callback is NOT reset to SDL's internal handler upon SDL_Quit()![m
  *[m
[31m- *  \return SDL_AssertState value of how to handle the assertion failure.[m
[32m+[m[32m *  Return SDL_AssertState value of how to handle the assertion failure.[m
  *[m
  *  \param handler Callback function, called when an assertion fails.[m
  *  \param userdata A pointer passed to the callback as-is.[m
[36m@@ -250,7 +252,7 @@[m [mextern DECLSPEC SDL_AssertionHandler SDLCALL SDL_GetAssertionHandler(void **puse[m
  *  <code>[m
  *  const SDL_AssertData *item = SDL_GetAssertionReport();[m
  *  while (item) {[m
[31m- *      printf("'%s', %s (%s:%d), triggered %u times, always ignore: %s.\n",[m
[32m+[m[32m *      printf("'%s', %s (%s:%d), triggered %u times, always ignore: %s.\\n",[m
  *             item->condition, item->function, item->filename,[m
  *             item->linenum, item->trigger_count,[m
  *             item->always_ignore ? "yes" : "no");[m
[36m@@ -284,6 +286,6 @@[m [mextern DECLSPEC void SDLCALL SDL_ResetAssertionReport(void);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_assert_h */[m
[32m+[m[32m#endif /* SDL_assert_h_ */[m
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_assert.h.
The file will have its original line endings in your working directory.
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_atomic.h b/Just a Thought/Libraries/include/SDL_atomic.h[m
[1mindex 56aa81d..36e37f3 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_atomic.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_atomic.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -56,8 +56,8 @@[m
  * All of the atomic operations that modify memory are full memory barriers.[m
  */[m
 [m
[31m-#ifndef _SDL_atomic_h_[m
[31m-#define _SDL_atomic_h_[m
[32m+[m[32m#ifndef SDL_atomic_h_[m
[32m+[m[32m#define SDL_atomic_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_platform.h"[m
[36m@@ -118,13 +118,16 @@[m [mextern DECLSPEC void SDLCALL SDL_AtomicUnlock(SDL_SpinLock *lock);[m
  * The compiler barrier prevents the compiler from reordering[m
  * reads and writes to globally visible variables across the call.[m
  */[m
[31m-#if defined(_MSC_VER) && (_MSC_VER > 1200)[m
[32m+[m[32m#if defined(_MSC_VER) && (_MSC_VER > 1200) && !defined(__clang__)[m
 void _ReadWriteBarrier(void);[m
 #pragma intrinsic(_ReadWriteBarrier)[m
 #define SDL_CompilerBarrier()   _ReadWriteBarrier()[m
 #elif (defined(__GNUC__) && !defined(__EMSCRIPTEN__)) || (defined(__SUNPRO_C) && (__SUNPRO_C >= 0x5120))[m
 /* This is correct for all CPUs when using GCC or Solaris Studio 12.1+. */[m
 #define SDL_CompilerBarrier()   __asm__ __volatile__ ("" : : : "memory")[m
[32m+[m[32m#elif defined(__WATCOMC__)[m
[32m+[m[32mextern _inline void SDL_CompilerBarrier (void);[m
[32m+[m[32m#pragma aux SDL_CompilerBarrier = "" parm [] modify exact [];[m
 #else[m
 #define SDL_CompilerBarrier()   \[m
 { SDL_SpinLock _tmp = 0; SDL_AtomicLock(&_tmp); SDL_AtomicUnlock(&_tmp); }[m
[36m@@ -149,6 +152,9 @@[m [mvoid _ReadWriteBarrier(void);[m
  * For more information on these semantics, take a look at the blog post:[m
  * http://preshing.com/20120913/acquire-and-release-semantics[m
  */[m
[32m+[m[32mextern DECLSPEC void SDLCALL SDL_MemoryBarrierReleaseFunction(void);[m
[32m+[m[32mextern DECLSPEC void SDLCALL SDL_MemoryBarrierAcquireFunction(void);[m
[32m+[m
 #if defined(__GNUC__) && (defined(__powerpc__) || defined(__ppc__))[m
 #define SDL_MemoryBarrierRelease()   __asm__ __volatile__ ("lwsync" : : : "memory")[m
 #define SDL_MemoryBarrierAcquire()   __asm__ __volatile__ ("lwsync" : : : "memory")[m
[36m@@ -156,11 +162,11 @@[m [mvoid _ReadWriteBarrier(void);[m
 #if defined(__ARM_ARCH_7__) || defined(__ARM_ARCH_7A__) || defined(__ARM_ARCH_7EM__) || defined(__ARM_ARCH_7R__) || defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7S__)[m
 #define SDL_MemoryBarrierRelease()   __asm__ __volatile__ ("dmb ish" : : : "memory")[m
 #define SDL_MemoryBarrierAcquire()   __asm__ __volatile__ ("dmb ish" : : : "memory")[m
[31m-#elif defined(__ARM_ARCH_6__) || defined(__ARM_ARCH_6J__) || defined(__ARM_ARCH_6K__) || defined(__ARM_ARCH_6T2__) || defined(__ARM_ARCH_6Z__) || defined(__ARM_ARCH_6ZK__)[m
[32m+[m[32m#elif defined(__ARM_ARCH_6__) || defined(__ARM_ARCH_6J__) || defined(__ARM_ARCH_6K__) || defined(__ARM_ARCH_6T2__) || defined(__ARM_ARCH_6Z__) || defined(__ARM_ARCH_6ZK__) || defined(__ARM_ARCH_5TE__)[m
 #ifdef __thumb__[m
 /* The mcr instruction isn't available in thumb mode, use real functions */[m
[31m-extern DECLSPEC void SDLCALL SDL_MemoryBarrierRelease();[m
[31m-extern DECLSPEC void SDLCALL SDL_MemoryBarrierAcquire();[m
[32m+[m[32m#define SDL_MemoryBarrierRelease()   SDL_MemoryBarrierReleaseFunction()[m
[32m+[m[32m#define SDL_MemoryBarrierAcquire()   SDL_MemoryBarrierAcquireFunction()[m
 #else[m
 #define SDL_MemoryBarrierRelease()   __asm__ __volatile__ ("mcr p15, 0, %0, c7, c10, 5" : : "r"(0) : "memory")[m
 #warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_atomic.h.
The file will have its original line endings in your working directory.
define SDL_MemoryBarrierAcquire()   __asm__ __volatile__ ("mcr p15, 0, %0, c7, c10, 5" : : "r"(0) : "memory")[m
[36m@@ -263,6 +269,6 @@[m [mextern DECLSPEC void* SDLCALL SDL_AtomicGetPtr(void **a);[m
 [m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_atomic_h_ */[m
[32m+[m[32m#endif /* SDL_atomic_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_audio.h b/Just a Thought/Libraries/include/SDL_audio.h[m
[1mindex d51f0d1..f119c2b 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_audio.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_audio.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Access to the raw audio mixing buffer for the SDL library.[m
  */[m
 [m
[31m-#ifndef _SDL_audio_h[m
[31m-#define _SDL_audio_h[m
[32m+[m[32m#ifndef SDL_audio_h_[m
[32m+[m[32m#define SDL_audio_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -164,6 +164,15 @@[m [mtypedef void (SDLCALL * SDL_AudioCallback) (void *userdata, Uint8 * stream,[m
 [m
 /**[m
  *  The calculated values in this structure are calculated by SDL_OpenAudio().[m
[32m+[m[32m *[m
[32m+[m[32m *  For multi-channel audio, the default SDL channel mapping is:[m
[32m+[m[32m *  2:  FL FR                       (stereo)[m
[32m+[m[32m *  3:  FL FR LFE                   (2.1 surround)[m
[32m+[m[32m *  4:  FL FR BL BR                 (quad)[m
[32m+[m[32m *  5:  FL FR FC BL BR              (quad + center)[m
[32m+[m[32m *  6:  FL FR FC LFE SL SR          (5.1 surround - last two can also be BL BR)[m
[32m+[m[32m *  7:  FL FR FC LFE BC SL SR       (6.1 surround)[m
[32m+[m[32m *  8:  FL FR FC LFE BL BR SL SR    (7.1 surround)[m
  */[m
 typedef struct SDL_AudioSpec[m
 {[m
[36m@@ -171,7 +180,7 @@[m [mtypedef struct SDL_AudioSpec[m
     SDL_AudioFormat format;     /**< Audio data format */[m
     Uint8 channels;             /**< Number of channels: 1 mono, 2 stereo */[m
     Uint8 silence;              /**< Audio buffer silence value (calculated) */[m
[31m-    Uint16 samples;             /**< Audio buffer size in samples (power of 2) */[m
[32m+[m[32m    Uint16 samples;             /**< Audio buffer size in sample FRAMES (total samples divided by channel count) */[m
     Uint16 padding;             /**< Necessary for some compile environments */[m
     Uint32 size;                /**< Audio buffer size in bytes (calculated) */[m
     SDL_AudioCallback callback; /**< Callback that feeds the audio device (NULL to use SDL_QueueAudio()). */[m
[36m@@ -184,7 +193,23 @@[m [mtypedef void (SDLCALL * SDL_AudioFilter) (struct SDL_AudioCVT * cvt,[m
                                           SDL_AudioFormat format);[m
 [m
 /**[m
[31m- *  A structure to hold a set of audio conversion filters and buffers.[m
[32m+[m[32m *  \brief Upper limit of filters in SDL_AudioCVT[m
[32m+[m[32m *[m
[32m+[m[32m *  The maximum number of SDL_AudioFilter functions in SDL_AudioCVT is[m
[32m+[m[32m *  currently limited to 9. The SDL_AudioCVT.filters array has 10 pointers,[m
[32m+[m[32m *  one of which is the terminating NULL pointer.[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_AUDIOCVT_MAX_FILTERS 9[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  \struct SDL_AudioCVT[m
[32m+[m[32m *  \brief A structure to hold a set of audio conversion filters and buffers.[m
[32m+[m[32m *[m
[32m+[m[32m *  Note that various parts of the conversion pipeline can take advantage[m
[32m+[m[32m *  of SIMD operations (like SSE2, for example). SDL_AudioCVT doesn't require[m
[32m+[m[32m *  you to pass it aligned data, but can possibly run much faster if you[m
[32m+[m[32m *  set both its (buf) field to a pointer that is aligned to 16 bytes, and its[m
[32m+[m[32m *  (len) field to something that's a multiple of 16, if possible.[m
  */[m
 #ifdef __GNUC__[m
 /* This structure is 84 bytes on 32-bit architectures, make sure GCC doesn't[m
[36m@@ -208,7 +233,7 @@[m [mtypedef struct SDL_AudioCVT[m
     int len_cvt;                /**< Length of converted audio buffer */[m
     int len_mult;               /**< buffer must be len*len_mult big */[m
     double len_ratio;           /**< Given len, final size is len*len_ratio */[m
[31m-    SDL_AudioFilter filters[10];        /**< Filter list */[m
[32m+[m[32m    SDL_AudioFilter filters[SDL_AUDIOCVT_MAX_FILTERS + 1]; /**< NULL-terminated list of filter functions */[m
     int filter_index;           /**< Current audio conversion function */[m
 } SDL_AUDIOCVT_PACKED SDL_AudioCVT;[m
 [m
[36m@@ -434,10 +459,10 @@[m [mextern DECLSPEC void SDLCALL SDL_FreeWAV(Uint8 * audio_buf);[m
  *  This function takes a source format and rate and a destination format[m
  *  and rate, and initializes the \c cvt structure with information needed[m
  *  by SDL_ConvertAudio() to convert a buffer of audio data from one format[m
[31m- *  to the other.[m
[32m+[m[32m *  to the other. An unsupported format causes an error and -1 will be returned.[m
  *[m
[31m- *  \return -1 if the format conversion is not supported, 0 if there's[m
[31m- *  no conversion needed, or 1 if the audio filter is set up.[m
[32m+[m[32m *  \return 0 if no conversion is needed, 1 if the audio filter is set up,[m
[32m+[m[32m *  or -1 on error.[m
  */[m
 extern DECLSPEC int SDLCALL SDL_BuildAudioCVT(SDL_AudioCVT * cvt,[m
                                               SDL_AudioFormat src_format,[m
[36m@@ -456,9 +481,137 @@[m [mextern DECLSPEC int SDLCALL SDL_BuildAudioCVT(SDL_AudioCVT * cvt,[m
  *  The data conversion may expand the size of the audio data, so the buffer[m
  *  \c cvt->buf should be allocated after the \c cvt structure is initialized by[m
  *  SDL_BuildAudioCVT(), and should be \c cvt->len*cvt->len_mult bytes long.[m
[32m+[m[32m *[m
[32m+[m[32m *  \return 0 on success or -1 if \c cvt->buf is NULL.[m
  */[m
 extern DECLSPEC int SDLCALL SDL_ConvertAudio(SDL_AudioCVT * cvt);[m
 [m
[32m+[m[32m/* SDL_AudioStream is a new audio conversion interface.[m
[32m+[m[32m   The benefits vs SDL_AudioCVT:[m
[32m+[m[32m    - it can handle resampling data in chunks without generating[m
[32m+[m[32m      artifacts, when it doesn't have the complete buffer available.[m
[32m+[m[32m    - it can handle incoming data in any variable size.[m
[32m+[m[32m    - You push data as you have it, and pull it when you need it[m
[32m+[m[32m */[m
[32m+[m[32m/* this is opaque to the outside world. */[m
[32m+[m[32mstruct _SDL_AudioStream;[m
[32m+[m[32mtypedef struct _SDL_AudioStream SDL_AudioStream;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Create a new audio stream[m
[32m+[m[32m *[m
[32m+[m[32m *  \param src_format The format of the source audio[m
[32m+[m[32m *  \param src_channels The number of channels of the source audio[m
[32m+[m[32m *  \param src_rate The sampling rate of the source audio[m
[32m+[m[32m *  \param dst_format The format of the desired audio output[m
[32m+[m[32m *  \param dst_channels The number of channels of the desired audio output[m
[32m+[m[32m *  \param dst_rate The sampling rate of the desired audio output[m
[32m+[m[32m *  \return 0 on success, or -1 on error.[m
[32m+[m[32m *[m
[32m+[m[32m *  \sa SDL_AudioStreamPut[m
[32m+[m[32m *  \sa SDL_AudioStreamGet[m
[32m+[m[32m *  \sa SDL_AudioStreamAvailable[m
[32m+[m[32m *  \sa SDL_AudioStreamFlush[m
[32m+[m[32m *  \sa SDL_AudioStreamClear[m
[32m+[m[32m *  \sa SDL_FreeAudioStream[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC SDL_AudioStream * SDLCALL SDL_NewAudioStream(const SDL_AudioFormat src_format,[m
[32m+[m[32m                                           const Uint8 src_channels,[m
[32m+[m[32m                                           const int src_rate,[m
[32m+[m[32m                                           const SDL_AudioFormat dst_format,[m
[32m+[m[32m                                           const Uint8 dst_channels,[m
[32m+[m[32m                                           const int dst_rate);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Add data to be converted/resampled to the stream[m
[32m+[m[32m *[m
[32m+[m[32m *  \param stream The stream the audio data is being added to[m
[32m+[m[32m *  \param buf A pointer to the audio data to add[m
[32m+[m[32m *  \param int The number of bytes to write to the stream[m
[32m+[m[32m *  \return 0 on success, or -1 on error.[m
[32m+[m[32m *[m
[32m+[m[32m *  \sa SDL_NewAudioStream[m
[32m+[m[32m *  \sa SDL_AudioStreamGet[m
[32m+[m[32m *  \sa SDL_AudioStreamAvailable[m
[32m+[m[32m *  \sa SDL_AudioStreamFlush[m
[32m+[m[32m *  \sa SDL_AudioStreamClear[m
[32m+[m[32m *  \sa SDL_FreeAudioStream[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_AudioStreamPut(SDL_AudioStream *stream, const void *buf, int len);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get converted/resampled data from the stream[m
[32m+[m[32m *[m
[32m+[m[32m *  \param stream The stream the audio is being requested from[m
[32m+[m[32m *  \param buf A buffer to fill with audio data[m
[32m+[m[32m *  \param len The maximum number of bytes to fill[m
[32m+[m[32m *  \return The number of bytes read from the stream, or -1 on error[m
[32m+[m[32m *[m
[32m+[m[32m *  \sa SDL_NewAudioStream[m
[32m+[m[32m *  \sa SDL_AudioStreamPut[m
[32m+[m[32m *  \sa SDL_AudioStreamAvailable[m
[32m+[m[32m *  \sa SDL_AudioStreamFlush[m
[32m+[m[32m *  \sa SDL_AudioStreamClear[m
[32m+[m[32m *  \sa SDL_FreeAudioStream[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_AudioStreamGet(SDL_AudioStream *stream, void *buf, int len);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Get the number of converted/resampled bytes available. The stream may be[m
[32m+[m[32m *  buffering data behind the scenes until it has enough to resample[m
[32m+[m[32m *  correctly, so this number might be lower than what you expect, or even[m
[32m+[m[32m *  be zero. Add more data or flush the stream if you need the data now.[m
[32m+[m[32m *[m
[32m+[m[32m *  \sa SDL_NewAudioStream[m
[32m+[m[32m *  \sa SDL_AudioStreamPut[m
[32m+[m[32m *  \sa SDL_AudioStreamGet[m
[32m+[m[32m *  \sa SDL_AudioStreamFlush[m
[32m+[m[32m *  \sa SDL_AudioStreamClear[m
[32m+[m[32m *  \sa SDL_FreeAudioStream[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_AudioStreamAvailable(SDL_AudioStream *stream);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Tell the stream that you're done sending data, and anything being buffered[m
[32m+[m[32m *  should be converted/resampled and made available immediately.[m
[32m+[m[32m *[m
[32m+[m[32m * It is legal to add more data to a stream after flushing, but there will[m
[32m+[m[32m *  be audio gaps in the output. Generally this is intended to signal the[m
[32m+[m[32m *  end of input, so the complete output becomes available.[m
[32m+[m[32m *[m
[32m+[m[32m *  \sa SDL_NewAudioStream[m
[32m+[m[32m *  \sa SDL_AudioStreamPut[m
[32m+[m[32m *  \sa SDL_AudioStreamGet[m
[32m+[m[32m *  \sa SDL_AudioStreamAvailable[m
[32m+[m[32m *  \sa SDL_AudioStreamClear[m
[32m+[m[32m *  \sa SDL_FreeAudioStream[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_AudioStreamFlush(SDL_AudioStream *stream);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Clear any pending data in the stream without converting it[m
[32m+[m[32m *[m
[32m+[m[32m *  \sa SDL_NewAudioStream[m
[32m+[m[32m *  \sa SDL_AudioStreamPut[m
[32m+[m[32m *  \sa SDL_AudioStreamGet[m
[32m+[m[32m *  \sa SDL_AudioStreamAvailable[m
[32m+[m[32m *  \sa SDL_AudioStreamFlush[m
[32m+[m[32m *  \swarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_audio.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_bits.h.
The file will have its original line endings in your working directory.
a SDL_FreeAudioStream[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC void SDLCALL SDL_AudioStreamClear(SDL_AudioStream *stream);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Free an audio stream[m
[32m+[m[32m *[m
[32m+[m[32m *  \sa SDL_NewAudioStream[m
[32m+[m[32m *  \sa SDL_AudioStreamPut[m
[32m+[m[32m *  \sa SDL_AudioStreamGet[m
[32m+[m[32m *  \sa SDL_AudioStreamAvailable[m
[32m+[m[32m *  \sa SDL_AudioStreamFlush[m
[32m+[m[32m *  \sa SDL_AudioStreamClear[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC void SDLCALL SDL_FreeAudioStream(SDL_AudioStream *stream);[m
[32m+[m
 #define SDL_MIX_MAXVOLUME 128[m
 /**[m
  *  This takes two audio buffers of the playing audio format and mixes[m
[36m@@ -514,7 +667,7 @@[m [mextern DECLSPEC void SDLCALL SDL_MixAudioFormat(Uint8 * dst,[m
  *  \param dev The device ID to which we will queue audio.[m
  *  \param data The data to queue to the device for later playback.[m
  *  \param len The number of bytes (not samples!) to which (data) points.[m
[31m- *  \return zero on success, -1 on error.[m
[32m+[m[32m *  \return 0 on success, or -1 on error.[m
  *[m
  *  \sa SDL_GetQueuedAudioSize[m
  *  \sa SDL_ClearQueuedAudio[m
[36m@@ -667,6 +820,6 @@[m [mextern DECLSPEC void SDLCALL SDL_CloseAudioDevice(SDL_AudioDeviceID dev);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_audio_h */[m
[32m+[m[32m#endif /* SDL_audio_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_bits.h b/Just a Thought/Libraries/include/SDL_bits.h[m
[1mindex 528da2e..bc28572 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_bits.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_bits.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Functions for fiddling with bits and bitmasks.[m
  */[m
 [m
[31m-#ifndef _SDL_bits_h[m
[31m-#define _SDL_bits_h[m
[32m+[m[32m#ifndef SDL_bits_h_[m
[32m+[m[32m#define SDL_bits_h_[m
 [m
 #include "SDL_stdinc.h"[m
 [m
[36m@@ -47,10 +47,20 @@[m [mextern "C" {[m
  *[m
  *  \return Index of the most significant bit, or -1 if the value is 0.[m
  */[m
[32m+[m[32m#if defined(__WATCOMC__) && defined(__386__)[m
[32m+[m[32mextern _inline int _SDL_clz_watcom (Uint32);[m
[32m+[m[32m#pragma aux _SDL_clz_watcom = \[m
[32m+[m[32m    "bsr eax, eax" \[m
[32m+[m[32m    "xor eax, 31" \[m
[32m+[m[32m    parm [eax] nomemory \[m
[32m+[m[32m    value [eax] \[m
[32m+[m[32m    modify exact [eax] nomemory;[m
[32m+[m[32m#endif[m
[32m+[m
 SDL_FORCE_INLINE int[m
 SDL_MostSignificantBitIndex32(Uint32 x)[m
 {[m
[31m-#if defined(__GNUC__) && __GNUC__ >= 4[m
[32m+[m[32m#if defined(__GNUC__) && (__GNUC__ >= 4 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))[m
     /* Count Leading Zeroes builtin in GCC.[m
      * http://gcc.gnu.org/onlinedocs/gcc-4.3.4/gcc/Other-Builtins.html[m
      */[m
[36m@@ -58,6 +68,11 @@[m [mSDL_MostSignificantBitIndex32(Uint32 x)[m
         return -1;[m
     }[m
     return 31 - __builtin_clz(x);[m
[32m+[m[32m#elif defined(__WATCOMC__) && defined(__386__)[m
[32m+[m[32m    if (x == 0) {[m
[32m+[m[32m        return -1;[m
[32m+[m[32m    }[m
[32m+[m[32m    return 31 - _SDL_clz_watcom(x);[m
 #else[m
     /* Based off of Bit Twiddling Hacks by Sean Eron Anderson[m
      * <seander@cs.stanford.edu>, released in the public domain.[m
[36m@@ -92,6 +107,6 @@[m [mSDL_MostSignificantBitIndex32(Uint32 x)[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_bits_h */[m
[32m+[m[32m#endif /* SDL_bits_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_blendmode.h b/Just a Thought/Libraries/include/SDL_blendmode.h[m
[1mindex 56d8ad6..9abd0bd 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_blendmode.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_blendmode.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Header file declaring the SDL_BlendMode enumeration[m
  */[m
 [m
[31m-#ifndef _SDL_blendmode_h[m
[31m-#define _SDL_blendmode_h[m
[32m+[m[32m#ifndef SDL_blendmode_h_[m
[32m+[m[32m#define SDL_blendmode_h_[m
 [m
 #include "begin_code.h"[m
 /* Set up for C function definitions, even when using C++ */[m
[36m@@ -47,17 +47,74 @@[m [mtypedef enum[m
     SDL_BLENDMODE_ADD = 0x00000002,      /**< additive blending[m
                                               dstRGB = (srcRGB * srcA) + dstRGB[m
                                               dstA = dstA */[m
[31m-    SDL_BLENDMODE_MOD = 0x00000004       /**< color modulate[m
[32m+[m[32m    SDL_BLENDMODE_MOD = 0x00000004,      /**< color modulate[m
                                               dstRGB = srcRGB * dstRGB[m
                                               dstA = dstA */[m
[32m+[m[32m    SDL_BLENDMODE_INVALID = 0x7FFFFFFF[m
[32m+[m
[32m+[m[32m    /* Additional custom blend modes can be returned by SDL_ComposeCustomBlendMode() */[m
[32m+[m
 } SDL_BlendMode;[m
 [m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief The blend operation used when combining source and destination pixel components[m
[32m+[m[32m */[m
[32m+[m[32mtypedef enum[m
[32m+[m[32m{[m
[32m+[m[32m    SDL_BLENDOPERATION_ADD              = 0x1,  /**< dst + src: supported by all renderers */[m
[32m+[m[32m    SDL_BLENDOPERATION_SUBTRACT         = 0x2,  /**< dst - src : supported by D3D9, D3D11, OpenGL, OpenGLES */[m
[32m+[m[32m    SDL_BLENDOPERATION_REV_SUBTRACT     = 0x3,  /**< src - dst : supported by D3D9, D3D11, OpenGL, OpenGLES */[m
[32m+[m[32m    SDL_BLENDOPERATION_MINIMUM          = 0x4,  /**< min(dst, src) : supported by D3D11 */[m
[32m+[m[32m    SDL_BLENDOPERATION_MAXIMUM          = 0x5   /**< max(dst, src) : supported by D3D11 */[m
[32m+[m
[32m+[m[32m} SDL_BlendOperation;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief The normalized factor used to multiply pixel components[m
[32m+[m[32m */[m
[32m+[m[32mtypedef enum[m
[32m+[m[32m{[m
[32m+[m[32m    SDL_BLENDFACTOR_ZERO                = 0x1,  /**< 0, 0, 0, 0 */[m
[32m+[m[32m    SDL_BLENDFACTOR_ONE                 = 0x2,  /**< 1, 1, 1, 1 */[m
[32m+[m[32m    SDL_BLENDFACTOR_SRC_COLOR           = 0x3,  /**< srcR, srcG, srcB, srcA */[m
[32m+[m[32m    SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR = 0x4,  /**< 1-srcR, 1-srcG, 1-srcB, 1-srcA */[m
[32m+[m[32m    SDL_BLENDFACTOR_SRC_ALPHA           = 0x5,  /**< srcA, srcA, srcA, srcA */[m
[32m+[m[32m    SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA = 0x6,  /**< 1-srcA, 1-srcA, 1-srcA, 1-srcA */[m
[32m+[m[32m    SDL_BLENDFACTOR_DST_COLOR           = 0x7,  /**< dstR, dstG, dstB, dstA */[m
[32m+[m[32m    SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR = 0x8,  /**< 1-dstR, 1-dstG, 1-dstB, 1-dstA */[m
[32m+[m[32m    SDL_BLENDFACTOR_DST_ALPHA           = 0x9,  /**< dstA, dstA, dstA, dstA */[m
[32m+[m[32m    SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA = 0xA   /**< 1-dstA, 1-dstA, 1-dstA, 1-dstA */[m
[32m+[m
[32m+[m[32m} SDL_BlendFactor;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief Create a custom blend mode, which may or may not be supported by a given renderer[m
[32m+[m[32m *[m
[32m+[m[32m *  \param srcColorFactor[m
[32m+[m[32m *  \param dstColorFactor[m
[32m+[m[32m *  \param colorOperation[m
[32m+[m[32m *  \param srcAlphaFactor[m
[32m+[m[32m *  \param dstAlphwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_blendmode.h.
The file will have its original line endings in your working directory.
aFactor[m
[32m+[m[32m *  \param alphaOperation[m
[32m+[m[32m *[m
[32m+[m[32m *  The result of the blend mode operation will be:[m
[32m+[m[32m *      dstRGB = dstRGB * dstColorFactor colorOperation srcRGB * srcColorFactor[m
[32m+[m[32m *  and[m
[32m+[m[32m *      dstA = dstA * dstAlphaFactor alphaOperation srcA * srcAlphaFactor[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC SDL_BlendMode SDLCALL SDL_ComposeCustomBlendMode(SDL_BlendFactor srcColorFactor,[m
[32m+[m[32m                                                                 SDL_BlendFactor dstColorFactor,[m
[32m+[m[32m                                                                 SDL_BlendOperation colorOperation,[m
[32m+[m[32m                                                                 SDL_BlendFactor srcAlphaFactor,[m
[32m+[m[32m                                                                 SDL_BlendFactor dstAlphaFactor,[m
[32m+[m[32m                                                                 SDL_BlendOperation alphaOperation);[m
[32m+[m
 /* Ends C function definitions when using C++ */[m
 #ifdef __cplusplus[m
 }[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_blendmode_h */[m
[32m+[m[32m#endif /* SDL_blendmode_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_clipboard.h b/Just a Thought/Libraries/include/SDL_clipboard.h[m
[1mindex a5556f2..341f4ba 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_clipboard.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_clipboard.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  * Include file for SDL clipboard handling[m
  */[m
 [m
[31m-#ifndef _SDL_clipboard_h[m
[31m-#define _SDL_clipboard_h[m
[32m+[m[32m#ifndef SDL_clipboard_h_[m
[32m+[m[32m#define SDL_clipboard_h_[m
 [m
 #include "SDL_stdinc.h"[m
 [m
[36m@@ -66,6 +66,6 @@[m [mextern DECLSPEC SDL_bool SDLCALL SDL_HasClipboardText(void);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_clipboard_h */[m
[32m+[m[32m#endif /* SDL_clipboard_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_config.h b/Just a Thought/Libraries/include/SDL_config.h[m
[1mindex 890986c..1bbb838 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_config.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_config.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -19,8 +19,9 @@[m
   3. This notice may not be removed or altered from any source distribution.[m
 */[m
 [m
[31m-#ifndef _SDL_config_windows_h[m
[31m-#define _SDL_config_windows_h[m
[32m+[m[32m#ifndef SDL_config_windows_h_[m
[32m+[m[32m#define SDL_config_windows_h_[m
[32m+[m[32m#define SDL_config_h_[m
 [m
 #include "SDL_platform.h"[m
 [m
[36m@@ -85,12 +86,14 @@[m [mtypedef unsigned int uintptr_t;[m
 /* This is disabled by default to avoid C runtime dependencies and manifest requirements */[m
 #ifdef HAVE_LIBC[m
 /* Useful headers */[m
[31m-#define HAVE_STDIO_H 1[m
 #define STDC_HEADERS 1[m
[31m-#define HAVE_STRING_H 1[m
 #define HAVE_CTYPE_H 1[m
[32m+[m[32m#define HAVE_FLOAT_H 1[m
[32m+[m[32m#define HAVE_LIMITS_H 1[m
 #define HAVE_MATH_H 1[m
 #define HAVE_SIGNAL_H 1[m
[32m+[m[32m#define HAVE_STDIO_H 1[m
[32m+[m[32m#define HAVE_STRING_H 1[m
 [m
 /* C library functionswarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_config.h.
The file will have its original line endings in your working directory.
 */[m
 #define HAVE_MALLOC 1[m
[36m@@ -139,12 +142,19 @@[m [mtypedef unsigned int uintptr_t;[m
 #define HAVE_SQRTF 1[m
 #define HAVE_TAN 1[m
 #define HAVE_TANF 1[m
[32m+[m[32m#define HAVE__COPYSIGN 1[m
[32m+[m[32m#if defined(_MSC_VER)[m
[32m+[m[32m/* These functions were added with the VC++ 2013 C runtime library */[m
 #if _MSC_VER >= 1800[m
 #define HAVE_STRTOLL 1[m
 #define HAVE_VSSCANF 1[m
[31m-#define HAVE_COPYSIGN 1[m
 #define HAVE_SCALBN 1[m
 #endif[m
[32m+[m[32m/* This function is available with at least the VC++ 2008 C runtime library */[m
[32m+[m[32m#if _MSC_VER >= 1400[m
[32m+[m[32m#define HAVE__FSEEKI64 1[m
[32m+[m[32m#endif[m
[32m+[m[32m#endif[m
 #if !defined(_MSC_VER) || defined(_USE_MATH_DEFINES)[m
 #define HAVE_M_PI 1[m
 #endif[m
[36m@@ -154,8 +164,9 @@[m [mtypedef unsigned int uintptr_t;[m
 #endif[m
 [m
 /* Enable various audio drivers */[m
[32m+[m[32m#define SDL_AUDIO_DRIVER_WASAPI 1[m
 #define SDL_AUDIO_DRIVER_DSOUND 1[m
[31m-#define SDL_AUDIO_DRIVER_XAUDIO2    1[m
[32m+[m[32m#define SDL_AUDIO_DRIVER_XAUDIO2    0[m
 #define SDL_AUDIO_DRIVER_WINMM  1[m
 #define SDL_AUDIO_DRIVER_DISK   1[m
 #define SDL_AUDIO_DRIVER_DUMMY  1[m
[36m@@ -206,6 +217,8 @@[m [mtypedef unsigned int uintptr_t;[m
 #define SDL_VIDEO_OPENGL_EGL    1[m
 #endif[m
 [m
[32m+[m[32m/* Enable Vulkan support */[m
[32m+[m[32m#define SDL_VIDEO_VULKAN 1[m
 [m
 /* Enable system power support */[m
 #define SDL_POWER_WINDOWS 1[m
[36m@@ -218,4 +231,4 @@[m [mtypedef unsigned int uintptr_t;[m
 #define SDL_ASSEMBLY_ROUTINES   1[m
 #endif[m
 [m
[31m-#endif /* _SDL_config_windows_h */[m
[32m+[m[32m#endif /* SDL_config_windows_h_ */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_cpuinfo.h b/Just a Thought/Libraries/include/SDL_cpuinfo.h[m
[1mindex d0ba47b..94b64b0 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_cpuinfo.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_cpuinfo.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,14 +25,20 @@[m
  *  CPU feature detection for SDL.[m
  */[m
 [m
[31m-#ifndef _SDL_cpuinfo_h[m
[31m-#define _SDL_cpuinfo_h[m
[32m+[m[32m#ifndef SDL_cpuinfo_h_[m
[32m+[m[32m#define SDL_cpuinfo_h_[m
 [m
 #include "SDL_stdinc.h"[m
 [m
 /* Need to do this here because intrin.h has C++ code in it */[m
 /* Visual Studio 2005 has a bug where intrin.h conflicts with winnt.h */[m
 #if defined(_MSC_VER) && (_MSC_VER >= 1500) && (defined(_M_IX86) || defined(_M_X64))[m
[32m+[m[32m#ifdef __clang__[m
[32m+[m[32m/* Many of the intrinsics SDL uses are not implemented by clang with Visual Studio */[m
[32m+[m[32m#undef __MMX__[m
[32m+[m[32m#undef __SSE__[m
[32m+[m[32m#undef __SSE2__[m
[32m+[m[32m#else[m
 #include <intrin.h>[m
 #ifndef _WIN64[m
 #define __MMX__[m
[36m@@ -40,6 +46,7 @@[m
 #endif[m
 #define __SSE__[m
 #define __SSE2__[m
[32m+[m[32m#endif /* __clang__ */[m
 #elif defined(__MINGW64_VERSION_MAJOR)[m
 #include <intrin.h>[m
 #else[m
[36m@@ -61,6 +68,9 @@[m
 #ifdef __SSE2__[m
 #include <emmintrin.h>[m
 #endif[m
[32m+[m[32m#ifdef __SSE3__[m
[32m+[m[32m#include <pmmintrin.h>[m
[32m+[m[32m#endif[m
 #endif[m
 [m
 #include "begin_code.h"[m
[36m@@ -145,6 +155,11 @@[m [mextern DECLSPEC SDL_bool SDLCALL SDL_HasAVX(void);[m
 extern DECLSPEC SDL_bool SDLCALL SDL_HasAVX2(void);[m
 [m
 /**[m
[32m+[m[32m *  This function returns true if the CPU has NEON (ARM SIMD) features.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC SDL_bool SDLCALL SDL_HasNEON(void);[m
[32m+[m
[32m+[m[32m/**[m
  *  This function returns the amount of RAM configured in the system, in MB.[m
  */[m
 extern DECLSPEC int SDLCALL SDL_GetSywarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_cpuinfo.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_egl.h.
The file will have its original line endings in your working directory.
stemRAM(void);[m
[36m@@ -156,6 +171,6 @@[m [mextern DECLSPEC int SDLCALL SDL_GetSystemRAM(void);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_cpuinfo_h */[m
[32m+[m[32m#endif /* SDL_cpuinfo_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_egl.h b/Just a Thought/Libraries/include/SDL_egl.h[m
[1mindex bea2a6c..e47fbe8 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_egl.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_egl.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -132,7 +132,7 @@[m
 *-------------------------------------------------------------------------[m
 * This precedes the return type of the function in the function prototype.[m
 */[m
[31m-#if defined(_WIN32) && !defined(__SCITECH_SNAP__)[m
[32m+[m[32m#if defined(_WIN32) && !defined(__SCITECH_SNAP__) && !defined(SDL_VIDEO_STATIC_ANGLE)[m
 #   define KHRONOS_APICALL __declspec(dllimport)[m
 #elif defined (__SYMBIAN32__)[m
 #   define KHRONOS_APICALL IMPORT_C[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_endian.h b/Just a Thought/Libraries/include/SDL_endian.h[m
[1mindex 9100b10..3eda7f2 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_endian.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_endian.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Functions for reading and writing endian-specific values[m
  */[m
 [m
[31m-#ifndef _SDL_endian_h[m
[31m-#define _SDL_endian_h[m
[32m+[m[32m#ifndef SDL_endian_h_[m
[32m+[m[32m#define SDL_endian_h_[m
 [m
 #include "SDL_stdinc.h"[m
 [m
[36m@@ -96,6 +96,12 @@[m [mSDL_Swap16(Uint16 x)[m
   __asm__("rorw #8,%0": "=d"(x): "0"(x):"cc");[m
     return x;[m
 }[m
[32m+[m[32m#elif defined(__WATCOMC__) && defined(__386__)[m
[32m+[m[32mextern _inline Uint16 SDL_Swap16(Uint16);[m
[32m+[m[32m#pragma aux SDL_Swap16 = \[m
[32m+[m[32m  "xchg al, ah" \[m
[32m+[m[32m  parm   [ax]   \[m
[32m+[m[32m  modify [ax];[m
 #else[m
 SDL_FORCE_INLINE Uint16[m
 SDL_Swap16(Uint16 x)[m
[36m@@ -136,6 +142,21 @@[m [mSDL_Swap32(Uint32 x)[m
   __asm__("rorw #8,%0\n\tswap %0\n\trorw #8,%0": "=d"(x): "0"(x):"cc");[m
     return x;[m
 }[m
[32m+[m[32m#elif defined(__WATCOMC__) && defined(__386__)[m
[32m+[m[32mextern _inline Uint32 SDL_Swap32(Uint32);[m
[32m+[m[32m#ifndef __SW_3 /* 486+ */[m
[32m+[m[32m#pragma aux SDL_Swap32 = \[m
[32m+[m[32m  "bswap eax"  \[m
[32m+[m[32m  parm   [eax] \[m
[32m+[m[32m  modify [eax];[m
[32m+[m[32m#else  /* 386-only */[m
[32m+[m[32m#pragma aux SDL_Swap32 = \[m
[32m+[m[32m  "xchg al, ah"  \[m
[32m+[m[32m  "ror  eax, 16" \[m
[32m+[m[32m  "xchg al, ah"  \[m
[32m+[m[32m  parm   [eax]   \[m
[32m+[m[32m  modify [eax];[m
[32m+[m[32m#endif[m
 #else[m
 SDL_FORCE_INLINE Uint32[m
 SDL_Swap32(Uint32 x)[m
[36m@@ -234,6 +255,6 @@[m [mSDL_SwapFloat(float x)[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_endian_h */[m
[32m+[m[32m#endif /* SDL_endian_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_error.h b/Just a Thought/Libraries/include/SDL_error.h[m
[1mindex 2f3b4b5..49be982 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_error.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_error.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_endian.h.
The file will have its original line endings in your working directory.
ple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Simple error message routines for SDL.[m
  */[m
 [m
[31m-#ifndef _SDL_error_h[m
[31m-#define _SDL_error_h[m
[32m+[m[32m#ifndef SDL_error_h_[m
[32m+[m[32m#define SDL_error_h_[m
 [m
 #include "SDL_stdinc.h"[m
 [m
[36m@@ -71,6 +71,6 @@[m [mextern DECLSPEC int SDLCALL SDL_Error(SDL_errorcode code);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_error_h */[m
[32m+[m[32m#endif /* SDL_error_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_events.h b/Just a Thought/Libraries/include/SDL_events.h[m
[1mindex edb89ef..0fc09bc 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_events.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_events.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Include file for SDL event handling.[m
  */[m
 [m
[31m-#ifndef _SDL_events_h[m
[31m-#define _SDL_events_h[m
[32m+[m[32m#ifndef SDL_events_h_[m
[32m+[m[32m#define SDL_events_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -165,7 +165,7 @@[m [mtypedef enum[m
 typedef struct SDL_CommonEvent[m
 {[m
     Uint32 type;[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
 } SDL_CommonEvent;[m
 [m
 /**[m
[36m@@ -174,7 +174,7 @@[m [mtypedef struct SDL_CommonEvent[m
 typedef struct SDL_WindowEvent[m
 {[m
     Uint32 type;        /**< ::SDL_WINDOWEVENT */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     Uint32 windowID;    /**< The associated window */[m
     Uint8 event;        /**< ::SDL_WindowEventID */[m
     Uint8 padding1;[m
[36m@@ -190,7 +190,7 @@[m [mtypedef struct SDL_WindowEvent[m
 typedef struct SDL_KeyboardEvent[m
 {[m
     Uint32 type;        /**< ::SDL_KEYDOWN or ::SDL_KEYUP */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     Uint32 windowID;    /**< The window with keyboard focus, if any */[m
     Uint8 state;        /**< ::SDL_PRESSED or ::SDL_RELEASED */[m
     Uint8 repeat;       /**< Non-zero if this is a key repeat */[m
[36m@@ -206,7 +206,7 @@[m [mtypedef struct SDL_KeyboardEvent[m
 typedef struct SDL_TextEditingEvent[m
 {[m
     Uint32 type;                                /**< ::SDL_TEXTEDITING */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;                           /**< In milliseconds, populated using SDL_GetTicks() */[m
     Uint32 windowID;                            /**< The window with keyboard focus, if any */[m
     char text[SDL_TEXTEDITINGEVENT_TEXT_SIZE];  /**< The editing text */[m
     Sint32 start;                               /**< The start cursor of selected editing text */[m
[36m@@ -221,7 +221,7 @@[m [mtypedef struct SDL_TextEditingEvent[m
 typedef struct SDL_TextInputEvent[m
 {[m
     Uint32 type;                              /**< ::SDL_TEXTINPUT */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;                         /**< In milliseconds, populated using SDL_GetTicks() */[m
     Uint32 windowID;                          /**< The window with keyboard focus, if any */[m
     char text[SDL_TEXTINPUTEVENT_TEXT_SIZE];  /**< The input text */[m
 } SDL_TextInputEvent;[m
[36m@@ -232,7 +232,7 @@[m [mtypedef struct SDL_TextInputEvent[m
 typedef struct SDL_MouseMotionEvent[m
 {[m
     Uint32 type;        /**< ::SDL_MOUSEMOTION */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     Uint32 windowID;    /**< The window with mouse focus, if any */[m
     Uint32 which;       /**< The mouse instance id, or SDL_TOUCH_MOUSEID */[m
     Uint32 state;       /**< The current button state */[m
[36m@@ -248,7 +248,7 @@[m [mtypedef struct SDL_MouseMotionEvent[m
 typedef struct SDL_MouseButtonEvent[m
 {[m
     Uint32 type;        /**< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     Uint32 windowID;    /**< The window with mouse focus, if any */[m
     Uint32 which;       /**< The mouse instance id, or SDL_TOUCH_MOUSEID */[m
     Uint8 button;       /**< The mouse button index */[m
[36m@@ -265,7 +265,7 @@[m [mtypedef struct SDL_MouseButtonEvent[m
 typedef struct SDL_MouseWheelEvent[m
 {[m
     Uint32 type;        /**< ::SDL_MOUSEWHEEL */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     Uint32 windowID;    /**< The window with mouse focus, if any */[m
     Uint32 which;       /**< The mouse instance id, or SDL_TOUCH_MOUSEID */[m
     Sint32 x;           /**< The amount scrolled horizontally, positive to the right and negative to the left */[m
[36m@@ -279,7 +279,7 @@[m [mtypedef struct SDL_MouseWheelEvent[m
 typedef struct SDL_JoyAxisEvent[m
 {[m
     Uint32 type;        /**< ::SDL_JOYAXISMOTION */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     SDL_JoystickID which; /**< The joystick instance id */[m
     Uint8 axis;         /**< The joystick axis index */[m
     Uint8 padding1;[m
[36m@@ -295,7 +295,7 @@[m [mtypedef struct SDL_JoyAxisEvent[m
 typedef struct SDL_JoyBallEvent[m
 {[m
     Uint32 type;        /**< ::SDL_JOYBALLMOTION */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     SDL_JoystickID which; /**< The joystick instance id */[m
     Uint8 ball;         /**< The joystick trackball index */[m
     Uint8 padding1;[m
[36m@@ -311,7 +311,7 @@[m [mtypedef struct SDL_JoyBallEvent[m
 typedef struct SDL_JoyHatEvent[m
 {[m
     Uint32 type;        /**< ::SDL_JOYHATMOTION */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     SDL_JoystickID which; /**< The joystick instance id */[m
     Uint8 hat;          /**< The joystick hat index */[m
     Uint8 value;        /**< The hat position value.[m
[36m@@ -331,7 +331,7 @@[m [mtypedef struct SDL_JoyHatEvent[m
 typedef struct SDL_JoyButtonEvent[m
 {[m
     Uint32 type;        /**< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     SDL_JoystickID which; /**< The joystick instance id */[m
     Uint8 button;       /**< The joystick button index */[m
     Uint8 state;        /**< ::SDL_PRESSED or ::SDL_RELEASED */[m
[36m@@ -345,7 +345,7 @@[m [mtypedef struct SDL_JoyButtonEvent[m
 typedef struct SDL_JoyDeviceEvent[m
 {[m
     Uint32 type;        /**< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     Sint32 which;       /**< The joystick device index for the ADDED event, instance id for the REMOVED event */[m
 } SDL_JoyDeviceEvent;[m
 [m
[36m@@ -356,7 +356,7 @@[m [mtypedef struct SDL_JoyDeviceEvent[m
 typedef struct SDL_ControllerAxisEvent[m
 {[m
     Uint32 type;        /**< ::SDL_CONTROLLERAXISMOTION */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     SDL_JoystickID which; /**< The joystick instance id */[m
     Uint8 axis;         /**< The controller axis (SDL_GameControllerAxis) */[m
     Uint8 padding1;[m
[36m@@ -373,7 +373,7 @@[m [mtypedef struct SDL_ControllerAxisEvent[m
 typedef struct SDL_ControllerButtonEvent[m
 {[m
     Uint32 type;        /**< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     SDL_JoystickID which; /**< The joystick instance id */[m
     Uint8 button;       /**< The controller button (SDL_GameControllerButton) */[m
     Uint8 state;        /**< ::SDL_PRESSED or ::SDL_RELEASED */[m
[36m@@ -388,7 +388,7 @@[m [mtypedef struct SDL_ControllerButtonEvent[m
 typedef struct SDL_ControllerDeviceEvent[m
 {[m
     Uint32 type;        /**< ::SDL_CONTROLLERDEVICEADDED, ::SDL_CONTROLLERDEVICEREMOVED, or ::SDL_CONTROLLERDEVICEREMAPPED */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     Sint32 which;       /**< The joystick device index for the ADDED event, instance id for the REMOVED or REMAPPED event */[m
 } SDL_ControllerDeviceEvent;[m
 [m
[36m@@ -398,7 +398,7 @@[m [mtypedef struct SDL_ControllerDeviceEvent[m
 typedef struct SDL_AudioDeviceEvent[m
 {[m
     Uint32 type;        /**< ::SDL_AUDIODEVICEADDED, or ::SDL_AUDIODEVICEREMOVED */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     Uint32 which;       /**< The audio device index for the ADDED event (valid until next SDL_GetNumAudioDevices() call), SDL_AudioDeviceID for the REMOVED event */[m
     Uint8 iscapture;    /**< zero if an output device, non-zero if a capture device. */[m
     Uint8 padding1;[m
[36m@@ -413,7 +413,7 @@[m [mtypedef struct SDL_AudioDeviceEvent[m
 typedef struct SDL_TouchFingerEvent[m
 {[m
     Uint32 type;        /**< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     SDL_TouchID touchId; /**< The touch device id */[m
     SDL_FingerID fingerId;[m
     float x;            /**< Normalized in the range 0...1 */[m
[36m@@ -430,8 +430,8 @@[m [mtypedef struct SDL_TouchFingerEvent[m
 typedef struct SDL_MultiGestureEvent[m
 {[m
     Uint32 type;        /**< ::SDL_MULTIGESTURE */[m
[31m-    Uint32 timestamp;[m
[31m-    SDL_TouchID touchId; /**< The touch device index */[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
[32m+[m[32m    SDL_TouchID touchId; /**< The touch device id */[m
     float dTheta;[m
     float dDist;[m
     float x;[m
[36m@@ -447,7 +447,7 @@[m [mtypedef struct SDL_MultiGestureEvent[m
 typedef struct SDL_DollarGestureEvent[m
 {[m
     Uint32 type;        /**< ::SDL_DOLLARGESTURE or ::SDL_DOLLARRECORD */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     SDL_TouchID touchId; /**< The touch device id */[m
     SDL_GestureID gestureId;[m
     Uint32 numFingers;[m
[36m@@ -465,7 +465,7 @@[m [mtypedef struct SDL_DollarGestureEvent[m
 typedef struct SDL_DropEvent[m
 {[m
     Uint32 type;        /**< ::SDL_DROPBEGIN or ::SDL_DROPFILE or ::SDL_DROPTEXT or ::SDL_DROPCOMPLETE */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     char *file;         /**< The file name, which should be freed with SDL_free(), is NULL on begin/complete */[m
     Uint32 windowID;    /**< The window that was dropped on, if any */[m
 } SDL_DropEvent;[m
[36m@@ -477,7 +477,7 warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_events.h.
The file will have its original line endings in your working directory.
@@[m [mtypedef struct SDL_DropEvent[m
 typedef struct SDL_QuitEvent[m
 {[m
     Uint32 type;        /**< ::SDL_QUIT */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
 } SDL_QuitEvent;[m
 [m
 /**[m
[36m@@ -486,7 +486,7 @@[m [mtypedef struct SDL_QuitEvent[m
 typedef struct SDL_OSEvent[m
 {[m
     Uint32 type;        /**< ::SDL_QUIT */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
 } SDL_OSEvent;[m
 [m
 /**[m
[36m@@ -495,7 +495,7 @@[m [mtypedef struct SDL_OSEvent[m
 typedef struct SDL_UserEvent[m
 {[m
     Uint32 type;        /**< ::SDL_USEREVENT through ::SDL_LASTEVENT-1 */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     Uint32 windowID;    /**< The associated window if any */[m
     Sint32 code;        /**< User defined event code */[m
     void *data1;        /**< User defined data pointer */[m
[36m@@ -515,7 +515,7 @@[m [mtypedef struct SDL_SysWMmsg SDL_SysWMmsg;[m
 typedef struct SDL_SysWMEvent[m
 {[m
     Uint32 type;        /**< ::SDL_SYSWMEVENT */[m
[31m-    Uint32 timestamp;[m
[32m+[m[32m    Uint32 timestamp;   /**< In milliseconds, populated using SDL_GetTicks() */[m
     SDL_SysWMmsg *msg;  /**< driver dependent data, defined in SDL_syswm.h */[m
 } SDL_SysWMEvent;[m
 [m
[36m@@ -724,7 +724,7 @@[m [mextern DECLSPEC void SDLCALL SDL_FilterEvents(SDL_EventFilter filter,[m
 /**[m
  *  This function allows you to set the state of processing certain events.[m
  *   - If \c state is set to ::SDL_IGNORE, that event will be automatically[m
[31m- *     dropped from the event queue and will not event be filtered.[m
[32m+[m[32m *     dropped from the event queue and will not be filtered.[m
  *   - If \c state is set to ::SDL_ENABLE, that event will be processed[m
  *     normally.[m
  *   - If \c state is set to ::SDL_QUERY, SDL_EventState() will return the[m
[36m@@ -749,6 +749,6 @@[m [mextern DECLSPEC Uint32 SDLCALL SDL_RegisterEvents(int numevents);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_events_h */[m
[32m+[m[32m#endif /* SDL_events_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_filesystem.h b/Just a Thought/Libraries/include/SDL_filesystem.h[m
[1mindex 02999ed..a1c846a 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_filesystem.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_filesystem.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  \brief Include file for filesystem SDL API functions[m
  */[m
 [m
[31m-#ifndef _SDL_filesystem_h[m
[31m-#define _SDL_filesystem_h[m
[32m+[m[32m#ifndef SDL_filesystem_h_[m
[32m+[m[32m#define SDL_filesystem_h_[m
 [m
 #include "SDL_stdinc.h"[m
 [m
[36m@@ -131,6 +131,6 @@[m [mextern DECLSPEC char *SDLCALL SDL_GetPrefPath(const char *org, const char *app);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_filesystem_h */[m
[32m+[m[32m#endif /* SDL_filesystem_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_gamecontroller.h b/Just a Thought/Libraries/include/SDL_gamecontroller.h[m
[1mindex e67fd9f..c921513 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_gamecontroller.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_gamecontroller.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Include file for SDL game controller event handling[m
  */[m
 [m
[31m-#ifndef _SDL_gamecontroller_h[m
[31m-#define _SDL_gamecontroller_h[m
[32m+[m[32m#ifndef SDL_gamecontroller_h_[m
[32m+[m[32m#define SDL_gamecontroller_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -51,7 +51,9 @@[m [mextern "C" {[m
  *  SDL_Init(): SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS[m
  */[m
 [m
[31m-/* The gamecontroller structure used to identify an SDL game controller */[m
[32m+[m[32m/**[m
[32m+[m[32m * The gamecontroller structure used to identify an SDL game controller[m
[32m+[m[32m */[m
 struct _SDL_GameController;[m
 typedef struct _SDL_GameController SDL_GameController;[m
 [m
[36m@@ -87,8 +89,8 @@[m [mtypedef struct SDL_GameControllerButtonBind[m
  *  To count the number of game controllers in the system for the following:[m
  *  int nJoysticks = SDL_NumJoysticks();[m
  *  int nGameControllers = 0;[m
[31m- *  for ( int i = 0; i < nJoysticks; i++ ) {[m
[31m- *      if ( SDL_IsGameController(i) ) {[m
[32m+[m[32m *  for (int i = 0; i < nJoysticks; i++) {[m
[32m+[m[32m *      if (SDL_IsGameController(i)) {[m
  *          nGameControllers++;[m
  *      }[m
  *  }[m
[36m@@ -105,7 +107,7 @@[m [mtypedef struct SDL_GameControllerButtonBind[m
  *  Buttons can be used as a controller axis and vice versa.[m
  *[m
  *  This string shows an example of a valid mapping for a controller[m
[31m- *  "341a3608000000000000504944564944,Afterglow PS3 Controller,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b8,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftshoulder:b4,rightshoulder:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7",[m
[32m+[m[32m *  "03000000341a00003608000000000000,PS3 Controller,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b8,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftshoulder:b4,rightshoulder:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7",[m
  *[m
  */[m
 [m
[36m@@ -117,7 +119,7 @@[m [mtypedef struct SDL_GameControllerButtonBind[m
  * [m
  * \return number of mappings added, -1 on error[m
  */[m
[31m-extern DECLSPEC int SDLCALL SDL_GameControllerAddMappingsFromRW( SDL_RWops * rw, int freerw );[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_GameControllerAddMappingsFromRW(SDL_RWops * rw, int freerw);[m
 [m
 /**[m
  *  Load a set of mappings from a file, filtered by the current SDL_GetPlatform()[m
[36m@@ -131,28 +133,41 @@[m [mextern DECLSPEC int SDLCALL SDL_GameControllerAddMappingsFromRW( SDL_RWops * rw,[m
  *[m
  * \return 1 if mapping is added, 0 if updated, -1 on error[m
  */[m
[31m-extern DECLSPEC int SDLCALL SDL_GameControllerAddMapping( const char* mappingString );[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_GameControllerAddMapping(const char* mappingString);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the number of mappings installed[m
[32m+[m[32m *[m
[32m+[m[32m *  \return the number of mappings[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_GameControllerNumMappings(void);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the mapping at a particular index.[m
[32m+[m[32m *[m
[32m+[m[32m *  \return the mapping string.  Must be freed with SDL_free().  Returns NULL if the index is out of range.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC char * SDLCALL SDL_GameControllerMappingForIndex(int mapping_index);[m
 [m
 /**[m
  *  Get a mapping string for a GUID[m
  *[m
  *  \return the mapping string.  Must be freed with SDL_free().  Returns NULL if no mapping is available[m
  */[m
[31m-extern DECLSPEC char * SDLCALL SDL_GameControllerMappingForGUID( SDL_JoystickGUID guid );[m
[32m+[m[32mextern DECLSPEC char * SDLCALL SDL_GameControllerMappingForGUID(SDL_JoystickGUID guid);[m
 [m
 /**[m
  *  Get a mapping string for an open GameController[m
  *[m
  *  \return the mapping string.  Must be freed with SDL_free().  Returns NULL if no mapping is available[m
  */[m
[31m-extern DECLSPEC char * SDLCALL SDL_GameControllerMapping( SDL_GameController * gamecontroller );[m
[32m+[m[32mextern DECLSPEC char * SDLCALL SDL_GameControllerMapping(SDL_GameController * gamecontroller);[m
 [m
 /**[m
  *  Is the joystick on this index supported by the game controller interface?[m
  */[m
 extern DECLSPEC SDL_bool SDLCALL SDL_IsGameController(int joystick_index);[m
 [m
[31m-[m
 /**[m
  *  Get the implementation dependent name of a game controller.[m
  *  This can be called before any controllers are opened.[m
[36m@@ -182,6 +197,24 @@[m [mextern DECLSPEC SDL_GameController *SDLCALL SDL_GameControllerFromInstanceID(SDL[m
 extern DECLSPEC const char *SDLCALL SDL_GameControllerName(SDL_GameController *gamecontroller);[m
 [m
 /**[m
[32m+[m[32m *  Get the USB vendor ID of an opened controller, if available.[m
[32m+[m[32m *  If the vendor ID isn't available this function returns 0.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC Uint16 SDLCALL SDL_GameControllerGetVendor(SDL_GameController * gamecontroller);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the USB product ID of an opened controller, if available.[m
[32m+[m[32m *  If the product ID isn't available this function returns 0.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC Uint16 SDLCALL SDL_GameControllerGetProduct(SDL_GameController * gamecontroller);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the product version of an opened controller, if available.[m
[32m+[m[32m *  If the product version isn't available this function returns 0.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC Uint16 SDLCALL SDL_GameControllerGetProductVersion(SDL_GameController * gamecontroller);[m
[32m+[m
[32m+[m[32m/**[m
  *  Returns SDL_TRUE if the controller has been opened and currently connected,[m
  *  or SDL_FALSE if it has not.[m
  */[m
[36m@@ -214,6 +247,12 @@[m [mextern DECLSPEC void SDLCALL SDL_GameControllerUpdate(void);[m
 [m
 /**[m
  *  The list of axes available from a controller[m
[32m+[m[32m *[m
[32m+[m[32m *  Thumbstick axis values range from SDL_JOYSTICK_AXIS_MIN to SDL_JOYSTICK_AXIS_MAX,[m
[32m+[m[32m *  and are centered within ~8000 of zero, though advanced UI will allow users to set[m
[32m+[m[32m *  or autodetect the dead zone, which varies between controllers.[m
[32m+[m[32m *[m
[32m+[m[32m *  Trigger axis values range from 0 to SDL_JOYSTICK_AXIS_MAX.[m
  */[m
 typedef enum[m
 {[m
[36m@@ -318,6 +357,6 @@[m [mextern DECLSPEC void SDLCALL SDL_GameControllerClose(SDL_GameController *gamecon[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_gamecontroller_h */[m
[32m+[m[32m#endif /* SDL_gamecontroller_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_gesture.h b/Just a Thought/Libraries/include/SDL_gesture.h[m
[1mindex 3c29ca7..2bba6a7 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_gesture.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_gesture.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Include file for SDL gesture event handling.[m
  */[m
 [m
[31m-#ifndef _SDL_gesture_h[m
[31m-#define _SDL_gesture_h[m
[32m+[m[32m#ifndef SDL_gesture_h_[m
[32m+[m[32m#define SDL_gesture_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -82,6 +82,6 @@[m [mextern DECLSPEC int SDLCALL SDL_LoadDollarTemplates(SDL_TouchID touchId, SDL_RWowarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_gamecontroller.h.
The file will have its original line endings in your working directory.
[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_gesture_h */[m
[32m+[m[32m#endif /* SDL_gesture_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_haptic.h b/Just a Thought/Libraries/include/SDL_haptic.h[m
[1mindex 9421c8f..60daefa 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_haptic.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_haptic.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -22,12 +22,12 @@[m
 /**[m
  *  \file SDL_haptic.h[m
  *[m
[31m- *  \brief The SDL Haptic subsystem allows you to control haptic (force feedback)[m
[32m+[m[32m *  \brief The SDL haptic subsystem allows you to control haptic (force feedback)[m
  *         devices.[m
  *[m
  *  The basic usage is as follows:[m
[31m- *   - Initialize the Subsystem (::SDL_INIT_HAPTIC).[m
[31m- *   - Open a Haptic Device.[m
[32m+[m[32m *   - Initialize the subsystem (::SDL_INIT_HAPTIC).[m
[32m+[m[32m *   - Open a haptic device.[m
  *    - SDL_HapticOpen() to open from index.[m
  *    - SDL_HapticOpenFromJoystick() to open from an existing joystick.[m
  *   - Create an effect (::SDL_HapticEffect).[m
[36m@@ -104,8 +104,8 @@[m
  * \endcode[m
  */[m
 [m
[31m-#ifndef _SDL_haptic_h[m
[31m-#define _SDL_haptic_h[m
[32m+[m[32m#ifndef SDL_haptic_h_[m
[32m+[m[32m#define SDL_haptic_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -282,7 +282,7 @@[m [mtypedef struct _SDL_Haptic SDL_Haptic;[m
 /**[m
  *  \brief Device can be queried for effect status.[m
  *[m
[31m- *  Device can be queried for effect status.[m
[32m+[m[32m *  Device supports querying effect status.[m
  *[m
  *  \sa SDL_HapticGetEffectStatus[m
  */[m
[36m@@ -291,6 +291,8 @@[m [mtypedef struct _SDL_Haptic SDL_Haptic;[m
 /**[m
  *  \brief Device can be paused.[m
  *[m
[32m+[m[32m *  Devices supports being paused.[m
[32m+[m[32m *[m
  *  \sa SDL_HapticPause[m
  *  \sa SDL_HapticUnpause[m
  */[m
[36m@@ -444,7 +446,7 @@[m [mtypedef struct SDL_HapticDirection[m
 /**[m
  *  \brief A structure containing a template for a Constant effect.[m
  *[m
[31m- *  The struct is exclusive to the ::SDL_HAPTIC_CONSTANT effect.[m
[32m+[m[32m *  This struct is exclusively for the ::SDL_HAPTIC_CONSTANT effect.[m
  *[m
  *  A constant effect applies a constant force in the specified direction[m
  *  to the joystick.[m
[36m@@ -676,6 +678,8 @@[m [mtypedef struct SDL_HapticLeftRight[m
 /**[m
  *  \brief A structure containing a template for the ::SDL_HAPTIC_CUSTOM effect.[m
  *[m
[32m+[m[32m *  This struct is exclusively for the ::SDL_HAPTIC_CUSTOM effect.[m
[32m+[m[32m *[m
  *  A custom force feedback effect is much like a periodic effect, where the[m
  *  application can define its exact shape.  You will have to allocate the[m
  *  data yourself.  Data should consist of channels * samples Uint16 samples.[m
[36m@@ -804,7 +808,7 @@[m [mtypedef union SDL_HapticEffect[m
 extern DECLSPEC int SDLCALL SDL_NumHaptics(void);[m
 [m
 /**[m
[31m- *  \brief Get the implementation dependent name of a Haptic device.[m
[32m+[m[32m *  \brief Get the implementation dependent name of a haptic device.[m
  *[m
  *  This can be called before any joysticks are opened.[m
  *  If no name can be found, this function returns NULL.[m
[36m@@ -817,9 +821,9 @@[m [mextern DECLSPEC int SDLCALL SDL_NumHaptics(void);[m
 extern DECLSPEC const char *SDLCALL SDL_HapticName(int device_index);[m
 [m
 /**[m
[31m- *  \brief Opens a Haptic device for usage.[m
[32m+[m[32m *  \brief Opens a haptic device for use.[m
  *[m
[31m- *  The index passed as an argument refers to the N'th Haptic device on thiwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_haptic.h.
The file will have its original line endings in your working directory.
s[m
[32m+[m[32m *  The index passed as an argument refers to the N'th haptic device on this[m
  *  system.[m
  *[m
  *  When opening a haptic device, its gain will be set to maximum and[m
[36m@@ -885,15 +889,15 @@[m [mextern DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpenFromMouse(void);[m
  *  \brief Checks to see if a joystick has haptic features.[m
  *[m
  *  \param joystick Joystick to test for haptic capabilities.[m
[31m- *  \return 1 if the joystick is haptic, 0 if it isn't[m
[31m- *          or -1 if an error ocurred.[m
[32m+[m[32m *  \return SDL_TRUE if the joystick is haptic, SDL_FALSE if it isn't[m
[32m+[m[32m *          or -1 if an error occurred.[m
  *[m
  *  \sa SDL_HapticOpenFromJoystick[m
  */[m
 extern DECLSPEC int SDLCALL SDL_JoystickIsHaptic(SDL_Joystick * joystick);[m
 [m
 /**[m
[31m- *  \brief Opens a Haptic device for usage from a Joystick device.[m
[32m+[m[32m *  \brief Opens a haptic device for use from a joystick device.[m
  *[m
  *  You must still close the haptic device separately.  It will not be closed[m
  *  with the joystick.[m
[36m@@ -913,7 +917,7 @@[m [mextern DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpenFromJoystick(SDL_Joystick *[m
                                                                joystick);[m
 [m
 /**[m
[31m- *  \brief Closes a Haptic device previously opened with SDL_HapticOpen().[m
[32m+[m[32m *  \brief Closes a haptic device previously opened with SDL_HapticOpen().[m
  *[m
  *  \param haptic Haptic device to close.[m
  */[m
[36m@@ -957,7 +961,7 @@[m [mextern DECLSPEC int SDLCALL SDL_HapticNumEffectsPlaying(SDL_Haptic * haptic);[m
  *  Example:[m
  *  \code[m
  *  if (SDL_HapticQuery(haptic) & SDL_HAPTIC_CONSTANT) {[m
[31m- *      printf("We have constant haptic effect!");[m
[32m+[m[32m *      printf("We have constant haptic effect!\n");[m
  *  }[m
  *  \endcode[m
  *[m
[36m@@ -996,7 +1000,7 @@[m [mextern DECLSPEC int SDLCALL SDL_HapticEffectSupported(SDL_Haptic * haptic,[m
  *[m
  *  \param haptic Haptic device to create the effect on.[m
  *  \param effect Properties of the effect to create.[m
[31m- *  \return The id of the effect on success or -1 on error.[m
[32m+[m[32m *  \return The identifier of the effect on success or -1 on error.[m
  *[m
  *  \sa SDL_HapticUpdateEffect[m
  *  \sa SDL_HapticRunEffect[m
[36m@@ -1008,13 +1012,13 @@[m [mextern DECLSPEC int SDLCALL SDL_HapticNewEffect(SDL_Haptic * haptic,[m
 /**[m
  *  \brief Updates the properties of an effect.[m
  *[m
[31m- *  Can be used dynamically, although behaviour when dynamically changing[m
[32m+[m[32m *  Can be used dynamically, although behavior when dynamically changing[m
  *  direction may be strange.  Specifically the effect may reupload itself[m
  *  and start playing from the start.  You cannot change the type either when[m
  *  running SDL_HapticUpdateEffect().[m
  *[m
  *  \param haptic Haptic device that has the effect.[m
[31m- *  \param effect Effect to update.[m
[32m+[m[32m *  \param effect Identifier of the effect to update.[m
  *  \param data New effect properties to use.[m
  *  \return 0 on success or -1 on error.[m
  *[m
[36m@@ -1218,6 +1222,6 @@[m [mextern DECLSPEC int SDLCALL SDL_HapticRumbleStop(SDL_Haptic * haptic);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_haptic_h */[m
[32m+[m[32m#endif /* SDL_haptic_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_hints.h b/Just a Thought/Libraries/include/SDL_hints.h[m
[1mindex dd15464..007a4be 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_hints.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_hints.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -36,8 +36,8 @@[m
  *  to how they would like the library to work.[m
  */[m
 [m
[31m-#ifndef _SDL_hints_h[m
[31m-#define _SDL_hints_h[m
[32m+[m[32m#ifndef SDL_hints_h_[m
[32m+[m[32m#define SDL_hints_h_[m
 [m
 #include "SDL_stdinc.h"[m
 [m
[36m@@ -119,6 +119,17 @@[m [mextern "C" {[m
 #define SDL_HINT_RENDER_DIRECT3D11_DEBUG    "SDL_RENDER_DIRECT3D11_DEBUG"[m
 [m
 /**[m
[32m+[m[32m *  \brief  A variable controlling the scaling policy for SDL_RenderSetLogicalSize.[m
[32m+[m[32m *[m
[32m+[m[32m *  This variable can be set to the following values:[m
[32m+[m[32m *    "0" or "letterbox" - Uses letterbox/sidebars to fit the entire rendering on screen[m
[32m+[m[32m *    "1" or "overscan"  - Will zoom the rendering so it fills the entire screen, allowing edges to be drawn offscreen[m
[32m+[m[32m *[m
[32m+[m[32m *  By default letterbox is used[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_RENDER_LOGICAL_SIZE_MODE       "SDL_RENDER_LOGICAL_SIZE_MODE"[m
[32m+[m
[32m+[m[32m/**[m
  *  \brief  A variable controlling the scaling quality[m
  *[m
  *  This variable can be set to the following values:[m
[36m@@ -211,6 +222,12 @@[m [mextern "C" {[m
 #define SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN    "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN"[m
 [m
 /**[m
[32m+[m[32m * \brief A variable to specify custom icon resource id from RC file on Windows platform[m[41m [m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_WINDOWS_INTRESOURCE_ICON       "SDL_WINDOWS_INTRESOURCE_ICON"[m
[32m+[m[32m#define SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL "SDL_WINDOWS_INTRESOURCE_ICON_SMALL"[m
[32m+[m
[32m+[m[32m/**[m
  *  \brief  A variable controlling whether the windows message loop is processed by SDL [m
  *[m
  *  This variable can be set to the following values:[m
[36m@@ -233,6 +250,16 @@[m [mextern "C" {[m
 #define SDL_HINT_GRAB_KEYBOARD              "SDL_GRAB_KEYBOARD"[m
 [m
 /**[m
[32m+[m[32m *  \brief  A variable setting the speed scale for mouse motion, in floating point, when the mouse is not in relative mode[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_MOUSE_NORMAL_SPEED_SCALE    "SDL_MOUSE_NORMAL_SPEED_SCALE"[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief  A variable setting the scale for mouse motion, in floating point, when the mouse is in relative mode[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE    "SDL_MOUSE_RELATIVE_SPEED_SCALE"[m
[32m+[m
[32m+[m[32m/**[m
  *  \brief  A variable controlling whether relative mouse mode is implemented using mouse warping[m
  *[m
  *  This variable can be set to the following values:[m
[36m@@ -255,6 +282,17 @@[m [mextern "C" {[m
 #define SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH "SDL_MOUSE_FOCUS_CLICKTHROUGH"[m
 [m
 /**[m
[32m+[m[32m *  \brief  A variable controlling whether touch events should generate synthetic mouse events[m
[32m+[m[32m *[m
[32m+[m[32m *  This variable can be set to the following values:[m
[32m+[m[32m *    "0"       - Touch events will not generate mouse events[m
[32m+[m[32m *    "1"       - Touch events will generate mouse events[m
[32m+[m[32m *[m
[32m+[m[32m *  By default SDL will generate mouse events for touch events[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_TOUCH_MOUSE_EVENTS    "SDL_TOUCH_MOUSE_EVENTS"[m
[32m+[m
[32m+[m[32m/**[m
  *  \brief Minimize your SDL_Window if it loses key focus when in fullscreen mode. Defaults to true.[m
  *[m
  */[m
[36m@@ -327,7 +365,6 @@[m [mextern "C" {[m
  */[m
 #define SDL_HINT_ACCELEROMETER_AS_JOYSTICK "SDL_ACCELEROMETER_AS_JOYSTICK"[m
 [m
[31m-[m
 /**[m
  *  \brief  A variable that lets you disable the detection and use of Xinput gamepad devices[m
  *[m
[36m@@ -337,7 +374,6 @@[m [mextern "C" {[m
  */[m
 #define SDL_HINT_XINPUT_ENABLED "SDL_XINPUT_ENABLED"[m
 [m
[31m-[m
 /**[m
  *  \brief  A variable that causes SDL to use the old axis and button mapping for XInput devices.[m
  *[m
[36m@@ -347,9 +383,8 @@[m [mextern "C" {[m
  */[m
 #define SDL_HINT_XINPUT_USE_OLD_JOYSTICK_MAPPING "SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING"[m
 [m
[31m-[m
 /**[m
[31m- *  \brief  A variable that lets you manually hint extra gamecontroller db entries[m
[32m+[m[32m *  \brief  A variable that lets you manually hint extra gamecontroller db entries.[m
  *[m
  *  The variable should be newline delimited rows of gamecontroller config data, see SDL_gamecontroller.h[m
  *[m
[36m@@ -358,6 +393,31 @@[m [mextern "C" {[m
  */[m
 #define SDL_HINT_GAMECONTROLLERCONFIG "SDL_GAMECONTROLLERCONFIG"[m
 [m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief  A variable containing a list of devices to skip when scanning for game controllers.[m
[32m+[m[32m *[m
[32m+[m[32m *  The format of the string is a comma separated list of USB VID/PID pairs[m
[32m+[m[32m *  in hexadecimal form, e.g.[m
[32m+[m[32m *[m
[32m+[m[32m *      0xAAAA/0xBBBB,0xCCCC/0xDDDD[m
[32m+[m[32m *[m
[32m+[m[32m *  The variable can also take the form of @file, in which case the named[m
[32m+[m[32m *  file will be loaded and interpreted as the value of the variable.[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES "SDL_GAMECONTROLLER_IGNORE_DEVICES"[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief  If set, all devices will be skipped when scanning for game controllers except for the ones listed in this variable.[m
[32m+[m[32m *[m
[32m+[m[32m *  The format of the string is a comma separated list of USB VID/PID pairs[m
[32m+[m[32m *  in hexadecimal form, e.g.[m
[32m+[m[32m *[m
[32m+[m[32m *      0xAAAA/0xBBBB,0xCCCC/0xDDDD[m
[32m+[m[32m *[m
[32m+[m[32m *  The variable can also take the form of @file, in which case the named[m
[32m+[m[32m *  file will be loaded and interpreted as the value of the variable.[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT"[m
 [m
 /**[m
  *  \brief  A variable that lets you enable joystick (and gamecontroller) events even when your app is in the background.[m
[36m@@ -372,7 +432,6 @@[m [mextern "C" {[m
  */[m
 #define SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS"[m
 [m
[31m-[m
 /**[m
  *  \brief If set to "0" then never set the top most bit on a SDL Window, even if the video mode expects it.[m
  *      This is a debugging aid for developers and not expected to be used by end users. The default is "1"[m
[36m@@ -383,7 +442,6 @@[m [mextern "C" {[m
  */[m
 #define SDL_HINT_ALLOW_TOPMOST "SDL_ALLOW_TOPMOST"[m
 [m
[31m-[m
 /**[m
  *  \brief A variable that controls the timer resolution, in milliseconds.[m
  *[m
[36m@@ -401,6 +459,33 @@[m [mextern "C" {[m
 #define SDL_HINT_TIMER_RESOLUTION "SDL_TIMER_RESOLUTION"[m
 [m
 [m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief  A variable describing the content orientation on QtWayland-based platforms.[m
[32m+[m[32m *[m
[32m+[m[32m *  On QtWayland platforms, windows are rotated client-side to allow for custom[m
[32m+[m[32m *  transitions. In order to correctly position overlays (e.g. volume bar) and[m
[32m+[m[32m *  gestures (e.g. events view, close/minimize gestures), the system needs to[m
[32m+[m[32m *  know in which orientation the application is currently drawing its contents.[m
[32m+[m[32m *[m
[32m+[m[32m *  This does not cause the window to be rotated or resized, the application[m
[32m+[m[32m *  needs to take care of drawing the content in the right orientation (the[m
[32m+[m[32m *  framebuffer is always in portrait mode).[m
[32m+[m[32m *[m
[32m+[m[32m *  This variable can be one of the following values:[m
[32m+[m[32m *    "primary" (default), "portrait", "landscape", "inverted-portrait", "inverted-landscape"[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION "SDL_QTWAYLAND_CONTENT_ORIENTATION"[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief  Flags to set on QtWayland windows to integrate with the native window manager.[m
[32m+[m[32m *[m
[32m+[m[32m *  On QtWayland platforms, this hint controls the flags to set on the windows.[m
[32m+[m[32m *  For example, on Sailfish OS "OverridesSystemGestures" disables swipe gestures.[m
[32m+[m[32m *[m
[32m+[m[32m *  This variable is a space-separated list of the following values (empty = no flags):[m
[32m+[m[32m *    "OverridesSystemGestures", "StaysOnTop", "BypassWindowManager"[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_QTWAYLAND_WINDOW_FLAGS "SDL_QTWAYLAND_WINDOW_FLAGS"[m
 [m
 /**[m
 *  \brief  A string specifying SDL's threads stack size in bytes or "0" for the backend's default size[m
[36m@@ -689,13 +774,18 @@[m [mextern "C" {[m
 #define SDL_HINT_BMP_SAVE_LEGACY_FORMAT "SDL_BMP_SAVE_LEGACY_FORMAT"[m
 [m
 /**[m
[31m- * \brief Tell SDL not to name threads on Windows.[m
[32m+[m[32m * \brief Tell SDL not to name threads on Windows with the 0x406D1388 Exception.[m
[32m+[m[32m *        The 0x406D1388 Exception is a trick used to inform Visual Studio of a[m
[32m+[m[32m *        thread's name, but it tends to cause problems with other debuggers,[m
[32m+[m[32m *        and the .NET runtime. Note that SDL 2.0.6 and later will still use[m
[32m+[m[32m *        the (safer) SetThreadDescription API, introduced in the Windows 10[m
[32m+[m[32m *        Creators Update, if available.[m
  *[m
  * The variable can be set to the following values:[m
  *   "0"       - SDL will raise the 0x406D1388 Exception to name threads.[m
[31m- *               This is the default behavior of SDL <= 2.0.4. (default)[m
[31m- *   "1"       - SDL will not raise this exception, and threads will be unnamed.[m
[31m- *               For .NET languages this is required when running under a debugger.[m
[32m+[m[32m *               This is the default behavior of SDL <= 2.0.4.[m
[32m+[m[32m *   "1"       - SDL will not raise this exception, and threads will be unnamed. (default)[m
[32m+[m[32m *               This is necessary with .NET languages or debuggers that aren't Visual Studio.[m
  */[m
 #define SDL_HINT_WINDOWS_DISABLE_THREAD_NAMING "SDL_WINDOWS_DISABLE_THREAD_NAMING"[m
 [m
[36m@@ -708,6 +798,76 @@[m [mextern "C" {[m
 #define SDL_HINT_RPI_VIDEO_LAYER           "SDL_RPI_VIDEO_LAYER"[m
 [m
 /**[m
[32m+[m[32m *  \brief  A variable controlling what driver to use for OpenGL ES contexts.[m
[32m+[m[32m *[m
[32m+[m[32m *  On some platforms, currently Windows and X11, OpenGL drivers may support[m
[32m+[m[32m *  creating contexts with an OpenGL ES profile. By default SDL uses these[m
[32m+[m[32m *  profiles, when available, otherwise it attempts to load an OpenGL ES[m
[32m+[m[32m *  library, e.g. that provided by the ANGLE project. This variable controls[m
[32m+[m[32m *  whether SDL follows this default behaviour or will always load an[m
[32m+[m[32m *  OpenGL ES library.[m
[32m+[m[32m *[m
[32m+[m[32m *  Circumstances where this is useful include[m
[32m+[m[32m *  - Testing an app with a particular OpenGL ES implementation, e.g ANGLE,[m
[32m+[m[32m *    or emulator, e.g. those from ARM, Imagination or Qualcomm.[m
[32m+[m[32m *  - Resolving OpenGL ES function addresses at link time by linking with[m
[32m+[m[32m *    the OpenGL ES library instead of querying them at run time with[m
[32m+[m[32m *    SDL_GL_GetProcAddress().[m
[32m+[m[32m *[m
[32m+[m[32m *  Caution: for an application to work with the default behaviour across[m
[32m+[m[32m *  different OpenGL drivers it must query the OpenGL ES function[m
[32m+[m[32m *  addresses at run time using SDL_GL_GetProcAddress().[m
[32m+[m[32m *[m
[32m+[m[32m *  This variable is ignored on most platforms because OpenGL ES is native[m
[32m+[m[32m *  or not supported.[m
[32m+[m[32m *[m
[32m+[m[32m *  This variable can be set to the following values:[m
[32m+[m[32m *    "0"       - Use ES profile of OpenGL, if available. (Default when not set.)[m
[32m+[m[32m *    "1"       - Load OpenGL ES library using the default library names.[m
[32m+[m[32m *[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_OPENGL_ES_DRIVER   "SDL_OPENGL_ES_DRIVER"[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief  A variable controlling speed/quality tradeoff of audio resampling.[m
[32m+[m[32m *[m
[32m+[m[32m *  If available, SDL can use libsamplerate ( http://www.mega-nerd.com/SRC/ )[m
[32m+[m[32m *  to handle audio resampling. There are different resampling modes available[m
[32m+[m[32m *  that produce different levels of quality, using more CPU.[m
[32m+[m[32m *[m
[32m+[m[32m *  If this hint isn't specified to a valid setting, or libsamplerate isn't[m
[32m+[m[32m *  available, SDL will use the default, internal resampling algorithm.[m
[32m+[m[32m *[m
[32m+[m[32m *  Note that this is currently only applicable to resampling audio that is[m
[32m+[m[32m *  being written to a device for playback or audio being read from a device[m
[32m+[m[32m *  for capture. SDL_AudioCVT always uses the default resampler (although this[m
[32m+[m[32m *  might change for SDL 2.1).[m
[32m+[m[32m *[m
[32m+[m[32m *  This hint is currently only checked at audio subsystem initialization.[m
[32m+[m[32m *[m
[32m+[m[32m *  This variable can be set to the following values:[m
[32m+[m[32m *[m
[32m+[m[32m *    "0" or "default" - Use SDL's internal resampling (Default when not set - low quality, fast)[m
[32m+[m[32m *    "1" or "fast"    - Use fast, slightly higher quality resampling, if available[m
[32m+[m[32m *    "2" or "medium"  - Use medium quality resampling, if available[m
[32m+[m[32m *    "3" or "best"    - Use high quality resampling, if available[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_AUDIO_RESAMPLING_MODE   "SDL_AUDIO_RESAMPLING_MODE"[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief  A variable controlling the audio category on iOS and Mac OS X[m
[32m+[m[32m *[m
[32m+[m[32m *  This variable can be set to the following values:[m
[32m+[m[32m *[m
[32m+[m[32m *    "ambient"     - Use the AVAudioSessionCategoryAmbient audio category, will be muted by the phone mute switch (default)[m
[32m+[m[32m *    "playback"    - Use the AVAudioSessionCategoryPlayback category[m
[32m+[m[32m *[m
[32m+[m[32m *  For more information, see Apple's documentation:[m
[32m+[m[32m *  https://developer.apple.com/library/content/documentation/Audio/Conceptual/AudioSessionProgrammingGuide/AudioSessionCategoriesandModes/AudioSessionCategoriesandModes.html[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_HINT_AUDIO_CATEGORY   "SDL_AUDIO_CATEGORY"[m
[32m+[m
[32m+[m[32m/**[m
  *  \brief  An enumeration of hint priorities[m
  */[m
 typedef enum[m
[36m@@ -754,13 +914,17 @@[m [mextern DECLSPEC const char * SDLCALL SDL_GetHint(const char *name);[m
 extern DECLSPEC SDL_bool SDLCALL SDL_GetHintBoolean(const char *name, SDL_bool default_value);[m
 [m
 /**[m
[32m+[m[32m * \brief type definition of the hint callback function.[m
[32m+[m[32m */[m
[32m+[m[32mtypedef void (SDLCALL *SDL_HintCallback)(void *userdata, const char *name, const char *oldValue, const char *newValue);[m
[32m+[m
[32m+[m[32m/**[m
  *  \brief Add a function to watch a particular hint[m
  *[m
  *  \param name The hint to watch[m
  *  \param callback The function to call when the hint value changes[m
  *  \param userdata A pointer to pass to the callback function[m
  */[m
[31m-typedef void (*SDL_HintCallback)(void *userdata, const char *name, const char *oldValue, const char *newValue);[m
 extern DECLSPEC void SDLCALL SDL_AddHintCallback(const char *name,[m
                                                  SDL_HintCallback callback,[m
                                                  void *userdata);[m
[36m@@ -790,6 +954,6 @@[m [mextern DECLSPEC void SDLCALL SDL_ClearHints(void);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_hints_hwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_hints.h.
The file will have its original line endings in your working directory.
 */[m
[32m+[m[32m#endif /* SDL_hints_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_joystick.h b/Just a Thought/Libraries/include/SDL_joystick.h[m
[1mindex f5dbc94..f598dc8 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_joystick.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_joystick.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -36,8 +36,8 @@[m
  *[m
  */[m
 [m
[31m-#ifndef _SDL_joystick_h[m
[31m-#define _SDL_joystick_h[m
[32m+[m[32m#ifndef SDL_joystick_h_[m
[32m+[m[32m#define SDL_joystick_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -60,7 +60,9 @@[m [mextern "C" {[m
  *  SDL_Init(): SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS[m
  */[m
 [m
[31m-/* The joystick structure used to identify an SDL joystick */[m
[32m+[m[32m/**[m
[32m+[m[32m * The joystick structure used to identify an SDL joystick[m
[32m+[m[32m */[m
 struct _SDL_Joystick;[m
 typedef struct _SDL_Joystick SDL_Joystick;[m
 [m
[36m@@ -69,10 +71,31 @@[m [mtypedef struct {[m
     Uint8 data[16];[m
 } SDL_JoystickGUID;[m
 [m
[32m+[m[32m/**[m
[32m+[m[32m * This is a unique ID for a joystick for the time it is connected to the system,[m
[32m+[m[32m * and is never reused for the lifetime of the application. If the joystick is[m
[32m+[m[32m * disconnected and reconnected, it will get a new ID.[m
[32m+[m[32m *[m
[32m+[m[32m * The ID value starts at 0 and increments from there. The value -1 is an invalid ID.[m
[32m+[m[32m */[m
 typedef Sint32 SDL_JoystickID;[m
 [m
 typedef enum[m
 {[m
[32m+[m[32m    SDL_JOYSTICK_TYPE_UNKNOWN,[m
[32m+[m[32m    SDL_JOYSTICK_TYPE_GAMECONTROLLER,[m
[32m+[m[32m    SDL_JOYSTICK_TYPE_WHEEL,[m
[32m+[m[32m    SDL_JOYSTICK_TYPE_ARCADE_STICK,[m
[32m+[m[32m    SDL_JOYSTICK_TYPE_FLIGHT_STICK,[m
[32m+[m[32m    SDL_JOYSTICK_TYPE_DANCE_PAD,[m
[32m+[m[32m    SDL_JOYSTICK_TYPE_GUITAR,[m
[32m+[m[32m    SDL_JOYSTICK_TYPE_DRUM_KIT,[m
[32m+[m[32m    SDL_JOYSTICK_TYPE_ARCADE_PAD,[m
[32m+[m[32m    SDL_JOYSTICK_TYPE_THROTTLE[m
[32m+[m[32m} SDL_JoystickType;[m
[32m+[m
[32m+[m[32mtypedef enum[m
[32m+[m[32m{[m
     SDL_JOYSTICK_POWER_UNKNOWN = -1,[m
     SDL_JOYSTICK_POWER_EMPTY,[m
     SDL_JOYSTICK_POWER_LOW,[m
[36m@@ -83,6 +106,20 @@[m [mtypedef enum[m
 } SDL_JoystickPowerLevel;[m
 [m
 /* Function prototypes */[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Locking for multi-threaded access to the joystick API[m
[32m+[m[32m *[m
[32m+[m[32m * If you are using the joystick API or handling events from multiple threads[m
[32m+[m[32m * you should use these locking functions to protect access to the joysticks.[m
[32m+[m[32m *[m
[32m+[m[32m * In particular, you are guaranteed that the joystick list won't change, so[m
[32m+[m[32m * the API functions that take a joystick index will be valid, and joystick[m
[32m+[m[32m * and game controller events will not be delivered.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC void SDLCALL SDL_LockJoysticks(void);[m
[32m+[m[32mextern DECLSPEC void SDLCALL SDL_UnlockJoysticks(void);[m
[32m+[m
 /**[m
  *  Count the number of joysticks attached to the system right now[m
  */[m
[36m@@ -96,6 +133,46 @@[m [mextern DECLSPEC int SDLCALL SDL_NumJoysticks(void);[m
 extern DECLSPEC const char *SDLCALL SDL_JoystickNameForIndex(int device_index);[m
 [m
 /**[m
[32m+[m[32m *  Return the GUID for the joystick at this index[m
[32m+[m[32m *  This can be called before any joysticks are opened.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetDeviceGUID(int device_index);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the USB vendor ID of a joystick, if available.[m
[32m+[m[32m *  This can be called before any joysticks are opened.[m
[32m+[m[32m *  If the vendor ID isn't available this function returns 0.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC Uint16 SDLCALL SDL_JoystickGetDeviceVendor(int device_index);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the USB product ID of a joystick, if available.[m
[32m+[m[32m *  This can be called before any joysticks are opened.[m
[32m+[m[32m *  If the product ID isn't available this function returns 0.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC Uint16 SDLCALL SDL_JoystickGetDeviceProduct(int device_index);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the product version of a joystick, if available.[m
[32m+[m[32m *  This can be called before any joysticks are opened.[m
[32m+[m[32m *  If the product version isn't available this function returns 0.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC Uint16 SDLCALL SDL_JoystickGetDeviceProductVersion(int device_index);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the type of a joystick, if available.[m
[32m+[m[32m *  This can be called before any joysticks are opened.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC SDL_JoystickType SDLCALL SDL_JoystickGetDeviceType(int device_index);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the instance ID of a joystick.[m
[32m+[m[32m *  This can be called before any joysticks are opened.[m
[32m+[m[32m *  If the index is out of range, this function will return -1.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC SDL_JoystickID SDLCALL SDL_JoystickGetDeviceInstanceID(int device_index);[m
[32m+[m
[32m+[m[32m/**[m
  *  Open a joystick for use.[m
  *  The index passed as an argument refers to the N'th joystick on the system.[m
  *  This index is not the value which will identify this joystick in future[m
[36m@@ -118,14 +195,32 @@[m [mextern DECLSPEC SDL_Joystick *SDLCALL SDL_JoystickFromInstanceID(SDL_JoystickID[m
 extern DECLSPEC const char *SDLCALL SDL_JoystickName(SDL_Joystick * joystick);[m
 [m
 /**[m
[31m- *  Return the GUID for the joystick at this index[m
[32m+[m[32m *  Return the GUID for this opened joystick[m
  */[m
[31m-extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetDeviceGUID(int device_index);[m
[32m+[m[32mextern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetGUID(SDL_Joystick * joystick);[m
 [m
 /**[m
[31m- *  Return the GUID for this opened joystick[m
[32m+[m[32m *  Get the USB vendor ID of an opened joystick, if available.[m
[32m+[m[32m *  If the vendor ID isn't available this function returns 0.[m
  */[m
[31m-extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetGUID(SDL_Joystick * joystick);[m
[32m+[m[32mextern DECLSPEC Uint16 SDLCALL SDL_JoystickGetVendor(SDL_Joystick * joystick);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the USB product ID of an opened joystick, if available.[m
[32m+[m[32m *  If the product ID isn't available this function returns 0.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC Uint16 SDLCALL SDL_JoystickGetProduct(SDL_Joystick * joystick);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the product version of an opened joystick, if available.[m
[32m+[m[32m *  If the product version isn't available this function returns 0.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC Uint16 SDLCALL SDL_JoystickGetProductVersion(SDL_Joystick * joystick);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Get the type of an opened joystick.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC SDL_JoystickType SDLCALL SDL_JoystickGetType(SDL_Joystick * joystick);[m
 [m
 /**[m
  *  Return a string representation for this guid. pszGUID must point to at least 33 bytes[m
[36m@@ -134,7 +229,7 @@[m [mextern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetGUID(SDL_Joystick * joys[m
 extern DECLSPEC void SDLCALL SDL_JoystickGetGwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_joystick.h.
The file will have its original line endings in your working directory.
UIDString(SDL_JoystickGUID guid, char *pszGUID, int cbGUID);[m
 [m
 /**[m
[31m- *  convert a string into a joystick formatted guid[m
[32m+[m[32m *  Convert a string into a joystick guid[m
  */[m
 extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetGUIDFromString(const char *pchGUID);[m
 [m
[36m@@ -190,6 +285,8 @@[m [mextern DECLSPEC void SDLCALL SDL_JoystickUpdate(void);[m
  */[m
 extern DECLSPEC int SDLCALL SDL_JoystickEventState(int state);[m
 [m
[32m+[m[32m#define SDL_JOYSTICK_AXIS_MAX   32767[m
[32m+[m[32m#define SDL_JOYSTICK_AXIS_MIN   -32768[m
 /**[m
  *  Get the current state of an axis control on a joystick.[m
  *[m
[36m@@ -201,6 +298,18 @@[m [mextern DECLSPEC Sint16 SDLCALL SDL_JoystickGetAxis(SDL_Joystick * joystick,[m
                                                    int axis);[m
 [m
 /**[m
[32m+[m[32m *  Get the initial state of an axis control on a joystick.[m
[32m+[m[32m *[m
[32m+[m[32m *  The state is a value ranging from -32768 to 32767.[m
[32m+[m[32m *[m
[32m+[m[32m *  The axis indices start at index 0.[m
[32m+[m[32m *[m
[32m+[m[32m *  \return SDL_TRUE if this axis has any initial value, or SDL_FALSE if not.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC SDL_bool SDLCALL SDL_JoystickGetAxisInitialState(SDL_Joystick * joystick,[m
[32m+[m[32m                                                   int axis, Sint16 *state);[m
[32m+[m
[32m+[m[32m/**[m
  *  \name Hat positions[m
  */[m
 /* @{ */[m
[36m@@ -268,6 +377,6 @@[m [mextern DECLSPEC SDL_JoystickPowerLevel SDLCALL SDL_JoystickCurrentPowerLevel(SDL[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_joystick_h */[m
[32m+[m[32m#endif /* SDL_joystick_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_keyboard.h b/Just a Thought/Libraries/include/SDL_keyboard.h[m
[1mindex f80b6d2..e78ca46 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_keyboard.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_keyboard.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Include file for SDL keyboard event handling[m
  */[m
 [m
[31m-#ifndef _SDL_keyboard_h[m
[31m-#define _SDL_keyboard_h[m
[32m+[m[32m#ifndef SDL_keyboard_h_[m
[32m+[m[32m#define SDL_keyboard_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -212,6 +212,6 @@[m [mextern DECLSPEC SDL_bool SDLCALL SDL_IsScreenKeyboardShown(SDL_Window *window);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_keyboard_h */[m
[32m+[m[32m#endif /* SDL_keyboard_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_keycode.h b/Just a Thought/Libraries/include/SDL_keycode.h[m
[1mindex 7be9635..c41e45f 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_keycode.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_keycode.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Defines constants which identify keyboard keys and modifiers.[m
  */[m
 [m
[31m-#ifndef _SDL_keycode_h[m
[31m-#define _SDL_keycode_h[m
[32m+[m[32m#ifndef SDL_keycode_h_[m
[32m+[m[32m#define SDL_keycode_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_scancode.h"[m
[36m@@ -38,6 +38,9 @@[m
  *  layout of the keyboard.  These values include Unicode values representing[m
  *warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_keycode.h.
The file will have its original line endings in your working directory.
  the unmodified character that would be generated by pressing the key, or[m
  *  an SDLK_* constant for those keys that do not generate characters.[m
[32m+[m[32m *[m
[32m+[m[32m *  A special exception is the number keys at the top of the keyboard which[m
[32m+[m[32m *  always map to SDLK_0...SDLK_9, regardless of layout.[m
  */[m
 typedef Sint32 SDL_Keycode;[m
 [m
[36m@@ -308,7 +311,12 @@[m [menum[m
     SDLK_KBDILLUMDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMDOWN),[m
     SDLK_KBDILLUMUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMUP),[m
     SDLK_EJECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EJECT),[m
[31m-    SDLK_SLEEP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP)[m
[32m+[m[32m    SDLK_SLEEP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP),[m
[32m+[m[32m    SDLK_APP1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP1),[m
[32m+[m[32m    SDLK_APP2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP2),[m
[32m+[m
[32m+[m[32m    SDLK_AUDIOREWIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOREWIND),[m
[32m+[m[32m    SDLK_AUDIOFASTFORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOFASTFORWARD)[m
 };[m
 [m
 /**[m
[36m@@ -336,6 +344,6 @@[m [mtypedef enum[m
 #define KMOD_ALT    (KMOD_LALT|KMOD_RALT)[m
 #define KMOD_GUI    (KMOD_LGUI|KMOD_RGUI)[m
 [m
[31m-#endif /* _SDL_keycode_h */[m
[32m+[m[32m#endif /* SDL_keycode_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_loadso.h b/Just a Thought/Libraries/include/SDL_loadso.h[m
[1mindex 3d540bd..6ea256c 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_loadso.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_loadso.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -38,8 +38,8 @@[m
  *      the results you expect. :)[m
  */[m
 [m
[31m-#ifndef _SDL_loadso_h[m
[31m-#define _SDL_loadso_h[m
[32m+[m[32m#ifndef SDL_loadso_h_[m
[32m+[m[32m#define SDL_loadso_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -76,6 +76,6 @@[m [mextern DECLSPEC void SDLCALL SDL_UnloadObject(void *handle);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_loadso_h */[m
[32m+[m[32m#endif /* SDL_loadso_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_log.h b/Just a Thought/Libraries/include/SDL_log.h[m
[1mindex 09be110..356d0e1 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_log.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_log.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -34,8 +34,8 @@[m
  *      Others: standard error output (stderr)[m
  */[m
 [m
[31m-#ifndef _SDL_log_h[m
[31m-#define _SDL_log_h[m
[32m+[m[32m#ifndef SDL_log_h_[m
[32m+[m[32m#define SDL_log_h_[m
 [m
 #include "SDL_stdinc.h"[m
 [m
[36m@@ -186,7 +186,7 @@[m [mextern DECLSPEC void SDLCALL SDL_LogMessageV(int category,[m
 /**[m
  *  \brief The prototype for the log output function[m
  */[m
[31m-typedef void (*SDL_LogOutputFunction)(void *userdata, int category, SDL_LogPriority priority, const char *message);[m
[32m+[m[32mtypedef void (SDLCALL *SDL_LogOutputFunction)(void *userdata, int category, SDL_LogPriority priority, const char *message);[m
 [m
 /**[m
  *  \brief Get the current log output function.[m
[36m@@ -206,6 +206,6 @@[m [mextern DECLSPEC void SDLCALL SDL_LogSetOutputFunction(SDL_LogOutputFunction cawarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_log.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_main.h.
The file will have its original line endings in your working directory.
ll[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_log_h */[m
[32m+[m[32m#endif /* SDL_log_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_main.h b/Just a Thought/Libraries/include/SDL_main.h[m
[1mindex 67afea5..2af3236 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_main.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_main.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -19,8 +19,8 @@[m
   3. This notice may not be removed or altered from any source distribution.[m
 */[m
 [m
[31m-#ifndef _SDL_main_h[m
[31m-#define _SDL_main_h[m
[32m+[m[32m#ifndef SDL_main_h_[m
[32m+[m[32m#define SDL_main_h_[m
 [m
 #include "SDL_stdinc.h"[m
 [m
[36m@@ -107,7 +107,7 @@[m
 /**[m
  *  The prototype for the application's main() function[m
  */[m
[31m-extern C_LINKAGE int SDL_main(int argc, char *argv[]);[m
[32m+[m[32mextern C_LINKAGE DECLSPEC int SDL_main(int argc, char *argv[]);[m
 [m
 [m
 #include "begin_code.h"[m
[36m@@ -156,6 +156,6 @@[m [mextern DECLSPEC int SDLCALL SDL_WinRTRunApp(int (*mainFunction)(int, char **), v[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_main_h */[m
[32m+[m[32m#endif /* SDL_main_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_messagebox.h b/Just a Thought/Libraries/include/SDL_messagebox.h[m
[1mindex ec370db..c326d8f 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_messagebox.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_messagebox.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -19,8 +19,8 @@[m
   3. This notice may not be removed or altered from any source distribution.[m
 */[m
 [m
[31m-#ifndef _SDL_messagebox_h[m
[31m-#define _SDL_messagebox_h[m
[32m+[m[32m#ifndef SDL_messagebox_h_[m
[32m+[m[32m#define SDL_messagebox_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_video.h"      /* For SDL_Window */[m
[36m@@ -139,6 +139,6 @@[m [mextern DECLSPEC int SDLCALL SDL_ShowSimpleMessageBox(Uint32 flags, const char *t[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_messagebox_h */[m
[32m+[m[32m#endif /* SDL_messagebox_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_mouse.h b/Just a Thought/Libraries/include/SDL_mouse.h[m
[1mindex 46f046d..6001bd4 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_mouse.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_mouse.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Include file for SDL mouse event handling.[m
  */[m
 [m
[31m-#ifndef _SDL_mouse_h[m
[31m-#define _SDL_mouse_h[m
[32m+[m[32m#ifndef SDL_mouse_h_[m
[32m+[m[32m#define SDL_mouse_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -38,7 +38,7 @@[m
 extern "C" {[m
 #endif[m
 [m
[31m-typedef struct SDL_Cursor SDL_Cursor;   /* Implementation dependent */[m
[32m+[m[32mtypedef struct SDL_Cursor SDL_Cursor;   /**< Implementation dependent */[m
 [warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_mouse.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_name.h.
The file will have its original line endings in your working directory.
m
 /**[m
  * \brief Cursor types for SDL_CreateSystemCursor().[m
[36m@@ -297,6 +297,6 @@[m [mextern DECLSPEC int SDLCALL SDL_ShowCursor(int toggle);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_mouse_h */[m
[32m+[m[32m#endif /* SDL_mouse_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_mutex.h b/Just a Thought/Libraries/include/SDL_mutex.h[m
[1mindex b7e3973..0272379 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_mutex.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_mutex.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -19,8 +19,8 @@[m
   3. This notice may not be removed or altered from any source distribution.[m
 */[m
 [m
[31m-#ifndef _SDL_mutex_h[m
[31m-#define _SDL_mutex_h[m
[32m+[m[32m#ifndef SDL_mutex_h_[m
[32m+[m[32m#define SDL_mutex_h_[m
 [m
 /**[m
  *  \file SDL_mutex.h[m
[36m@@ -246,6 +246,6 @@[m [mextern DECLSPEC int SDLCALL SDL_CondWaitTimeout(SDL_cond * cond,[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_mutex_h */[m
[32m+[m[32m#endif /* SDL_mutex_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_name.h b/Just a Thought/Libraries/include/SDL_name.h[m
[1mindex 06cd4a5..8095ed3 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_name.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_name.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -19,8 +19,8 @@[m
   3. This notice may not be removed or altered from any source distribution.[m
 */[m
 [m
[31m-#ifndef _SDLname_h_[m
[31m-#define _SDLname_h_[m
[32m+[m[32m#ifndef SDLname_h_[m
[32m+[m[32m#define SDLname_h_[m
 [m
 #if defined(__STDC__) || defined(__cplusplus)[m
 #define NeedFunctionPrototypes 1[m
[36m@@ -28,6 +28,6 @@[m
 [m
 #define SDL_NAME(X) SDL_##X[m
 [m
[31m-#endif /* _SDLname_h_ */[m
[32m+[m[32m#endif /* SDLname_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_opengl.h b/Just a Thought/Libraries/include/SDL_opengl.h[m
[1mindex 780919b..314dd57 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_opengl.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_opengl.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -32,8 +32,8 @@[m
  *  version included in SDL_opengl.h.[m
  */[m
 [m
[31m-#ifndef _SDL_opengl_h[m
[31m-#define _SDL_opengl_h[m
[32m+[m[32m#ifndef SDL_opengl_h_[m
[32m+[m[32m#define SDL_opengl_h_[m
 [m
 #include "SDL_config.h"[m
 [m
[36m@@ -97,6 +97,13 @@[m
 #elif defined(__CYGWIN__) && defined(USE_OPENGL32) /* use native windows opengl32 */[m
 #  define GLAPI extern[m
 #  define GLAPIENTRY __stdcall[m
[32m+[m[32m#elif defined(__OS2__) || defined(__EMX__) /* native os/2 opengl */[m
[32m+[m[32m#  define GLAPI extern[m
[32m+[m[32m#  define GLAPIENTRY _System[m
[32m+[m[32m#  define APIENTRY _System[m
[32m+[m[32m#  if defined(__GNUC__) && !defined(_System)[m
[32m+[m[32m#    define _System[m
[32m+[m[32m#  endif[m
 #elif (defined(__GNUCwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_opengl.h.
The file will have its original line endings in your working directory.
__) && __GNUC__ >= 4) || (defined(__SUNPRO_C) && (__SUNPRO_C >= 0x590))[m
 #  define GLAPI __attribute__((visibility("default")))[m
 #  define GLAPIENTRY[m
[36m@@ -2171,6 +2178,6 @@[m [mtypedef void (APIENTRYP PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) (GLenum t[m
 [m
 #endif /* !__IPHONEOS__ */[m
 [m
[31m-#endif /* _SDL_opengl_h */[m
[32m+[m[32m#endif /* SDL_opengl_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_opengles.h b/Just a Thought/Libraries/include/SDL_opengles.h[m
[1mindex 15abee7..800c593 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_opengles.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_opengles.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_opengles2.h b/Just a Thought/Libraries/include/SDL_opengles2.h[m
[1mindex c961f0f..102f2f3 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_opengles2.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_opengles2.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_pixels.h b/Just a Thought/Libraries/include/SDL_pixels.h[m
[1mindex cf6a33f..0424668 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_pixels.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_pixels.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Header for the enumerated pixel format definitions.[m
  */[m
 [m
[31m-#ifndef _SDL_pixels_h[m
[31m-#define _SDL_pixels_h[m
[32m+[m[32m#ifndef SDL_pixels_h_[m
[32m+[m[32m#define SDL_pixels_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_endian.h"[m
[36m@@ -463,6 +463,6 @@[m [mextern DECLSPEC void SDLCALL SDL_CalculateGammaRamp(float gamma, Uint16 * ramp);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_pixels_h */[m
[32m+[m[32m#endif /* SDL_pixels_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_platform.h b/Just a Thought/Libraries/include/SDL_platform.h[m
[1mindex 03cf170..9dde385 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_platform.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_platform.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Try to get a standard set of platform defines.[m
  */[m
 [m
[31m-#ifndef _SDL_platform_h[m
[31m-#define _SDL_platform_h[m
[32m+[m[32m#ifndef SDL_platform_h_[m
[32m+[m[32m#define SDL_platform_h_[m
 [m
 #if defined(_AIX)[m
 #undef __AIX__[m
[36m@@ -97,7 +97,7 @@[m
 #undef __OPENBSD__[m
 #define __OPENBSD__ 1[m
 #endif[m
[31m-#if defined(__OS2__)[m
[32m+[m[32m#if defined(__OS2__) || defined(__EMX__)[m
 #undef __OS2__[m
 #define __OS2__     1[m
 #endif[m
[36m@@ -120,21 +120,29 @@[m
 [m
 #if defined(WIN32) || defined(_WIN32) || defined(__CYGWIN__) || defined(__MINGW32__)[m
 /* Try to find out if we're compiling for WinRT or non-WinRT */[m
[31m-/* If _USING_V110_SDK71_ is defined it means we are using the v110_xp or v120_xp toolset. */[m
[31m-#if (defined(_MSC_VER) && (_MSC_VER >= 1700) && !_USING_V110_SDK71_)	/* _MSC_VER==1700 for MSVC 2012 */[m
[32m+[m[32m#if defined(_MSC_VER) && defined(__has_include)[m
[32m+[m[32m#define HAVE_WINAPIFAMILY_H __has_include(<winapifamily.h>)[m
[32m+[m[32m/* If _USING_V110_SDK71_ is defined it means we are using the Windows XP toolset. */[m
[32m+[m[32m#elif defined(_MSC_VER) && (_MSC_VER >= 1700 && !_USING_V110_SDK71_)    /* _MSC_VER == 1700 for Visual Studio 2012 */[m
[32m+[m[32m#define HAVE_WINAPIFAMILY_H 1[m
[32m+[m[32m#else[m
[32m+[m[32m#define HAVE_WINAPIFAMILY_H 0[m
[32m+[m[32m#endif[m
[32m+[m
[32m+[m[32m#if HAVE_WINAPIFAMILY_H[m
 #include <winapifamily.h>[m
[31m-#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)[m
[31m-#undef __WINDOWS__[m
[31m-#define __WINDOWS__   1[m
[31m-/* See if we're compiling for WinRT: */[m
[31m-#elif WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)[m
[32m+[m[32m#define WINAPI_FAMILY_WINRT (!WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP))[m
[32m+[m[32m#else[m
[32m+[m[32m#define WINAPI_FAMILY_WINRT 0[m
[32m+[m[32m#endif /* HAVE_WINAPIFAMILY_H */[m
[32m+[m
[32m+[m[32m#if WINAPI_FAMILY_WINRT[m
 #undef __WINRT__[m
 #define __WINRT__ 1[m
[31m-#endif[m
 #else[m
 #undef __WINDOWS__[m
[31m-#define __WINDOWS__   1[m
[31m-#endif /* _MSC_VER < 1700 */[m
[32m+[m[32m#define __WINDOWS__ 1[m
[32m+[m[32m#endif[m
 #endif /* defined(WIN32) || defined(_WIN32) || defined(__CYGWIN__) */[m
 [m
 #if defined(__WINDOWS__)[m
[36m@@ -180,6 +188,6 @@[m [mextern DECLSPEC const char * SDLCALL SDL_GetPlatform (void);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_platform_h */[m
[32m+[m[32m#endif /* SDL_platform_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_power.h b/Just a Thought/Libraries/include/SDL_power.h[m
[1mindex 24c0501..d48e8a3 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_power.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_power.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -19,8 +19,8 @@[m
   3. This notice may not be removed or altered from any source distribution.[m
 */[m
 [m
[31m-#ifndef _SDL_power_h[m
[31m-#define _SDL_power_h[m
[32m+[m[32m#ifndef SDL_power_h_[m
[32m+[m[32m#define SDL_power_h_[m
 [m
 /**[m
  *  \file SDL_power.h[m
[36m@@ -70,6 +70,6 @@[m [mextern DECLSPEC SDL_PowerState SDLCALL SDL_GetPowerInfo(int *secs, int *pct);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_power_h */[m
[32m+[m[32m#endif /* SDL_power_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_quit.h b/Just a Thought/Libraries/include/SDL_quit.h[m
[1mindex cc06f28..9283c38 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_quit.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_quit.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Include file for SDL quit event handling.[m
  */[m
 [m
[31m-#ifndef warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_platform.h.
The file will have its original line endings in your working directory.
_SDL_quit_h[m
[31m-#define _SDL_quit_h[m
[32m+[m[32m#ifndef SDL_quit_h_[m
[32m+[m[32m#define SDL_quit_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -55,4 +55,4 @@[m
 #define SDL_QuitRequested() \[m
         (SDL_PumpEvents(), (SDL_PeepEvents(NULL,0,SDL_PEEKEVENT,SDL_QUIT,SDL_QUIT) > 0))[m
 [m
[31m-#endif /* _SDL_quit_h */[m
[32m+[m[32m#endif /* SDL_quit_h_ */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_rect.h b/Just a Thought/Libraries/include/SDL_rect.h[m
[1mindex bbcb9a3..c4f6d74 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_rect.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_rect.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Header file for SDL_rect definition and management functions.[m
  */[m
 [m
[31m-#ifndef _SDL_rect_h[m
[31m-#define _SDL_rect_h[m
[32m+[m[32m#ifndef SDL_rect_h_[m
[32m+[m[32m#define SDL_rect_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -143,6 +143,6 @@[m [mextern DECLSPEC SDL_bool SDLCALL SDL_IntersectRectAndLine(const SDL_Rect *[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_rect_h */[m
[32m+[m[32m#endif /* SDL_rect_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_render.h b/Just a Thought/Libraries/include/SDL_render.h[m
[1mindex 60c87b6..ea6ef9f 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_render.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_render.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -45,8 +45,8 @@[m
  *  See this bug for details: http://bugzilla.libsdl.org/show_bug.cgi?id=1995[m
  */[m
 [m
[31m-#ifndef _SDL_render_h[m
[31m-#define _SDL_render_h[m
[32m+[m[32m#ifndef SDL_render_h_[m
[32m+[m[32m#define SDL_render_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_rect.h"[m
[36m@@ -233,6 +233,8 @@[m [mextern DECLSPEC int SDLCALL SDL_GetRendererOutputSize(SDL_Renderer * renderer,[m
  *          active,  the format was unsupported, or the width or height were out[m
  *          of range.[m
  *[m
[32m+[m[32m *  \note The contents of the texture are not defined at creation.[m
[32m+[m[32m *[m
  *  \sa SDL_QueryTexture()[m
  *  \sa SDL_UpdateTexture()[m
  *  \sa SDL_DestroyTexture()[m
[36m@@ -370,9 +372,12 @@[m [mextern DECLSPEC int SDLCALL SDL_GetTextureBlendMode(SDL_Texture * texture,[m
  *  \param texture   The texture to update[m
  *  \param rect      A pointer to the rectangle of pixels to update, or NULL to[m
  *                   update the entire texture.[m
[31m- *  \param pixels    The raw pixel data.[m
[32m+[m[32m *  \param pixels    The raw pixel data in the format of the texture.[m
  *  \param pitch     The number of bytes in a row of pixel data, including padding between lines.[m
  *[m
[32m+[m[32m *  The pixel data must be in the format of the texture. The pixel format can be[m
[32m+[m[32m *  queried with SDL_QueryTexture.[m
[32m+[m[32m *[m
  *  \return 0 on success, or -1 if the texture is not valid.[m
  *[m
  *  \note This is a fairly slow function.[m
[36m@@ -816,7 +821,7 @@[m [mextern DECLSPEC int SDLCALL SDL_RenderCopy(SDL_Renderer * renderer,[m
  *                   texture.[m
  *  \param dstrect   A pointer to the destination rectangle, or NULL for the[m
  *                   entire rendering target.[m
[31m- warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_render.h.
The file will have its original line endings in your working directory.
*  \param angle    An angle in degrees that indicates the rotation that will be applied to dstrect[m
[32m+[m[32m *  \param angle    An angle in degrees that indicates the rotation that will be applied to dstrect, rotating it in a clockwise direction[m
  *  \param center   A pointer to a point indicating the point around which dstrect will be rotated (if NULL, rotation will be done around dstrect.w/2, dstrect.h/2).[m
  *  \param flip     An SDL_RendererFlip value stating which flipping actions should be performed on the texture[m
  *[m
[36m@@ -900,6 +905,6 @@[m [mextern DECLSPEC int SDLCALL SDL_GL_UnbindTexture(SDL_Texture *texture);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_render_h */[m
[32m+[m[32m#endif /* SDL_render_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_revision.h b/Just a Thought/Libraries/include/SDL_revision.h[m
[1mindex 341dc5c..9376093 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_revision.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_revision.h[m	
[36m@@ -1,2 +1,2 @@[m
[31m-#define SDL_REVISION "hg-10556:007dfe83abf8"[m
[31m-#define SDL_REVISION_NUMBER 10556[m
[32m+[m[32m#define SDL_REVISION "hg-11645:2088cd828335"[m
[32m+[m[32m#define SDL_REVISION_NUMBER 11645[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_rwops.h b/Just a Thought/Libraries/include/SDL_rwops.h[m
[1mindex 1ad3ac4..7f0cbdf 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_rwops.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_rwops.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -26,8 +26,8 @@[m
  *  data streams.  It can easily be extended to files, memory, etc.[m
  */[m
 [m
[31m-#ifndef _SDL_rwops_h[m
[31m-#define _SDL_rwops_h[m
[32m+[m[32m#ifndef SDL_rwops_h_[m
[32m+[m[32m#define SDL_rwops_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -39,12 +39,12 @@[m [mextern "C" {[m
 #endif[m
 [m
 /* RWops Types */[m
[31m-#define SDL_RWOPS_UNKNOWN   0U  /* Unknown stream type */[m
[31m-#define SDL_RWOPS_WINFILE   1U  /* Win32 file */[m
[31m-#define SDL_RWOPS_STDFILE   2U  /* Stdio file */[m
[31m-#define SDL_RWOPS_JNIFILE   3U  /* Android asset */[m
[31m-#define SDL_RWOPS_MEMORY    4U  /* Memory stream */[m
[31m-#define SDL_RWOPS_MEMORY_RO 5U  /* Read-Only memory stream */[m
[32m+[m[32m#define SDL_RWOPS_UNKNOWN   0U  /**< Unknown stream type */[m
[32m+[m[32m#define SDL_RWOPS_WINFILE   1U  /**< Win32 file */[m
[32m+[m[32m#define SDL_RWOPS_STDFILE   2U  /**< Stdio file */[m
[32m+[m[32m#define SDL_RWOPS_JNIFILE   3U  /**< Android asset */[m
[32m+[m[32m#define SDL_RWOPS_MEMORY    4U  /**< Memory stream */[m
[32m+[m[32m#define SDL_RWOPS_MEMORY_RO 5U  /**< Read-Only memory stream */[m
 [m
 /**[m
  * This is the read/write operation structure -- very basic.[m
[36m@@ -191,6 +191,29 @@[m [mextern DECLSPEC void SDLCALL SDL_FreeRW(SDL_RWops * area);[m
 [m
 [m
 /**[m
[32m+[m[32m *  Load all the data from an SDL data stream.[m
[32m+[m[32m *[m
[32m+[m[32m *  The data is allocated with a zero byte at the end (null terminated)[m
[32m+[m[32m *[m
[32m+[m[32m *  If \c datasize is not NULL, it is filled with the size of the data read.[m
[32m+[m[32m *[m
[32m+[m[32m *  If \c freesrc is non-zero, the stream will be closed after being read.[m
[32m+[m[32m *[m
[32m+[m[32m *  The data should be freed with SDL_free().[m
[32m+[m[32m *[m
[32m+[m[32m *  \return the data, or NULL if there was an error.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC void *SDLCALL SDL_LoadFile_RW(SDL_RWops * src, size_t *datasize,[m
[32m+[m[32m                                warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_rwops.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_scancode.h.
The file will have its original line endings in your working directory.
                    int freesrc);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  Load an entire file.[m
[32m+[m[32m *[m
[32m+[m[32m *  Convenience macro.[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_LoadFile(file, datasize)   SDL_LoadFile_RW(SDL_RWFromFile(file, "rb"), datasize, 1)[m
[32m+[m
[32m+[m[32m/**[m
  *  \name Read endian functions[m
  *[m
  *  Read an item of the specified endianness and return in native format.[m
[36m@@ -226,6 +249,6 @@[m [mextern DECLSPEC size_t SDLCALL SDL_WriteBE64(SDL_RWops * dst, Uint64 value);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_rwops_h */[m
[32m+[m[32m#endif /* SDL_rwops_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_scancode.h b/Just a Thought/Libraries/include/SDL_scancode.h[m
[1mindex 0af1dd5..1d55212 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_scancode.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_scancode.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Defines keyboard scancodes.[m
  */[m
 [m
[31m-#ifndef _SDL_scancode_h[m
[31m-#define _SDL_scancode_h[m
[32m+[m[32m#ifndef SDL_scancode_h_[m
[32m+[m[32m#define SDL_scancode_h_[m
 [m
 #include "SDL_stdinc.h"[m
 [m
[36m@@ -38,7 +38,7 @@[m
  *  SDL_Event structure.[m
  *[m
  *  The values in this enumeration are based on the USB usage page standard:[m
[31m- *  http://www.usb.org/developers/devclass_docs/Hut1_12v2.pdf[m
[32m+[m[32m *  http://www.usb.org/developers/hidpage/Hut1_12v2.pdf[m
  */[m
 typedef enum[m
 {[m
[36m@@ -390,12 +390,24 @@[m [mtypedef enum[m
 [m
     /* @} *//* Walther keys */[m
 [m
[32m+[m[32m    /**[m
[32m+[m[32m     *  \name Usage page 0x0C (additional media keys)[m
[32m+[m[32m     *[m
[32m+[m[32m     *  These values are mapped from usage page 0x0C (USB consumer page).[m
[32m+[m[32m     */[m
[32m+[m[32m    /* @{ */[m
[32m+[m
[32m+[m[32m    SDL_SCANCODE_AUDIOREWIND = 285,[m
[32m+[m[32m    SDL_SCANCODE_AUDIOFASTFORWARD = 286,[m
[32m+[m
[32m+[m[32m    /* @} *//* Usage page 0x0C (additional media keys) */[m
[32m+[m
     /* Add any other keys here. */[m
 [m
     SDL_NUM_SCANCODES = 512 /**< not a key, just marks the number of scancodes[m
                                  for array bounds */[m
 } SDL_Scancode;[m
 [m
[31m-#endif /* _SDL_scancode_h */[m
[32m+[m[32m#endif /* SDL_scancode_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_shape.h b/Just a Thought/Libraries/include/SDL_shape.h[m
[1mindex db10a8f..9e492d9 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_shape.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_shape.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -19,8 +19,8 @@[m
   3. This notice may not be removed or altered from any source distribution.[m
 */[m
 [m
[31m-#ifndef _SDL_shape_h[m
[31m-#define _SDL_shape_h[m
[32m+[m[32m#ifndef SDL_shape_h_[m
[32m+[m[32m#define SDL_shape_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_pixels.h"[m
[36m@@ -71,6 +71,7 @@[m [mextern DECLSPEC SDL_Window * SDLCALL SDL_CreateShapedWindow(const char *title,un[m
  * \param window The window to query for being shaped.[m
  *[m
  * \return SDL_TRUE if the window is a window that can be shaped, SDL_FALSE if the window is unshaped or warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_shape.h.
The file will have its original line endings in your working directory.
NULL.[m
[32m+[m[32m *[m
  * \sa SDL_CreateShapedWindow[m
  */[m
 extern DECLSPEC SDL_bool SDLCALL SDL_IsShapedWindow(const SDL_Window *window);[m
[36m@@ -91,7 +92,7 @@[m [mtypedef enum {[m
 [m
 /** \brief A union containing parameters for shaped windows. */[m
 typedef union {[m
[31m-    /** \brief a cutoff alpha value for binarization of the window shape's alpha channel. */[m
[32m+[m[32m    /** \brief A cutoff alpha value for binarization of the window shape's alpha channel. */[m
     Uint8 binarizationCutoff;[m
     SDL_Color colorKey;[m
 } SDL_WindowShapeParams;[m
[36m@@ -111,8 +112,8 @@[m [mtypedef struct SDL_WindowShapeMode {[m
  * \param shape A surface encoding the desired shape for the window.[m
  * \param shape_mode The parameters to set for the shaped window.[m
  *[m
[31m- * \return 0 on success, SDL_INVALID_SHAPE_ARGUMENT on invalid an invalid shape argument, or SDL_NONSHAPEABLE_WINDOW[m
[31m- *           if the SDL_Window* given does not reference a valid shaped window.[m
[32m+[m[32m * \return 0 on success, SDL_INVALID_SHAPE_ARGUMENT on an invalid shape argument, or SDL_NONSHAPEABLE_WINDOW[m
[32m+[m[32m *           if the SDL_Window given does not reference a valid shaped window.[m
  *[m
  * \sa SDL_WindowShapeMode[m
  * \sa SDL_GetShapedWindowMode.[m
[36m@@ -127,7 +128,7 @@[m [mextern DECLSPEC int SDLCALL SDL_SetWindowShape(SDL_Window *window,SDL_Surface *s[m
  *[m
  * \return 0 if the window has a shape and, provided shape_mode was not NULL, shape_mode has been filled with the mode[m
  *           data, SDL_NONSHAPEABLE_WINDOW if the SDL_Window given is not a shaped window, or SDL_WINDOW_LACKS_SHAPE if[m
[31m- *           the SDL_Window* given is a shapeable window currently lacking a shape.[m
[32m+[m[32m *           the SDL_Window given is a shapeable window currently lacking a shape.[m
  *[m
  * \sa SDL_WindowShapeMode[m
  * \sa SDL_SetWindowShape[m
[36m@@ -140,4 +141,4 @@[m [mextern DECLSPEC int SDLCALL SDL_GetShapedWindowMode(SDL_Window *window,SDL_Windo[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_shape_h */[m
[32m+[m[32m#endif /* SDL_shape_h_ */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_stdinc.h b/Just a Thought/Libraries/include/SDL_stdinc.h[m
[1mindex fdf9641..7240229 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_stdinc.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_stdinc.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  This is a general header that includes C language support.[m
  */[m
 [m
[31m-#ifndef _SDL_stdinc_h[m
[31m-#define _SDL_stdinc_h[m
[32m+[m[32m#ifndef SDL_stdinc_h_[m
[32m+[m[32m#define SDL_stdinc_h_[m
 [m
 #include "SDL_config.h"[m
 [m
[36m@@ -62,6 +62,9 @@[m
 #ifdef HAVE_STRINGS_H[m
 # include <strings.h>[m
 #endif[m
[32m+[m[32m#ifdef HAVE_WCHAR_H[m
[32m+[m[32m# include <wchar.h>[m
[32m+[m[32m#endif[m
 #if defined(HAVE_INTTYPES_H)[m
 # include <inttypes.h>[m
 #elif defined(HAVE_STDINT_H)[m
[36m@@ -127,44 +130,67 @@[m
  */[m
 /* @{ */[m
 [m
[32m+[m[32m#ifdef __CC_ARM[m
[32m+[m[32m/* ARM's compiler throws warnings if we use an enum: like "SDL_bool x = a < b;" */[m
[32m+[m[32m#define SDL_FALSE 0[m
[32m+[m[32m#define SDL_TRUE 1[m
[32m+[m[32mtypedef int SDL_bool;[m
[32m+[m[32m#else[m
 typedef enum[m
 {[m
     SDL_FALSE = 0,[m
     SDL_TRUE = 1[m
 } SDL_bool;[m
[32m+[m[32m#endif[m
 [m
 /**[m
  * \brief A signed 8-bit integer type.[m
  */[m
[32m+[m[32m#define SDL_MAX_SINT8   ((Sint8)0x7F)           /* 127 */[m
[32m+[m[32m#define SDL_MIN_SINT8   ((Sint8)(~0x7F))        /* -128 */[m
 typedef int8_t Sint8;[m
 /**[m
  * \brief An unsigned 8-bit integer type.[m
  */[m
[32m+[m[32m#define SDL_MAX_UINT8   ((Uint8)0xFF)           /* 255 */[m
[32m+[m[32m#define SDL_MIN_UINT8   ((Uint8)0x00)           /* 0 */[m
 typedef uint8_t Uint8;[m
 /**[m
  * \brief A signed 16-bit integer type.[m
  */[m
[32m+[m[32m#define SDL_MAX_SINT16  ((Sint16)0x7FFF)        /* 32767 */[m
[32m+[m[32m#define SDL_MIN_SINT16  ((Sint16)(~0x7FFF))     /* -32768 */[m
 typedef int16_t Sint16;[m
 /**[m
  * \brief An unsigned 16-bit integer type.[m
  */[m
[32m+[m[32m#define SDL_MAX_UINT16  ((Uint16)0xFFFF)        /* 65535 */[m
[32m+[m[32m#define SDL_MIN_UINT16  ((Uint16)0x0000)        /* 0 */[m
 typedef uint16_t Uint16;[m
 /**[m
  * \brief A signed 32-bit integer type.[m
  */[m
[32m+[m[32m#define SDL_MAX_SINT32  ((Sint32)0x7FFFFFFF)    /* 2147483647 */[m
[32m+[m[32m#define SDL_MIN_SINT32  ((Sint32)(~0x7FFFFFFF)) /* -2147483648 */[m
 typedef int32_t Sint32;[m
 /**[m
  * \brief An unsigned 32-bit integer type.[m
  */[m
[32m+[m[32m#define SDL_MAX_UINT32  ((Uint32)0xFFFFFFFFu)   /* 4294967295 */[m
[32m+[m[32m#define SDL_MIN_UINT32  ((Uint32)0x00000000)    /* 0 */[m
 typedef uint32_t Uint32;[m
 [m
 /**[m
  * \brief A signed 64-bit integer type.[m
  */[m
[32m+[m[32m#define SDL_MAX_SINT64  ((Sint64)0x7FFFFFFFFFFFFFFFll)      /* 9223372036854775807 */[m
[32m+[m[32m#define SDL_MIN_SINT64  ((Sint64)(~0x7FFFFFFFFFFFFFFFll))   /* -9223372036854775808 */[m
 typedef int64_t Sint64;[m
 /**[m
  * \brief An unsigned 64-bit integer type.[m
  */[m
[32m+[m[32m#define SDL_MAX_UINT64  ((Uint64)0xFFFFFFFFFFFFFFFFull)     /* 18446744073709551615 */[m
[32m+[m[32m#define SDL_MIN_UINT64  ((Uint64)(0x0000000000000000ull))   /* 0 */[m
 typedef uint64_t Uint64;[m
 [m
 /* @} *//* Basic data types */[m
[36m@@ -262,7 +288,7 @@[m [mtypedef uint64_t Uint64;[m
 #endif /* SDL_DISABLE_ANALYZE_MACROS */[m
 [m
 #define SDL_COMPILE_TIME_ASSERT(name, x)               \[m
[31m-       typedef int SDL_dummy_ ## name[(x) * 2 - 1][m
[32m+[m[32m       typedef int SDL_compile_time_assert_ ## name[(x) * 2 - 1][m
 /** \cond */[m
 #ifndef DOXYGEN_SHOULD_IGNORE_THIS[m
 SDL_COMPILE_TIME_ASSERT(uint8, sizeof(Uint8) == 1);[m
[36m@@ -337,6 +363,37 @@[m [mextern DECLSPEC void *SDLCALL SDL_calloc(size_t nmemb, size_t size);[m
 extern DECLSPEC void *SDLCALL SDL_realloc(void *mem, size_t size);[m
 extern DECLSPEC void SDLCALL SDL_free(void *mem);[m
 [m
[32m+[m[32mtypedef void *(SDLCALL *SDL_malloc_func)(size_t size);[m
[32m+[m[32mtypedef void *(SDLCALL *SDL_calloc_func)(size_t nmemb, size_t size);[m
[32m+[m[32mtypedef void *(SDLCALL *SDL_realloc_func)(void *mem, size_t size);[m
[32m+[m[32mtypedef void (SDLCALL *SDL_free_func)(void *mem);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief Get the current set of SDL memory functions[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC void SDLCALL SDL_GetMemoryFunctions(SDL_malloc_func *malloc_func,[m
[32m+[m[32m                                                    SDL_calloc_func *calloc_func,[m
[32m+[m[32m                                                    SDL_realloc_func *realloc_func,[m
[32m+[m[32m                                                    SDL_free_func *free_func);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief Replace SDL's memory allocation functions with a custom set[m
[32m+[m[32m *[m
[32m+[m[32m *  \note If you are replacing SDL's memory functions, you should call[m
[32m+[m[32m *        SDL_GetNumAllocations() and be very careful if it returns non-zero.[m
[32m+[m[32m *        That means that your free function will be called with memory[m
[32m+[m[32m *        allocated by the previous memory allocation functions.[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_SetMemoryFunctions(SDL_malloc_func malloc_func,[m
[32m+[m[32m                                                   SDL_calloc_func calloc_func,[m
[32m+[m[32m                                                   SDL_realloc_func realloc_fwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_stdinc.h.
The file will have its original line endings in your working directory.
unc,[m
[32m+[m[32m                                                   SDL_free_func free_func);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief Get the number of outstanding (unfreed) allocations[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_GetNumAllocations(void);[m
[32m+[m
 extern DECLSPEC char *SDLCALL SDL_getenv(const char *name);[m
 extern DECLSPEC int SDLCALL SDL_setenv(const char *name, const char *value, int overwrite);[m
 [m
[36m@@ -379,10 +436,10 @@[m [mSDL_FORCE_INLINE void SDL_memset4(void *dst, Uint32 val, size_t dwords)[m
         return;[m
     switch (dwords % 4)[m
     {[m
[31m-        case 0: do {    *_p++ = _val;[m
[31m-        case 3:         *_p++ = _val;[m
[31m-        case 2:         *_p++ = _val;[m
[31m-        case 1:         *_p++ = _val;[m
[32m+[m[32m        case 0: do {    *_p++ = _val;   /* fallthrough */[m
[32m+[m[32m        case 3:         *_p++ = _val;   /* fallthrough */[m
[32m+[m[32m        case 2:         *_p++ = _val;   /* fallthrough */[m
[32m+[m[32m        case 1:         *_p++ = _val;   /* fallthrough */[m
         } while ( --_n );[m
     }[m
 #endif[m
[36m@@ -397,6 +454,7 @@[m [mextern DECLSPEC int SDLCALL SDL_memcmp(const void *s1, const void *s2, size_t le[m
 extern DECLSPEC size_t SDLCALL SDL_wcslen(const wchar_t *wstr);[m
 extern DECLSPEC size_t SDLCALL SDL_wcslcpy(SDL_OUT_Z_CAP(maxlen) wchar_t *dst, const wchar_t *src, size_t maxlen);[m
 extern DECLSPEC size_t SDLCALL SDL_wcslcat(SDL_INOUT_Z_CAP(maxlen) wchar_t *dst, const wchar_t *src, size_t maxlen);[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_wcscmp(const wchar_t *str1, const wchar_t *str2);[m
 [m
 extern DECLSPEC size_t SDLCALL SDL_strlen(const char *str);[m
 extern DECLSPEC size_t SDLCALL SDL_strlcpy(SDL_OUT_Z_CAP(maxlen) char *dst, const char *src, size_t maxlen);[m
[36m@@ -409,6 +467,7 @@[m [mextern DECLSPEC char *SDLCALL SDL_strlwr(char *str);[m
 extern DECLSPEC char *SDLCALL SDL_strchr(const char *str, int c);[m
 extern DECLSPEC char *SDLCALL SDL_strrchr(const char *str, int c);[m
 extern DECLSPEC char *SDLCALL SDL_strstr(const char *haystack, const char *needle);[m
[32m+[m[32mextern DECLSPEC size_t SDLCALL SDL_utf8strlen(const char *str);[m
 [m
 extern DECLSPEC char *SDLCALL SDL_itoa(int value, char *str, int radix);[m
 extern DECLSPEC char *SDLCALL SDL_uitoa(unsigned int value, char *str, int radix);[m
[36m@@ -437,7 +496,7 @@[m [mextern DECLSPEC int SDLCALL SDL_vsnprintf(SDL_OUT_Z_CAP(maxlen) char *text, size[m
 [m
 #ifndef HAVE_M_PI[m
 #ifndef M_PI[m
[31m-#define M_PI    3.14159265358979323846264338327950288   /* pi */[m
[32m+[m[32m#define M_PI    3.14159265358979323846264338327950288   /**< pi */[m
 #endif[m
 #endif[m
 [m
[36m@@ -526,6 +585,6 @@[m [mSDL_FORCE_INLINE void *SDL_memcpy4(SDL_OUT_BYTECAP(dwords*4) void *dst, SDL_IN_B[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_stdinc_h */[m
[32m+[m[32m#endif /* SDL_stdinc_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_surface.h b/Just a Thought/Libraries/include/SDL_surface.h[m
[1mindex e4a06a2..510690c 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_surface.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_surface.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Header file for ::SDL_Surface definition and management functions.[m
  */[m
 [m
[31m-#ifndef _SDL_surface_h[m
[31m-#define _SDL_surface_h[m
[32m+[m[32m#ifndef SDL_surface_h_[m
[32m+[m[32m#define SDL_surface_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_pixels.h"[m
[36m@@ -94,8 +94,8 @@[m [mtypedef struct SDL_Surfacewarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_surface.h.
The file will have its original line endings in your working directory.
[m
 /**[m
  * \brief The type of function used for surface blitting functions.[m
  */[m
[31m-typedef int (*SDL_blit) (struct SDL_Surface * src, SDL_Rect * srcrect,[m
[31m-                         struct SDL_Surface * dst, SDL_Rect * dstrect);[m
[32m+[m[32mtypedef int (SDLCALL *SDL_blit) (struct SDL_Surface * src, SDL_Rect * srcrect,[m
[32m+[m[32m                                 struct SDL_Surface * dst, SDL_Rect * dstrect);[m
 [m
 /**[m
  *  Allocate and free an RGB surface.[m
[36m@@ -118,8 +118,11 @@[m [mtypedef int (*SDL_blit) (struct SDL_Surface * src, SDL_Rect * srcrect,[m
 extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurface[m
     (Uint32 flags, int width, int height, int depth,[m
      Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask);[m
[32m+[m
[32m+[m[32m/* !!! FIXME for 2.1: why does this ask for depth? Format provides that. */[m
 extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurfaceWithFormat[m
     (Uint32 flags, int width, int height, int depth, Uint32 format);[m
[32m+[m
 extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurfaceFrom(void *pixels,[m
                                                               int width,[m
                                                               int height,[m
[36m@@ -356,6 +359,11 @@[m [mextern DECLSPEC SDL_bool SDLCALL SDL_SetClipRect(SDL_Surface * surface,[m
 extern DECLSPEC void SDLCALL SDL_GetClipRect(SDL_Surface * surface,[m
                                              SDL_Rect * rect);[m
 [m
[32m+[m[32m/*[m
[32m+[m[32m * Creates a new surface identical to the existing surface[m
[32m+[m[32m */[m
[32m+[m[32mextern DECLSPEC SDL_Surface *SDLCALL SDL_DuplicateSurface(SDL_Surface * surface);[m
[32m+[m
 /**[m
  *  Creates a new surface of the specified format, and then copies and maps[m
  *  the given surface to it so the blit of the converted surface will be as[m
[36m@@ -508,6 +516,6 @@[m [mextern DECLSPEC int SDLCALL SDL_LowerBlitScaled[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_surface_h */[m
[32m+[m[32m#endif /* SDL_surface_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_system.h b/Just a Thought/Libraries/include/SDL_system.h[m
[1mindex 5da9adb..eb069b3 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_system.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_system.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Include file for platform specific SDL API functions[m
  */[m
 [m
[31m-#ifndef _SDL_system_h[m
[31m-#define _SDL_system_h[m
[32m+[m[32m#ifndef SDL_system_h_[m
[32m+[m[32m#define SDL_system_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_keyboard.h"[m
[36m@@ -96,7 +96,7 @@[m [mextern DECLSPEC void SDLCALL SDL_iPhoneSetEventPump(SDL_bool enabled);[m
 [m
    This returns JNIEnv*, but the prototype is void* so we don't need jni.h[m
  */[m
[31m-extern DECLSPEC void * SDLCALL SDL_AndroidGetJNIEnv();[m
[32m+[m[32mextern DECLSPEC void * SDLCALL SDL_AndroidGetJNIEnv(void);[m
 [m
 /**[m
    \brief Get the SDL Activity object for the application[m
[36m@@ -106,7 +106,7 @@[m [mextern DECLSPEC void * SDLCALL SDL_AndroidGetJNIEnv();[m
    It is the caller's responsibility to properly release it[m
    (using env->Push/PopLocalFrame or manually with env->DeleteLocalRef)[m
  */[m
[31m-extern DECLSPEC void * SDLCALL SDL_AndroidGetActivity();[m
[32m+[m[32mextern DECLSPEC void * SDLCALL SDL_AndroidGetActivity(void);[m
 [m
 /**[m
    See the official Android developer guide for more information:[m
[36m@@ -121,7 +121,7 @@[m [mextern DECLSPEC void * SDLCALL SDL_AndroidGetActivity();[m
    This pathwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_system.h.
The file will have its original line endings in your working directory.
 is unique to your application and cannot be written to[m
    by other applications.[m
  */[m
[31m-extern DECLSPEC const char * SDLCALL SDL_AndroidGetInternalStoragePath();[m
[32m+[m[32mextern DECLSPEC const char * SDLCALL SDL_AndroidGetInternalStoragePath(void);[m
 [m
 /**[m
    \brief Get the current state of external storage, a bitmask of these values:[m
[36m@@ -130,7 +130,7 @@[m [mextern DECLSPEC const char * SDLCALL SDL_AndroidGetInternalStoragePath();[m
 [m
    If external storage is currently unavailable, this will return 0.[m
 */[m
[31m-extern DECLSPEC int SDLCALL SDL_AndroidGetExternalStorageState();[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_AndroidGetExternalStorageState(void);[m
 [m
 /**[m
    \brief Get the path used for external storage for this application.[m
[36m@@ -138,7 +138,7 @@[m [mextern DECLSPEC int SDLCALL SDL_AndroidGetExternalStorageState();[m
    This path is unique to your application, but is public and can be[m
    written to by other applications.[m
  */[m
[31m-extern DECLSPEC const char * SDLCALL SDL_AndroidGetExternalStoragePath();[m
[32m+[m[32mextern DECLSPEC const char * SDLCALL SDL_AndroidGetExternalStoragePath(void);[m
 [m
 #endif /* __ANDROID__ */[m
 [m
[36m@@ -211,6 +211,6 @@[m [mextern DECLSPEC const char * SDLCALL SDL_WinRTGetFSPathUTF8(SDL_WinRT_Path pathT[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_system_h */[m
[32m+[m[32m#endif /* SDL_system_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_syswm.h b/Just a Thought/Libraries/include/SDL_syswm.h[m
[1mindex 71ba5f1..2d18afb 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_syswm.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_syswm.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Include file for SDL custom system window manager hooks.[m
  */[m
 [m
[31m-#ifndef _SDL_syswm_h[m
[31m-#define _SDL_syswm_h[m
[32m+[m[32m#ifndef SDL_syswm_h_[m
[32m+[m[32m#define SDL_syswm_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -125,7 +125,8 @@[m [mtypedef enum[m
     SDL_SYSWM_MIR,[m
     SDL_SYSWM_WINRT,[m
     SDL_SYSWM_ANDROID,[m
[31m-    SDL_SYSWM_VIVANTE[m
[32m+[m[32m    SDL_SYSWM_VIVANTE,[m
[32m+[m[32m    SDL_SYSWM_OS2[m
 } SDL_SYSWM_TYPE;[m
 [m
 /**[m
[36m@@ -201,6 +202,7 @@[m [mstruct SDL_SysWMinfo[m
         {[m
             HWND window;                /**< The window handle */[m
             HDC hdc;                    /**< The window device context */[m
[32m+[m[32m            HINSTANCE hinstance;        /**< The instance handle */[m
         } win;[m
 #endif[m
 #if defined(SDL_VIDEO_DRIVER_WINRT)[m
[36m@@ -228,9 +230,9 @@[m [mstruct SDL_SysWMinfo[m
         struct[m
         {[m
 #if defined(__OBJC__) && defined(__has_feature) && __has_feature(objc_arc)[m
[31m-            NSWindow __unsafe_unretained *window; /* The Cocoa window */[m
[32m+[m[32m            NSWindow __unsafe_unretained *window; /**< The Cocoa window */[m
 #else[m
[31m-            NSWindow *window;                     /* The Cocoa window */[m
[32m+[m[32m            NSWindow *window;                     /**< The Cocoa window */[m
 #endif[m
         } cocoa;[m
 #endif[m
[36m@@ -238,13 +240,13 @@[m [mstruct SDL_SysWMinfo[m
         struct[m
         {[m
 #if defined(__OBJC__) && defined(__has_feature) && __has_feature(objc_arc)[m
[31m-            UIWindow __unsafe_unretained *window; /* The UIKit window */[m
[32m+[m[32m            UIWindow __unsafe_unretained *window; /**< The UIKit window */[m
 #else[m
[31m-            UIWindow *window;                     /* The UIKit windowarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_syswm.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test.h.
The file will have its original line endings in your working directory.
w */[m
[32m+[m[32m            UIWindow *window;                     /**< The UIKit window */[m
 #endif[m
[31m-            GLuint framebuffer; /* The GL view's Framebuffer Object. It must be bound when rendering to the screen using GL. */[m
[31m-            GLuint colorbuffer; /* The GL view's color Renderbuffer Object. It must be bound when SDL_GL_SwapWindow is called. */[m
[31m-            GLuint resolveFramebuffer; /* The Framebuffer Object which holds the resolve color Renderbuffer, when MSAA is used. */[m
[32m+[m[32m            GLuint framebuffer; /**< The GL view's Framebuffer Object. It must be bound when rendering to the screen using GL. */[m
[32m+[m[32m            GLuint colorbuffer; /**< The GL view's color Renderbuffer Object. It must be bound when SDL_GL_SwapWindow is called. */[m
[32m+[m[32m            GLuint resolveFramebuffer; /**< The Framebuffer Object which holds the resolve color Renderbuffer, when MSAA is used. */[m
         } uikit;[m
 #endif[m
 #if defined(SDL_VIDEO_DRIVER_WAYLAND)[m
[36m@@ -279,8 +281,9 @@[m [mstruct SDL_SysWMinfo[m
         } vivante;[m
 #endif[m
 [m
[31m-        /* Can't have an empty union */[m
[31m-        int dummy;[m
[32m+[m[32m        /* Make sure this union is always 64 bytes (8 64-bit pointers). */[m
[32m+[m[32m        /* Be careful not to overflow this if you add a new target! */[m
[32m+[m[32m        Uint8 dummy[64];[m
     } info;[m
 };[m
 [m
[36m@@ -316,6 +319,6 @@[m [mextern DECLSPEC SDL_bool SDLCALL SDL_GetWindowWMInfo(SDL_Window * window,[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_syswm_h */[m
[32m+[m[32m#endif /* SDL_syswm_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test.h b/Just a Thought/Libraries/include/SDL_test.h[m
[1mindex 217847b..f55afcb 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_test.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -27,21 +27,22 @@[m
  *  This code is a part of the SDL2_test library, not the main SDL library.[m
  */[m
 [m
[31m-#ifndef _SDL_test_h[m
[31m-#define _SDL_test_h[m
[32m+[m[32m#ifndef SDL_test_h_[m
[32m+[m[32m#define SDL_test_h_[m
 [m
 #include "SDL.h"[m
[32m+[m[32m#include "SDL_test_assert.h"[m
 #include "SDL_test_common.h"[m
[32m+[m[32m#include "SDL_test_compare.h"[m
[32m+[m[32m#include "SDL_test_crc32.h"[m
 #include "SDL_test_font.h"[m
[31m-#include "SDL_test_random.h"[m
 #include "SDL_test_fuzzer.h"[m
[31m-#include "SDL_test_crc32.h"[m
[31m-#include "SDL_test_md5.h"[m
[31m-#include "SDL_test_log.h"[m
[31m-#include "SDL_test_assert.h"[m
 #include "SDL_test_harness.h"[m
 #include "SDL_test_images.h"[m
[31m-#include "SDL_test_compare.h"[m
[32m+[m[32m#include "SDL_test_log.h"[m
[32m+[m[32m#include "SDL_test_md5.h"[m
[32m+[m[32m#include "SDL_test_memory.h"[m
[32m+[m[32m#include "SDL_test_random.h"[m
 [m
 #include "begin_code.h"[m
 /* Set up for C function definitions, even when using C++ */[m
[36m@@ -63,6 +64,6 @@[m [mextern "C" {[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_h */[m
[32m+[m[32m#endif /* SDL_test_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test_assert.h b/Just a Thought/Libraries/include/SDL_test_assert.h[m
[1mindex 29277e1..11d8363 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_test_assert.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test_assert.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -33,8 +33,8 @@[m
  *[m
  */[m
 [m
[31m-#ifndef _SDL_test_assert_h[m
[31m-#define _SDL_test_assert_h[m
[32m+[m[32m#ifndef SDL_test_assert_h_[m
[32m+[m[32m#define SDL_test_assert_h_[m
 [m
 #include "begin_code.h"[m
 /* Set up for C function definitions, even when using C++ */[m
[36m@@ -80,12 +80,12 @@[m [mvoid SDLTest_AssertPass(SDL_PRINTF_FORMAT_STRING const char *assertDescription,[m
 /**[m
  * \brief Resets the assert summary counters to zero.[m
  */[m
[31m-void SDLTest_ResetAssertSummary();[m
[32m+[m[32mvoid SDLTest_ResetAssertSummary(void);[m
 [m
 /**[m
  * \brief Logs summary of all assertions (total, pass, fail) since last reset as INFO or ERROR.[m
  */[m
[31m-void SDLTest_LogAssertSummary();[m
[32m+[m[32mvoid SDLTest_LogAssertSummary(void);[m
 [m
 [m
 /**[m
[36m@@ -93,13 +93,13 @@[m [mvoid SDLTest_LogAssertSummary();[m
  *[m
  * \returns TEST_RESULT_PASSED, TEST_RESULT_FAILED, or TEST_RESULT_NO_ASSERT[m
  */[m
[31m-int SDLTest_AssertSummaryToTestResult();[m
[32m+[m[32mint SDLTest_AssertSummaryToTestResult(void);[m
 [m
 #ifdef __cplusplus[m
 }[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_assert_h */[m
[32m+[m[32m#endif /* SDL_test_assert_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test_common.h b/Just a Thought/Libraries/include/SDL_test_common.h[m
[1mindex 0ebf31c..24eeb32 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_test_common.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test_common.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -29,8 +29,8 @@[m
 [m
 /* Ported from original test\common.h file. */[m
 [m
[31m-#ifndef _SDL_test_common_h[m
[31m-#define _SDL_test_common_h[m
[32m+[m[32m#ifndef SDL_test_common_h_[m
[32m+[m[32m#define SDL_test_common_h_[m
 [m
 #include "SDL.h"[m
 [m
[36m@@ -183,6 +183,6 @@[m [mvoid SDLTest_CommonQuit(SDLTest_CommonState * state);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_common_h */[m
[32m+[m[32m#endif /* SDL_test_common_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test_compare.h b/Just a Thought/Libraries/include/SDL_test_compare.h[m
[1mindex 772cf9f..9f4c458 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_test_compare.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test_compare.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -33,8 +33,8 @@[m
 [m
 */[m
 [m
[31m-#ifndef _SDL_test_compare_h[m
[31m-#define _SDL_test_compare_h[m
[32m+[m[32m#ifndef SDL_test_compare_h_[m
[32m+[m[32m#define SDL_test_compare_h_[m
 [m
 #include "SDL.h"[m
 [m
[36m@@ -64,6 +64,6 @@[m [mint SDLTest_CompareSurfaces(SDL_Surface *surface, SDL_Surface *referenceSurface,[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_compare_h */[m
[32m+[m[32m#endif /* SDL_test_compare_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test_crc32.h b/Just a Thought/Libraries/include/SDL_test_crc32.h[m
[1mindex 572a3d9..add480c 100644[m
[1m--- a/Just a Thought/Lwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test_assert.h.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test_font.h.
The file will have its original line endings in your working directory.
ibraries/include/SDL_test_crc32.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test_crc32.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -33,8 +33,8 @@[m
 [m
 */[m
 [m
[31m-#ifndef _SDL_test_crc32_h[m
[31m-#define _SDL_test_crc32_h[m
[32m+[m[32m#ifndef SDL_test_crc32_h_[m
[32m+[m[32m#define SDL_test_crc32_h_[m
 [m
 #include "begin_code.h"[m
 /* Set up for C function definitions, even when using C++ */[m
[36m@@ -93,7 +93,7 @@[m [mextern "C" {[m
  * \returns 0 for OK, -1 on error[m
  *[m
  */[m
[31m-int SDLTest_crc32Calc(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUint32 *crc32);[m
[32m+[m[32mint SDLTest_Crc32Calc(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUint32 *crc32);[m
 [m
 /* Same routine broken down into three steps */[m
 int SDLTest_Crc32CalcStart(SDLTest_Crc32Context * crcContext, CrcUint32 *crc32);[m
[36m@@ -119,6 +119,6 @@[m [mint SDLTest_Crc32Done(SDLTest_Crc32Context * crcContext);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_crc32_h */[m
[32m+[m[32m#endif /* SDL_test_crc32_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test_font.h b/Just a Thought/Libraries/include/SDL_test_font.h[m
[1mindex 3378ea8..58c9f9d 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_test_font.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test_font.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -27,8 +27,8 @@[m
  *  This code is a part of the SDL2_test library, not the main SDL library.[m
  */[m
 [m
[31m-#ifndef _SDL_test_font_h[m
[31m-#define _SDL_test_font_h[m
[32m+[m[32m#ifndef SDL_test_font_h_[m
[32m+[m[32m#define SDL_test_font_h_[m
 [m
 #include "begin_code.h"[m
 /* Set up for C function definitions, even when using C++ */[m
[36m@@ -50,7 +50,7 @@[m [mextern "C" {[m
  *[m
  *  \returns Returns 0 on success, -1 on failure.[m
  */[m
[31m-int SDLTest_DrawCharacter( SDL_Renderer *renderer, int x, int y, char c );[m
[32m+[m[32mint SDLTest_DrawCharacter(SDL_Renderer *renderer, int x, int y, char c);[m
 [m
 /**[m
  *  \brief Draw a string in the currently set font.[m
[36m@@ -62,15 +62,20 @@[m [mint SDLTest_DrawCharacter( SDL_Renderer *renderer, int x, int y, char c );[m
  *[m
  *  \returns Returns 0 on success, -1 on failure.[m
  */[m
[31m-int SDLTest_DrawString( SDL_Renderer * renderer, int x, int y, const char *s );[m
[32m+[m[32mint SDLTest_DrawString(SDL_Renderer *renderer, int x, int y, const char *s);[m
 [m
 [m
[32m+[m[32m/**[m
[32m+[m[32m *  \brief Cleanup textures used by font drawing functions.[m
[32m+[m[32m */[m
[32m+[m[32mvoid SDLTest_CleanupTextDrawing(void);[m
[32m+[m
 /* Ends C function definitions when using C++ */[m
 #ifdef __cplusplus[m
 }[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_font_h */[m
[32m+[m[32m#endif /* SDL_test_font_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test_fuzzer.h b/Just a Thought/Libraries/include/SDL_test_fuzzer.h[m
[1mindex 9603652..6cf0574 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_test_fuzzer.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test_fuzzer.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test_fuzzer.h.
The file will have its original line endings in your working directory.
<slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -33,8 +33,8 @@[m
 [m
 */[m
 [m
[31m-#ifndef _SDL_test_fuzzer_h[m
[31m-#define _SDL_test_fuzzer_h[m
[32m+[m[32m#ifndef SDL_test_fuzzer_h_[m
[32m+[m[32m#define SDL_test_fuzzer_h_[m
 [m
 #include "begin_code.h"[m
 /* Set up for C function definitions, even when using C++ */[m
[36m@@ -68,14 +68,14 @@[m [mvoid SDLTest_FuzzerInit(Uint64 execKey);[m
  *[m
  * \returns Generated integer[m
  */[m
[31m-Uint8 SDLTest_RandomUint8();[m
[32m+[m[32mUint8 SDLTest_RandomUint8(void);[m
 [m
 /**[m
  * Returns a random Sint8[m
  *[m
  * \returns Generated signed integer[m
  */[m
[31m-Sint8 SDLTest_RandomSint8();[m
[32m+[m[32mSint8 SDLTest_RandomSint8(void);[m
 [m
 [m
 /**[m
[36m@@ -83,14 +83,14 @@[m [mSint8 SDLTest_RandomSint8();[m
  *[m
  * \returns Generated integer[m
  */[m
[31m-Uint16 SDLTest_RandomUint16();[m
[32m+[m[32mUint16 SDLTest_RandomUint16(void);[m
 [m
 /**[m
  * Returns a random Sint16[m
  *[m
  * \returns Generated signed integer[m
  */[m
[31m-Sint16 SDLTest_RandomSint16();[m
[32m+[m[32mSint16 SDLTest_RandomSint16(void);[m
 [m
 [m
 /**[m
[36m@@ -98,7 +98,7 @@[m [mSint16 SDLTest_RandomSint16();[m
  *[m
  * \returns Generated integer[m
  */[m
[31m-Sint32 SDLTest_RandomSint32();[m
[32m+[m[32mSint32 SDLTest_RandomSint32(void);[m
 [m
 [m
 /**[m
[36m@@ -106,14 +106,14 @@[m [mSint32 SDLTest_RandomSint32();[m
  *[m
  * \returns Generated integer[m
  */[m
[31m-Uint32 SDLTest_RandomUint32();[m
[32m+[m[32mUint32 SDLTest_RandomUint32(void);[m
 [m
 /**[m
  * Returns random Uint64.[m
  *[m
  * \returns Generated integer[m
  */[m
[31m-Uint64 SDLTest_RandomUint64();[m
[32m+[m[32mUint64 SDLTest_RandomUint64(void);[m
 [m
 [m
 /**[m
[36m@@ -121,29 +121,29 @@[m [mUint64 SDLTest_RandomUint64();[m
  *[m
  * \returns Generated signed integer[m
  */[m
[31m-Sint64 SDLTest_RandomSint64();[m
[32m+[m[32mSint64 SDLTest_RandomSint64(void);[m
 [m
 /**[m
  * \returns random float in range [0.0 - 1.0[[m
  */[m
[31m-float SDLTest_RandomUnitFloat();[m
[32m+[m[32mfloat SDLTest_RandomUnitFloat(void);[m
 [m
 /**[m
  * \returns random double in range [0.0 - 1.0[[m
  */[m
[31m-double SDLTest_RandomUnitDouble();[m
[32m+[m[32mdouble SDLTest_RandomUnitDouble(void);[m
 [m
 /**[m
  * \returns random float.[m
  *[m
  */[m
[31m-float SDLTest_RandomFloat();[m
[32m+[m[32mfloat SDLTest_RandomFloat(void);[m
 [m
 /**[m
  * \returns random double.[m
  *[m
  */[m
[31m-double SDLTest_RandomDouble();[m
[32m+[m[32mdouble SDLTest_RandomDouble(void);[m
 [m
 /**[m
  * Returns a random boundary value for Uint8 within the given boundaries.[m
[36m@@ -338,7 +338,7 @@[m [mSint32 SDLTest_RandomIntegerInRange(Sint32 min, Sint32 max);[m
  *[m
  * \returns Newly allocated random string; or NULL if length was invalid or string could not be allocated.[m
  */[m
[31m-char * SDLTest_RandomAsciiString();[m
[32m+[m[32mchar * SDLTest_RandomAsciiString(void);[m
 [m
 [m
 /**[m
[36m@@ -371,7 +371,7 @@[m [mchar * SDLTest_RandomAsciiStringOfSize(int size);[m
 /**[m
  * Returns the invocation count for the fuzzer since last ...FuzzerInit.[m
  */[m
[31m-int SDLTest_GetFuzzerInvocationCount();[m
[32m+[m[32mint SDLTest_GetFuzzerInvocationCount(void);[m
 [m
 /* Ends C function definitions when using C++ */[m
 #ifdef __cplusplus[m
[36m@@ -379,6 +379,6 @@[m [mint SDLTest_GetFuzzerInvocationCount();[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_fuzzer_h */[m
[32m+[m[32m#endif /* SDL_test_fuzzer_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test_harness.h b/Just a Thought/Libraries/include/SDL_test_harness.h[m
[1mindex 74c0950..68c4bcb 100644[m
[1m--- a/Jwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test_harness.h.
The file will have its original line endings in your working directory.
ust a Thought/Libraries/include/SDL_test_harness.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test_harness.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -33,8 +33,8 @@[m
   Based on original GSOC code by Markus Kauppila <markus.kauppila@gmail.com>[m
 */[m
 [m
[31m-#ifndef _SDL_test_harness_h[m
[31m-#define _SDL_test_harness_h[m
[32m+[m[32m#ifndef SDL_test_h_arness_h[m
[32m+[m[32m#define SDL_test_h_arness_h[m
 [m
 #include "begin_code.h"[m
 /* Set up for C function definitions, even when using C++ */[m
[36m@@ -99,6 +99,17 @@[m [mtypedef struct SDLTest_TestSuiteReference {[m
 [m
 [m
 /**[m
[32m+[m[32m * \brief Generates a random run seed string for the harness. The generated seed will contain alphanumeric characters (0-9A-Z).[m
[32m+[m[32m *[m
[32m+[m[32m * Note: The returned string needs to be deallocated by the caller.[m
[32m+[m[32m *[m
[32m+[m[32m * \param length The length of the seed string to generate[m
[32m+[m[32m *[m
[32m+[m[32m * \returns The generated seed string[m
[32m+[m[32m */[m
[32m+[m[32mchar *SDLTest_GenerateRunSeed(const int length);[m
[32m+[m
[32m+[m[32m/**[m
  * \brief Execute a test suite using the given run seed and execution key.[m
  *[m
  * \param testSuites Suites containing the test case.[m
[36m@@ -118,6 +129,6 @@[m [mint SDLTest_RunSuites(SDLTest_TestSuiteReference *testSuites[], const char *user[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_harness_h */[m
[32m+[m[32m#endif /* SDL_test_h_arness_h */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test_images.h b/Just a Thought/Libraries/include/SDL_test_images.h[m
[1mindex 8c64b4f..683d2f8 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_test_images.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test_images.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -33,8 +33,8 @@[m
 [m
 */[m
 [m
[31m-#ifndef _SDL_test_images_h[m
[31m-#define _SDL_test_images_h[m
[32m+[m[32m#ifndef SDL_test_images_h_[m
[32m+[m[32m#define SDL_test_images_h_[m
 [m
 #include "SDL.h"[m
 [m
[36m@@ -55,17 +55,17 @@[m [mtypedef struct SDLTest_SurfaceImage_s {[m
 } SDLTest_SurfaceImage_t;[m
 [m
 /* Test images */[m
[31m-SDL_Surface *SDLTest_ImageBlit();[m
[31m-SDL_Surface *SDLTest_ImageBlitColor();[m
[31m-SDL_Surface *SDLTest_ImageBlitAlpha();[m
[31m-SDL_Surface *SDLTest_ImageBlitBlendAdd();[m
[31m-SDL_Surface *SDLTest_ImageBlitBlend();[m
[31m-SDL_Surface *SDLTest_ImageBlitBlendMod();[m
[31m-SDL_Surface *SDLTest_ImageBlitBlendNone();[m
[31m-SDL_Surface *SDLTest_ImageBlitBlendAll();[m
[31m-SDL_Surface *SDLTest_ImageFace();[m
[31m-SDL_Surface *SDLTest_ImagePrimitives();[m
[31m-SDL_Surface *SDLTest_ImagePrimitivesBlend();[m
[32m+[m[32mSDL_Surface *SDLTest_ImageBlit(void);[m
[32m+[m[32mSDL_Surface *SDLTest_ImageBlitColor(void);[m
[32m+[m[32mSDL_Surface *SDLTest_ImageBlitAlpha(void);[m
[32m+[m[32mSDL_Surface *SDLTest_ImageBlitBlendAdd(void);[m
[32m+[m[32mSDL_Surface *SDLTest_ImageBlitBlend(void);[m
[32m+[m[32mSDL_Surface *SDLTest_ImageBlitBlendMod(void);[m
[32m+[m[32mSDL_Surface *SDLTest_ImageBlitBlendNone(void);[m
[32m+[m[32mSDL_Surface *SDLTest_ImageBlitBlendAll(void);[m
[32m+[m[32mSDL_Surface *SDLTest_ImageFace(void);[m
[32m+[m[32mSDL_Surface *SDLTest_ImagePrimitives(void);[mwarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_test_images.h.
The file will have its original line endings in your working directory.

[32m+[m[32mSDL_Surface *SDLTest_ImagePrimitivesBlend(void);[m
 [m
 /* Ends C function definitions when using C++ */[m
 #ifdef __cplusplus[m
[36m@@ -73,6 +73,6 @@[m [mSDL_Surface *SDLTest_ImagePrimitivesBlend();[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_images_h */[m
[32m+[m[32m#endif /* SDL_test_images_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test_log.h b/Just a Thought/Libraries/include/SDL_test_log.h[m
[1mindex 73a5c01..9f993fb 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_test_log.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test_log.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -33,8 +33,8 @@[m
  *[m
  */[m
 [m
[31m-#ifndef _SDL_test_log_h[m
[31m-#define _SDL_test_log_h[m
[32m+[m[32m#ifndef SDL_test_log_h_[m
[32m+[m[32m#define SDL_test_log_h_[m
 [m
 #include "begin_code.h"[m
 /* Set up for C function definitions, even when using C++ */[m
[36m@@ -62,6 +62,6 @@[m [mvoid SDLTest_LogError(SDL_PRINTF_FORMAT_STRING const char *fmt, ...) SDL_PRINTF_[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_log_h */[m
[32m+[m[32m#endif /* SDL_test_log_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test_md5.h b/Just a Thought/Libraries/include/SDL_test_md5.h[m
[1mindex f2d9a7d..67ca7d1 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_test_md5.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test_md5.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -53,8 +53,8 @@[m
  ***********************************************************************[m
 */[m
 [m
[31m-#ifndef _SDL_test_md5_h[m
[31m-#define _SDL_test_md5_h[m
[32m+[m[32m#ifndef SDL_test_md5_h_[m
[32m+[m[32m#define SDL_test_md5_h_[m
 [m
 #include "begin_code.h"[m
 /* Set up for C function definitions, even when using C++ */[m
[36m@@ -124,6 +124,6 @@[m [mextern "C" {[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_md5_h */[m
[32m+[m[32m#endif /* SDL_test_md5_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_test_random.h b/Just a Thought/Libraries/include/SDL_test_random.h[m
[1mindex 91c3652..2b01922 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_test_random.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_test_random.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -37,8 +37,8 @@[m
 [m
 */[m
 [m
[31m-#ifndef _SDL_test_random_h[m
[31m-#define _SDL_test_random_h[m
[32m+[m[32m#ifndef SDL_test_random_h_[m
[32m+[m[32m#define SDL_test_random_h_[m
 [m
 #include "begin_code.h"[m
 /* Set up for C function definitions, even when using C++ */[m
[36m@@ -110,6 +110,6 @@[m [mextern "C" {[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_test_random_h */[m
[32m+[m[32m#endif /* SDL_test_random_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_thread.h b/Just a Thought/Libraries/include/SDL_thread.h[m
[1mindex 377e6c7..d0f6575 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_thread.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_thread.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -19,8 +19,8 @@[m
   3. This notice may not be removed or altered from any source distribution.[m
 */[m
 [m
[31m-#ifndef _SDL_thread_h[m
[31m-#define _SDL_thread_h[m
[32m+[m[32m#ifndef SDL_thread_h_[m
[32m+[m[32m#define SDL_thread_h_[m
 [m
 /**[m
  *  \file SDL_thread.h[m
[36m@@ -74,15 +74,15 @@[m [mtypedef int (SDLCALL * SDL_ThreadFunction) (void *data);[m
  *[m
  *  We compile SDL into a DLL. This means, that it's the DLL which[m
  *  creates a new thread for the calling process with the SDL_CreateThread()[m
[31m- *  API. There is a problem with this, that only the RTL of the SDL.DLL will[m
[32m+[m[32m *  API. There is a problem with this, that only the RTL of the SDL2.DLL will[m
  *  be initialized for those threads, and not the RTL of the calling[m
  *  application![m
  *[m
  *  To solve this, we make a little hack here.[m
  *[m
  *  We'll always use the caller's _beginthread() and _endthread() APIs to[m
[31m- *  start a new thread. This way, if it's the SDL.DLL which uses this API,[m
[31m- *  then the RTL of SDL.DLL will be used to create the new thread, and if it's[m
[32m+[m[32m *  start a new thread. This way, if it's the SDL2.DLL which uses this API,[m
[32m+[m[32m *  then the RTL of SDL2.DLL will be used to create the new thread, and if it's[m
  *  the application, then the RTL of the application will be used.[m
  *[m
  *  So, in short:[m
[36m@@ -90,14 +90,11 @@[m [mtypedef int (SDLCALL * SDL_ThreadFunction) (void *data);[m
  *  library![m
  */[m
 #define SDL_PASSED_BEGINTHREAD_ENDTHREAD[m
[31m-#include <process.h>            /* This has _beginthread() and _endthread() defined! */[m
[31m-[m
[31m-typedef uintptr_t(__cdecl * pfnSDL_CurrentBeginThread) (void *, unsigned,[m
[31m-                                                        unsigned (__stdcall *[m
[31m-                                                                  func) (void[m
[31m-                                                                         *),[m
[31m-                                                        void *arg, unsigned,[m
[31m-                                                        unsigned *threadID);[m
[32m+[m[32m#include <process.h> /* _beginthreadex() and _endthreadex() */[m
[32m+[m
[32m+[m[32mtypedef uintptr_t(__cdecl * pfnSDL_CurrentBeginThread)[m
[32m+[m[32m                   (void *, unsigned, unsigned (__stdcall *func)(void *),[m
[32m+[m[32m                    void * /*arg*/, unsigned, unsigned * /* threadID */);[m
 typedef void (__cdecl * pfnSDL_CurrentEndThread) (unsigned code);[m
 [m
 /**[m
[36m@@ -118,6 +115,30 @@[m [mSDL_CreateThread(SDL_ThreadFunction fn, const char *name, void *data,[m
 #define SDL_CreateThread(fn, name, data) SDL_CreateThread(fn, name, data, (pfnSDL_CurrentBeginThread)_beginthreadex, (pfnSDL_CurrentEndThread)_endthreadex)[m
 #endif[m
 [m
[32m+[m[32m#elif defined(__OS2__)[m
[32m+[m[32m/*[m
[32m+[m[32m * just like the windows case above:  We compile SDL2[m
[32m+[m[32m * into a dll with Watcom's runtime statically linked.[m
[32m+[m[32m */[m
[32m+[m[32m#define SDL_PASSED_BEGINTHREAD_ENDTHREAD[m
[32m+[m[32m#ifndef __EMX__[m
[32m+[m[32m#include <process.h>[m
[32m+[m[32m#else[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m[32m#endif[m
[32m+[m[32mtypedef int (*pfnSDL_CurrentBeginThread)(void (*func)(void *), void *, unsigned, void * /*arg*/);[m
[32m+[m[32mtypedef void (*pfnSDL_CurrentEndThread)(void);[m
[32m+[m[32mextern DECLSPEC SDL_Thread *SDLCALL[m
[32m+[m[32mSDL_CreateThread(SDL_ThreadFunction fn, const char *name, void *data,[m
[32m+[m[32m                 pfnSDL_CurrentBeginThread pfnBeginThread,[m
[32m+[m[32m                 pfnSDL_CurrentEndThread pfnEndThread);[m
[32m+[m[32m#if defined(SDL_CreateThread) && SDL_DYNAMIC_API[m
[32m+[m[32m#undef SDL_CreateThread[m
[32m+[m[32m#define SDL_CreateThread(fn, name, data) SDL_CreateThread_REAL(fn, name, data, (pfnSDL_CurrentBeginThread)_beginthread, (pfnSDL_CurrentEndThread)_endthread)[m
[32m+[m[32m#else[m
[32m+[m[32m#define SDL_CreateThread(fn, name, data) SDL_CreateThread(fn, name, data, (pfnSDL_CurrentBeginThread)_beginthread, (pfnSDL_CurrentEndThread)_endthread)[m
[32m+[m[32m#endif[m
[32m+[m
 #else[m
 [m
 /**[m
[36m@@ -273,7 +294,7 @@[m [mextern DECLSPEC void * SDLCALL SDL_TLSGet(SDL_TLSID id);[m
  *  \sa SDL_TLSCreate()[m
  *  \sa SDL_TLSGet()[m
  */[m
[31m-extern DECLSPEC int SDLCALL SDL_TLSSet(SDL_TLSID id, const void *value, void (*destructor)(void*));[m
[32m+[m[32mextern DECLSPEC int SDLCALL SDL_TLSSet(SDL_TLSID id, const void *value, void (SDLCALL *destructor)(void*));[m
 [m
 [m
 /* Ends C function definitions when using C++ */[m
[36m@@ -282,6 +303,6 @@[m [mextern DECLSPEC int SDLCALL SDL_TLSSet(SDL_TLSID id, const void *value, void (*d[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_thread_h */[m
[32m+[m[32m#endif /* SDL_thread_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_timer.h b/Just a Thought/Libraries/include/SDL_timer.h[m
[1mindex e0d3785..282625d 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_timer.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_timer.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -19,8 +19,8 @@[m
   3. This notice may not be removed or altered from any source distribution.[m
 */[m
 [m
[31m-#ifndef _SDL_timer_h[m
[31m-#define _SDL_timer_h[m
[32m+[m[32m#ifndef SDL_timer_h_[m
[32m+[m[32m#define SDL_timer_h_[m
 [m
 /**[m
  *  \file SDL_timer.h[m
[36m@@ -110,6 +110,6 @@[m [mextern DECLSPEC SDL_bool SDLCALL SDL_RemoveTimer(SDL_TimerID id);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_timer_h */[m
[32m+[m[32m#endif /* SDL_timer_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_touch.h b/Just a Thought/Libraries/include/SDL_touch.h[m
[1mindex 2643e36..db9e25e 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_touch.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_touch.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Include file for SDL touch event handling.[m
  */[m
 [m
[31m-#ifndef _SDL_touch_h[m
[31m-#define _SDL_touch_h[m
[32m+[m[32m#ifndef SDL_touch_h_[m
[32m+[m[32m#define SDL_touch_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_error.h"[m
[36m@@ -81,6 +81,6 @@[m [mextern DECLSPEC SDL_Finger * SDLCALL SDL_GetTouchFinger(SDL_TouchID touchID, int[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_touch_h */[m
[32m+[m[32m#endif /* SDL_touch_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_types.h b/Just a Thought/Libraries/include/SDL_types.h[m
[1mindex 5118af2..06ee80c 100644[m
[1m--- a/Just warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_thread.h.
The file will have its original line endings in your working directory.
a Thought/Libraries/include/SDL_types.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_types.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_version.h b/Just a Thought/Libraries/include/SDL_version.h[m
[1mindex 1700efd..5b4c402 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_version.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_version.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  This header defines the current SDL version.[m
  */[m
 [m
[31m-#ifndef _SDL_version_h[m
[31m-#define _SDL_version_h[m
[32m+[m[32m#ifndef SDL_version_h_[m
[32m+[m[32m#define SDL_version_h_[m
 [m
 #include "SDL_stdinc.h"[m
 [m
[36m@@ -59,7 +59,7 @@[m [mtypedef struct SDL_version[m
 */[m
 #define SDL_MAJOR_VERSION   2[m
 #define SDL_MINOR_VERSION   0[m
[31m-#define SDL_PATCHLEVEL      5[m
[32m+[m[32m#define SDL_PATCHLEVEL      7[m
 [m
 /**[m
  *  \brief Macro to determine SDL version program was compiled against.[m
[36m@@ -157,6 +157,6 @@[m [mextern DECLSPEC int SDLCALL SDL_GetRevisionNumber(void);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_version_h */[m
[32m+[m[32m#endif /* SDL_version_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/SDL_video.h b/Just a Thought/Libraries/include/SDL_video.h[m
[1mindex 73c33eb..6f6cda8 100644[m
[1m--- a/Just a Thought/Libraries/include/SDL_video.h[m	
[1m+++ b/Just a Thought/Libraries/include/SDL_video.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -25,8 +25,8 @@[m
  *  Header file for SDL video functions.[m
  */[m
 [m
[31m-#ifndef _SDL_video_h[m
[31m-#define _SDL_video_h[m
[32m+[m[32m#ifndef SDL_video_h_[m
[32m+[m[32m#define SDL_video_h_[m
 [m
 #include "SDL_stdinc.h"[m
 #include "SDL_pixels.h"[m
[36m@@ -116,7 +116,8 @@[m [mtypedef enum[m
     SDL_WINDOW_SKIP_TASKBAR  = 0x00010000,      /**< window should not be added to the taskbar */[m
     SDL_WINDOW_UTILITY       = 0x00020000,      /**< window should be treated as a utility window */[m
     SDL_WINDOW_TOOLTIP       = 0x00040000,      /**< window should be treated as a tooltip */[m
[31m-    SDL_WINDOW_POPUP_MENU    = 0x00080000       /**< window should be treated as a popup menu */[m
[32m+[m[32m    SDL_WINDOW_POPUP_MENU    = 0x00080000,      /**< window should be treated as a popup menu */[m
[32m+[m[32m    SDL_WINDOW_VULKAN        = 0x10000000       /**< window usable for Vulkan surface */[m
 } SDL_WindowFlags;[m
 [m
 /**[m
[36m@@ -200,14 +201,16 @@[m [mtypedef enum[m
     SDL_GL_CONTEXT_PROFILE_MASK,[m
     SDL_GL_SHARE_WITH_CURRENT_CONTEXT,[m
     SDL_GL_FRAMEBUFFER_SRGB_CAPABLE,[m
[31m-    SDL_GL_CONTEXT_RELEASE_BEHAVIOR[m
[32m+[m[32m    SDL_GL_CONTEXT_RELEASE_BEHAVIOR,[m
[32m+[m[32m    SDL_GL_CONTEXT_RESET_NOTIFICATION,[m
[32m+[m[32m    SDL_GL_CONTEXT_NO_ERROR[m
 } SDL_GLattr;[m
 [m
 typedef enum[m
 {[m
     SDL_GL_CONTEXT_PROFILE_CORE           = 0x0001,[m
     SDL_GL_CONTEXT_PROFILE_COMPATIBILITY  = 0x0002,[m
[31m-    SDL_GL_CONTEXT_PROFILE_ES             = 0x0004 /* GLX_CONTEXT_ES2_PROFILE_BIT_EXT */[m
[32m+[m[32m    SDL_GL_CONTEXT_PROFILE_ES             = 0x0004 /**< GLX_CONTEXT_ES2_PROFILE_BIT_EXT */[m
 } SDL_GLprofile;[m
 [m
 typedef enum[m
[36m@@ -224,6 +227,11 @@[m [mtypedef enum[m
     SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH  = 0x0001[m
 } SDL_GLcontextReleaseFlag;[m
 [m
[32m+[m[32mtypedef enum[m
[32m+[m[32m{[m
[32m+[m[32m    SDL_GL_CONTEXT_RESET_NO_NOTIFICATION = 0x0000,[m
[32m+[m[32m    SDL_GL_CONTEXT_RESET_LOSE_CONTEXT    = 0x0001[m
[32m+[m[32m} SDL_GLContextResetNotification;[m
 [m
 /* Function prototypes */[m
 [m
[36m@@ -448,17 +456,32 @@[m [mextern DECLSPEC Uint32 SDLCALL SDL_GetWindowPixelFormat(SDL_Window * window);[m
  *               ::SDL_WINDOW_HIDDEN,        ::SDL_WINDOW_BORDERLESS,[m
  *               ::SDL_WINDOW_RESIZABLE,     ::SDL_WINDOW_MAXIMIZED,[m
  *               ::SDL_WINDOW_MINIMIZED,     ::SDL_WINDOW_INPUT_GRABBED,[m
[31m- *               ::SDL_WINDOW_ALLOW_HIGHDPI.[m
[32m+[m[32m *               ::SDL_WINDOW_ALLOW_HIGHDPI, ::SDL_WINDOW_VULKAN.[m
  *[m
  *  \return The created window, or NULL if window creation failed.[m
  *[m
  *  If the window is created with the SDL_WINDOW_ALLOW_HIGHDPI flag, its size[m
  *  in pixels may differ from its size in screen coordinates on platforms with[m
  *  high-DPI support (e.g. iOS and Mac OS X). Use SDL_GetWindowSize() to query[m
[31m- *  the client area's size in screen coordinates, and SDL_GL_GetDrawableSize()[m
[31m- *  or SDL_GetRendererOutputSize() to query the drawable size in pixels.[m
[32m+[m[32m *  the client area's size in screen coordinates, and SDL_GL_GetDrawableSize(),[m
[32m+[m[32m *  SDL_Vulkan_GetDrawableSize(), or SDL_GetRendererOutputSize() to query the[m
[32m+[m[32m *  drawable size in pixels.[m
[32m+[m[32m *[m
[32m+[m[32m *  If the window is created with any of the SDL_WINDOW_OPENGL or[m
[32m+[m[32m *  SDL_WINDOW_VULKAN flags, then the corresponding LoadLibrary function[m
[32m+[m[32m *  (SDL_GL_LoadLibrary or SDL_Vulkan_LoadLibrary) is called and the[m
[32m+[m[32m *  corrensponding UnloadLibrary function is called by SDL_DestroyWindow().[m
[32m+[m[32m *[m
[32m+[m[32m *  If SDL_WINDOW_VULKAN is specified and there isn't a working Vulkan driver,[m
[32m+[m[32m *  SDL_CreateWindow() will fail because SDL_Vulkan_LoadLibrary() will fail.[m
[32m+[m[32m *[m
[32m+[m[32m *  \note On non-Apple devices, SDL requires you to either not link to the[m
[32m+[m[32m *        Vulkan loader or link to a dynamic library version. This limitation[m
[32m+[m[32m *        may be removed in a future version of SDL.[m
  *[m
  *  \sa SDL_DestroyWindow()[m
[32m+[m[32m *  \sa SDL_GL_LoadLibrary()[m
[32m+[m[32m *  \sa SDL_Vulkan_LoadLibrary()[m
  */[m
 extern DECLSPEC SDL_Window * SDLCALL SDL_CreateWindow(const char *title,[m
                                                       int x, int y, int w,[m
[36m@@ -581,8 +604,8 @@[m [mextern DECLSPEC void SDLCALL SDL_GetWindowPosition(SDL_Window * window,[m
  *  \param w        The width of the window, in screen coordinates. Must be >0.[m
  *  \param h        The height of the window, in screen coordinates. Must be >0.[m
  *[m
[31m- *  \note You can't change the size of a fullscreen window, it automatically[m
[31m- *        matches the size of the display mode.[m
[32m+[m[32m *  \note Fullscreen windows automatically match the size of the display mode,[m
[32m+[m[32m *        and you should use SDL_SetWindowDisplayMode() to change their size.[m
  *[m
  *  The window size in screen coordinates may differ from the size in pixels, if[m
  *  the window was created with SDL_WINDOW_ALLOW_HIGHDPI on a platform with[m
[36m@@ -590,6 +613,7 @@[m [mextern DECLSPEC void SDLCALL SDL_GetWindowPosition(SDL_Window * window,[m
  *  SDL_GetRendererOutputSize() to get the real client area size in pixels.[m
  *[m
  *  \sa SDL_GetWindowSize()[m
[32m+[m[32m *  \sa SDL_SetWindowDisplaywarning: LF will be replaced by CRLF in Just a Thought/Libraries/include/SDL_video.h.
The file will have its original line endings in your working directory.
Mode()[m
  */[m
 extern DECLSPEC void SDLCALL SDL_SetWindowSize(SDL_Window * window, int w,[m
                                                int h);[m
[36m@@ -870,7 +894,7 @@[m [mextern DECLSPEC float SDLCALL SDL_GetWindowBrightness(SDL_Window * window);[m
  *  \param window The window which will be made transparent or opaque[m
  *  \param opacity Opacity (0.0f - transparent, 1.0f - opaque) This will be[m
  *                 clamped internally between 0.0f and 1.0f.[m
[31m- * [m
[32m+[m[32m *[m
  *  \return 0 on success, or -1 if setting the opacity isn't supported.[m
  *[m
  *  \sa SDL_GetWindowOpacity()[m
[36m@@ -897,7 +921,7 @@[m [mextern DECLSPEC int SDLCALL SDL_GetWindowOpacity(SDL_Window * window, float * ou[m
  *[m
  *  \param modal_window The window that should be modal[m
  *  \param parent_window The parent window[m
[31m- * [m
[32m+[m[32m *[m
  *  \return 0 on success, or -1 otherwise.[m
  */[m
 extern DECLSPEC int SDLCALL SDL_SetWindowModalFor(SDL_Window * modal_window, SDL_Window * parent_window);[m
[36m@@ -910,7 +934,7 @@[m [mextern DECLSPEC int SDLCALL SDL_SetWindowModalFor(SDL_Window * modal_window, SDL[m
  *  obscured by other windows.[m
  *[m
  *  \param window The window that should get the input focus[m
[31m- * [m
[32m+[m[32m *[m
  *  \return 0 on success, or -1 otherwise.[m
  *  \sa SDL_RaiseWindow()[m
  */[m
[36m@@ -1110,11 +1134,16 @@[m [mextern DECLSPEC void SDLCALL SDL_GL_ResetAttributes(void);[m
 [m
 /**[m
  *  \brief Set an OpenGL window attribute before window creation.[m
[32m+[m[32m *[m
[32m+[m[32m *  \return 0 on success, or -1 if the attribute could not be set.[m
  */[m
 extern DECLSPEC int SDLCALL SDL_GL_SetAttribute(SDL_GLattr attr, int value);[m
 [m
 /**[m
  *  \brief Get the actual value for an attribute from the current context.[m
[32m+[m[32m *[m
[32m+[m[32m *  \return 0 on success, or -1 if the attribute could not be retrieved.[m
[32m+[m[32m *          The integer at \c value will be modified in either case.[m
  */[m
 extern DECLSPEC int SDLCALL SDL_GL_GetAttribute(SDL_GLattr attr, int *value);[m
 [m
[36m@@ -1213,6 +1242,6 @@[m [mextern DECLSPEC void SDLCALL SDL_GL_DeleteContext(SDL_GLContext context);[m
 #endif[m
 #include "close_code.h"[m
 [m
[31m-#endif /* _SDL_video_h */[m
[32m+[m[32m#endif /* SDL_video_h_ */[m
 [m
 /* vi: set ts=4 sw=4 expandtab: */[m
[1mdiff --git a/Just a Thought/Libraries/include/begin_code.h b/Just a Thought/Libraries/include/begin_code.h[m
[1mindex 04e78c6..5372d6f 100644[m
[1m--- a/Just a Thought/Libraries/include/begin_code.h[m	
[1m+++ b/Just a Thought/Libraries/include/begin_code.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -61,6 +61,12 @@[m
 #  else[m
 #   define DECLSPEC __declspec(dllexport)[m
 #  endif[m
[32m+[m[32m# elif defined(__OS2__)[m
[32m+[m[32m#   ifdef BUILD_SDL[m
[32m+[m[32m#    define DECLSPEC    __declspec(dllexport)[m
[32m+[m[32m#   else[m
[32m+[m[32m#    define DECLSPEC[m
[32m+[m[32m#   endif[m
 # else[m
 #  if defined(__GNUC__) && __GNUC__ >= 4[m
 #   define DECLSPEC __attribute__ ((visibility("default")))[m
[36m@@ -74,6 +80,11 @@[m
 #ifndef SDLCALL[m
 #if (defined(__WIN32__) || defined(__WINRT__)) && !defined(__GNUC__)[m
 #define SDLCALL __cdecl[m
[32m+[m[32m#elif defined(__OS2__) || defined(__EMX__)[m
[32m+[m[32m#define SDLCALL _System[m
[32m+[m[32m# if defined (__GNUC__) && !defined(_System)[m
[32m+[m[32m#  define _System /* for old EMX/GCC compat.  */[m
[32m+[m[32m# endif[m
 #else[m
 #define SDLCALL[m
 #endif[m
[36m@@ -111,7 +122,7 @@[m
 #elif defined(_MSC_VER) || defined(__BORLANDC__) || \[m
       defined(__DMC__) || defined(__SC__) || \[warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/begin_code.h.
The file will have its original line endings in your working directory.
m
       defined(__WATCOMC__) || defined(__LCC__) || \[m
[31m-      defined(__DECC)[m
[32m+[m[32m      defined(__DECC) || defined(__CC_ARM)[m
 #define SDL_INLINE __inline[m
 #ifndef __inline__[m
 #define __inline__ __inline[m
[36m@@ -134,6 +145,16 @@[m
 #endif[m
 #endif /* SDL_FORCE_INLINE not defined */[m
 [m
[32m+[m[32m#ifndef SDL_NORETURN[m
[32m+[m[32m#if defined(__GNUC__)[m
[32m+[m[32m#define SDL_NORETURN __attribute__((noreturn))[m
[32m+[m[32m#elif defined(_MSC_VER)[m
[32m+[m[32m#define SDL_NORETURN __declspec(noreturn)[m
[32m+[m[32m#else[m
[32m+[m[32m#define SDL_NORETURN[m
[32m+[m[32m#endif[m
[32m+[m[32m#endif /* SDL_NORETURN not defined */[m
[32m+[m
 /* Apparently this is needed by several Windows compilers */[m
 #if !defined(__MACH__)[m
 #ifndef NULL[m
[1mdiff --git a/Just a Thought/Libraries/include/close_code.h b/Just a Thought/Libraries/include/close_code.h[m
[1mindex d908b00..2a352db 100644[m
[1m--- a/Just a Thought/Libraries/include/close_code.h[m	
[1m+++ b/Just a Thought/Libraries/include/close_code.h[m	
[36m@@ -1,6 +1,6 @@[m
 /*[m
   Simple DirectMedia Layer[m
[31m-  Copyright (C) 1997-2016 Sam Lantinga <slouken@libsdl.org>[m
[32m+[m[32m  Copyright (C) 1997-2017 Sam Lantinga <slouken@libsdl.org>[m
 [m
   This software is provided 'as-is', without any express or implied[m
   warranty.  In no event will the authors be held liable for any damages[m
[36m@@ -29,7 +29,7 @@[m
 #undef _begin_code_h[m
 [m
 /* Reset structure packing at previous byte alignment */[m
[31m-#if defined(_MSC_VER) || defined(__MWERKS__) || defined(__WATCOMC__)  || defined(__BORLANDC__)[m
[32m+[m[32m#if defined(_MSC_VER) || defined(__MWERKS__) || defined(__BORLANDC__)[m
 #ifdef __BORLANDC__[m
 #pragma nopackwarning[m
 #endif[m
[1mdiff --git a/Just a Thought/Libraries/lib/SDL2.lib b/Just a Thought/Libraries/lib/SDL2.lib[m
[1mindex 0b0c31e..a36fab5 100644[m
Binary files a/Just a Thought/Libraries/lib/SDL2.lib and b/Just a Thought/Libraries/lib/SDL2.lib differ
[1mdiff --git a/Just a Thought/Libraries/lib/SDL2main.lib b/Just a Thought/Libraries/lib/SDL2main.lib[m
[1mindex 3404a6b..2080d5d 100644[m
Binary files a/Just a Thought/Libraries/lib/SDL2main.lib and b/Just a Thought/Libraries/lib/SDL2main.lib differ
[1mdiff --git a/Just a Thought/Libraries/lib/SDL2test.lib b/Just a Thought/Libraries/lib/SDL2test.lib[m
[1mindex ab97478..c26c50f 100644[m
Binary files a/Just a Thought/Libraries/lib/SDL2test.lib and b/Just a Thought/Libraries/lib/SDL2test.lib differ
[1mdiff --git a/Just a Thought/Player.cpp b/Just a Thought/Player.cpp[m
[1mindex 92e34c7..5a0c798 100644[m
[1m--- a/Just a Thought/Player.cpp[m	
[1m+++ b/Just a Thought/Player.cpp[m	
[36m@@ -7,20 +7,8 @@[m [mPlayer::Player(SDL_Renderer* renderer) : m_renderer(renderer)[m
 		m_sprite = new Sprite(m_renderer);[m
 		m_sprite->loadImg("Assets/Graphics/guy.png");[m
 		std::cout << "Player Created!" << std::endl;[m
[31m-		SDL_RWops* mapData = SDL_RWFromFile("Assets/Graphics/level1.jatmap", "r+b");[m
[31m-		std::cout << std::endl;[m
[31m-		if (mapData != NULL)[m
[31m-		{[m
[31m-			for (int j = 0;j < 768;j++)[m
[31m-			{[m
[31m-				for (int i = 0;i < 1024;i++)[m
[31m-				{[m
[31m-					SDL_RWread(mapData, &map[j][i], sizeof(Uint8), 1);[m
[31m-				}[m
[31m-			}[m
[31m-		}[m
 		x = 0;[m
[31m-		y = 0;[m
[32m+[m		[32my = 100;[m
 	}[m
 	else[m
 	{[m
[36m@@ -28,7 +16,6 @@[m [mPlayer::Player(SDL_Renderer* renderer) : m_renderer(renderer)[m
 	}[m
 }[m
 [m
[31m-[m
 Player::~Player()[m
 {[m
 	std::cout << "Bye bye" << std::endl;[m
[36m@@ -39,8 +26,7 @@[m [mPlayer::~Player()[m
 void Player::update()[m
 {[m
 	const Uint8* keys = SDL_GetKeyboardState(NULL);[m
[31m-	static float speed;[m
[31m-	speed += 0.4;[m
[32m+[m
 	if (keys[SDL_SCANCODE_D])[m
 	{[m
 		x+=5;[m
[36m@@ -49,37 +35,11 @@[m [mvoid Player::update()[m
 	{[m
 		x-=5;[m
 	}[m
[31m-	if (keys[SDL_SCANCODE_W])[m
[31m-	{[m
[31m-		for (int i = 0; i < 16; i++)[m
[31m-		{[m
[31m-			y--;[m
[31m-			if (y >= 0 && y <= 768)[m
[31m-			{[m
[31m-				while (map[y][x + 64] == 0)[m
[31m-				{[m
[31m-					y++;[m
[31m-					//speed = 0;[m
[31m-				}[m
[31m-			}[m
[31m-		}[m
[31m-	}[m
[31m-	for (int i = 0; i < speed; i++)[m
[31m-	{[m
[31m-		y++;[m
[31m-		if (y >= 0 && y <= 768)[m
[31m-		{[m
[31m-			while (map[y + 128][x + 64] == 0 || map[y + 127][x + 64] == 0)[m
[31m-			{[m
[31m-				y--;[m
[31m-				speed = 0;[m
[31m-			}[m
[31m-		}[m
[31m-	}[m
 }[m
 [m
 void Player::draw()[m
 {[m
[31m-	m_sprite->setPosition(x, y);[m
[32m+[m	[32mm_sprite->setX(x);[m
[32m+[m	[32mm_sprite->setY(y);[m
 	m_sprite->draw();[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/Just a Thought/Player.h b/Just a Thought/Player.h[m
[1mindex 7602f7c..04752b6 100644[m
[1m--- a/Just a Thought/Player.h[m	
[1m+++ b/Just a Thought/Player.h[m	
[36m@@ -1,7 +1,7 @@[m
 #pragma once[m
 #include "Sprite.h"[m
 #include <vector>[m
[31m-#include <bitset>[m
[32m+[m
 class Player[m
 {[m
 public:[m
[36m@@ -14,6 +14,5 @@[m [mprivate:[m
 	SDL_Renderer* m_renderer;[m
 	int x;[m
 	int y;[m
[31m-	Uint8 map[768][1024];[m
 };[m
 [m
[1mdiff --git a/Just a Thought/Sprite.cpp b/Just a Thought/Sprite.cpp[m
[1mindex 0a8dc1f..9b3ac10 100644[m
[1m--- a/Just a Thought/Sprite.cpp[m	
[1m+++ b/Just a Thought/Sprite.cpp[m	
[36m@@ -3,8 +3,15 @@[m
 [m
 Sprite::Sprite(SDL_Renderer* renderer)[m
 {[m
[31m-	std::cout << "Sprite created!" << std::endl;[m
[31m-	m_renderer = renderer;[m
[32m+[m	[32mif (renderer != NULL)[m
[32m+[m	[32m{[m
[32m+[m		[32mstd::cout << "Sprite created!" << std::endl;[m
[32m+[m		[32mm_renderer = renderer;[m
[32m+[m	[32m}[m
[32m+[m	[32melse[m
[32m+[m	[32m{[m
[32m+[m		[32mstd::cout << "Renderer undefined for Sprite" << std::endl;[m
[32m+[m	[32m}[m
 }[m
 [m
 Sprite::~Sprite()[m
[36m@@ -13,39 +20,68 @@[m [mSprite::~Sprite()[m
 	SDL_DestroyTexture(m_texture);[m
 }[m
 [m
[31m-void Sprite::setPosition(int x, int y)[m
[32m+[m[32mvoid Sprite::setX(int x)[m
 {[m
 	m_dstRect.x = x;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid Sprite::setY(int y)[m
[32m+[m[32m{[m
 	m_dstRect.y = y;[m
 }[m
 [m
[31m-void Sprite::draw()[m
[32m+[m[32mvoid Sprite::setWidthHeight(int w, int h)[m
[32m+[m[32m{[m
[32m+[m	[32mm_dstRect.w = w;[m
[32m+[m	[32mm_dstRect.h = h;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid Sprite::getWidthHeight(int* w, int* h)[m
[32m+[m[32m{[m
[32m+[m	[32m*w = m_dstRect.w;[m
[32m+[m	[32m*h = m_dstRect.h;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mSDL_Rect* Sprite::getRect()[m
[32m+[m[32m{[m
[32m+[m	[32mreturn &m_dstRect;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvoid Sprite::draw(int alpha)[m
 {[m
[32m+[m	[32mif (alpha < 0)[m
[32m+[m		[32malpha = 0;[m
[32m+[m	[32mif (alpha > 255)[m
[32m+[m		[32malpha = 255;[m
[32m+[m
 	if (m_renderer != NULL && m_texture != NULL)[m
 	{[m
[32m+[m		[32mSDL_SetTextureAlphaMod(m_texture, alpha);[m
 		SDL_RenderCopy(m_renderer, m_texture, NULL, &m_dstRect);[m
 	}[m
 	else[m
 	{[m
[31m-		std::cout << "Renderer or texture is missing" << std::endl;[m
[32m+[m		[32mstd::cout << "Renderer or texture are NULL" << std::endl;[m
 	}[m
 }[m
 [m
[31m-void Sprite::draw(SDL_Rect* clip,int alpha)[m
[32m+[m[32mvoid Sprite::draw(SDL_Rect* clip, int alpha)[m
 {[m
 	if (alpha < 0)[m
 		alpha = 0;[m
 	if (alpha > 255)[m
 		alpha = 255;[m
 [m
[31m-	if (m_renderer != NULL && m_texture != NULL)[m
[32m+[m	[32mif (m_renderer != NULL && m_texture != NULL && clip != NULL)[m
 	{[m
 		SDL_SetTextureAlphaMod(m_texture, alpha);[m
[32m+[m		[32mm_dstRect.w = clip->w;[m
[32m+[m		[32mm_dstRect.h = clip->h;[m
 		SDL_RenderCopy(m_renderer, m_texture, clip, &m_dstRect);[m
 	}[m
 	else[m
 	{[m
[31m-		std::cout << "Renderer or texture is missing" << std::endl;[m
[32m+[m		[32mstd::cout << "Renderer, bounding rect, or texture are NULL" << std::endl;[m
 	}[m
 }[m
 [m
[1mdiff --git a/Just a Thought/Sprite.h b/Just a Thought/Sprite.h[m
[1mindex f801508..77b9bc8 100644[m
[1m--- a/Just a Thought/Sprite.h[m	
[1m+++ b/Just a Thought/Sprite.h[m	
[36m@@ -13,9 +13,13 @@[m [mpublic:[m
 	Sprite (SDL_Renderer* renderer);[m
 	~Sprite();[m
 	void loadImg(std::string path);[m
[31m-	void draw();[m
[31m-	void draw(SDL_Rect* clip,int alpha = 255);[m
[31m-	void setPosition(int x, int y);[m
[32m+[m	[32mvoid draw(int alpha = 255);[m
[32m+[m	[32mvoid draw(SDL_Rect* clip, int alpha = 255);[m
[32m+[m	[32mvoid setX(int x);[m
[32m+[m	[32mvoid setY(int y);[m
[32m+[m	[32mvoid setWidthHeight(int w, int h);[m
[32m+[m	[32mvoid getWidthHeight(int* w, int* h);[m
[32m+[m	[32mSDL_Rect* getRect();[m
 	[m
 private:[m
 [m
[1mdiff --git a/Just a Thought/StateMachine.cpp b/Just a Thought/StateMachine.cpp[m
[1mindex 11f7b90..9b2e65d 100644[m
[1m--- a/Just a Thought/StateMachine.cpp[m	
[1m+++ b/Just a Thought/StateMachine.cpp[m	
[36m@@ -11,13 +11,11 @@[m [mStateMachine::~StateMachine()[m
 [m
 void StateMachine::setState(int state)[m
 {[m
[31m-	if(state != GameState::STATE_NONE)[m
[32m+[m	[32mif(state != GameState::STATE_NONE && state != GameState::STATE_QUIT)[m
 	{ [m
 		delete currentState;[m
 		switch (state)[m
 		{[m
[31m-		case GameState::STATE_QUIT:[m
[31m-			break;[m
 		case GameState::STATE_INTRO:[m
 			currentState = new Intro();[m
 			break;[m
[36m@@ -34,6 +32,10 @@[m [mvoid StateMachine::setState(int state)[m
 		currentState->setRenderer(m_renderer);[m
 		currentState->init();[m
 	}[m
[32m+[m	[32melse if (state == GameState::STATE_QUIT)[m
[32m+[m	[32m{[m
[32m+[m		[32mdelete currentState;[m
[32m+[m	[32m}[m
 }[m
 [m
 int StateMachine::getNextState()[m
[1mdiff --git a/Just a Thought/Title.cpp b/Just a Thought/Title.cpp[m
[1mindex b3ed6e5..a0fc834 100644[m
[1m--- a/Just a Thought/Title.cpp[m	
[1m+++ b/Just a Thought/Title.cpp[m	
[36m@@ -17,22 +17,50 @@[m [mTitle::~Title()[m
 [m
 void Title::update()[m
 {[m
[31m-	if (SDL_BUTTON_LEFT & SDL_GetMouseState(NULL, NULL))[m
[32m+[m	[32mm_play->update();[m
[32m+[m	[32mm_options->update();[m
[32m+[m	[32mm_quit->update();[m
[32m+[m	[32mif (m_play->click())[m
 	{[m
 		nextState = GameState::STATE_LEVEL1;[m
 	}[m
[32m+[m	[32mif (m_options->click())[m
[32m+[m	[32m{[m
[32m+[m		[32mnextState = GameState::STATE_EDITOR;[m
[32m+[m	[32m}[m
[32m+[m	[32mif (m_quit->click())[m
[32m+[m	[32m{[m
[32m+[m		[32mnextState = GameState::STATE_QUIT;[m
[32m+[m	[32m}[m
 }[m
 [m
 void Title::draw()[m
 {[m
 	SDL_RenderClear(m_renderer);[m
 	menu->draw();[m
[32m+[m	[32mm_play->draw();[m
[32m+[m	[32mm_options->draw();[m
[32m+[m	[32mm_quit->draw();[m
 	SDL_RenderPresent(m_renderer);[m
 }[m
 [m
 void Title::init()[m
 {[m
 	menu = new Sprite(m_renderer);[m
[31m-	menu->loadImg("Assets/Graphics/menu2.png");[m
[32m+[m
[32m+[m	[32mmenu->loadImg("Assets/Graphics/tempmenu.png");[m
[32m+[m
[32m+[m	[32mint w, h;[m
[32m+[m	[32mGameSettings::getDimensions(&w, &h);[m
[32m+[m	[32mmenu->setWidthHeight(w, h);[m
[32m+[m	[32mm_play = new MenuButton(m_renderer, "Assets/Graphics/play.png");[m
[32m+[m	[32mm_quit = new MenuButton(m_renderer, "Assets/Graphics/quit.png");[m
[32m+[m	[32mm_options = new MenuButton(m_renderer, "Assets/Graphics/options.png");[m
[32m+[m	[32mm_play->setX(375);[m
[32m+[m	[32mm_play->setY(400);[m
[32m+[m	[32mm_options->setX(375);[m
[32m+[m	[32mm_options->setY(460);[m
[32m+[m	[32mm_quit->setX(375);[m
[32m+[m	[32mm_quit->setY(520);[m
 	SDL_SetRenderDrawColor(m_renderer, 255, 255, 255, 255);[m
 }[m
[1mdiff --git a/Just a Thought/Title.h b/Just a Thought/Title.h[m
[1mindex d6e33ba..c248c42 100644[m
[1m--- a/Just a Thought/Title.h[m	
[1m+++ b/Just a Thought/Title.h[m	
[36m@@ -1,5 +1,7 @@[m
 #pragma once[m
 #include "GameState.h"[m
[32m+[m[32m#include "GameSettings.h"[m
[32m+[m[32m#include "MenuButton.h"[m
 class Title :[m
 	public GameState[m
 {[m
[36m@@ -12,5 +14,9 @@[m [mpublic:[m
 [m
 private:[m
 	Sprite* menu;[m
[32m+[m
[32m+[m	[32mMenuButton* m_play;[m
[32m+[m	[32mMenuButton* m_quit;[m
[32m+[m	[32mMenuButton* m_options;[m
 };[m
 [m
[1mdiff --git a/Just a Thought/main.cpp b/Just a Thought/main.cpp[m
[1mindex ce66aa5..0efed24 100644[m
[1m--- a/Just a Thought/main.cpp[m	
[1m+++ b/Just a Thought/main.cpp[m	
[36m@@ -12,12 +12,13 @@[m [mI know that this probably won't be the magnum opus that I'd really like it to be[m
 #include <SDL_image.h>[m
 #include <SDL_ttf.h>[m
 #include <SDL_mixer.h>[m
[32m+[m[32m#include <SDL_net.h>[m
 [m
 #include "GameEngine.h"[m
 //Main cpp file. This is the program that gets called by the OS. It all starts here.[m
 [m
 //Loads SDL + accompanying libraries[m
[31m-bool initialize();[m
[32m+[m[32mbool initializeLibs();[m
 //Unloads SDL libraries[m
 void shutdown();[m
 [m
[36m@@ -38,10 +39,10 @@[m [mint main(int argc, char* args[])[m
 {[m
 	std::cout << "Welcome to the console output for Just a Thought!" << std::endl << std::endl;[m
 	[m
[31m-	if (initialize())[m
[32m+[m	[32mif (initializeLibs())[m
 	{[m
 		std::cout << "Initialization succeeded! Starting the game." << std::endl;[m
[31m-		GameSettings::setDimensions(1024, 768);[m
[32m+[m		[32mGameSettings::setDimensions(800, 600);[m
 		GameEngine JaT;[m
 		JaT.appLoop();[m
 	}[m
[36m@@ -61,10 +62,10 @@[m [mint main(int argc, char* args[])[m
 [m
 [m
 //Load through each component and terminate if any fail[m
[31m-bool initialize()[m
[32m+[m[32mbool initializeLibs()[m
 {[m
 	bool success = true;[m
[31m-	if (SDL_Init(SDL_INIT_EVERYTHING != 0))[m
[32m+[m	[32mif (SDL_Init(SDL_INIT_EVERYTHING) != 0)[m
 	{[m
 		std::cout << "SDL2 failed to launch! Error: " << SDL_GetError() << std::endl;[m
 		success = false;[m
[36m@@ -87,12 +88,18 @@[m [mbool initialize()[m
 			std::cout << "SDL TTF failed to launch! Error: " << TTF_GetError() << std::endl;[m
 			success = false;[m
 		}[m
[32m+[m		[32mif (SDLNet_Init() == -1)[m
[32m+[m		[32m{[m
[32m+[m			[32mstd::cout << "SDL NET failed to launch! Error: " << SDLNet_GetError() << std::endl;[m
[32m+[m			[32msuccess = false;[m
[32m+[m		[32m}[m
 	}[m
 	return success;[m
 }[m
 [m
 void shutdown()[m
 {[m
[32m+[m	[32mSDLNet_Quit();[m
 	TTF_Quit();[m
 	Mix_Quit();[m
 	IMG_Quit();[m
warning: LF will be replaced by CRLF in Just a Thought/Libraries/include/close_code.h.
The file will have its original line endings in your working directory.
